# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = audacity$(EXEEXT)
@USE_AUDIO_UNITS_TRUE@am__append_1 = $(AUDIOUNITS_CFLAGS)
@USE_AUDIO_UNITS_TRUE@am__append_2 = $(AUDIOUNITS_LIBS)
@USE_AUDIO_UNITS_TRUE@am__append_3 = \
@USE_AUDIO_UNITS_TRUE@	effects/audiounits/AudioUnitEffect.cpp \
@USE_AUDIO_UNITS_TRUE@	effects/audiounits/AudioUnitEffect.h \
@USE_AUDIO_UNITS_TRUE@	$(NULL)

@USE_FFMPEG_TRUE@am__append_4 = $(FFMPEG_CFLAGS)
@USE_FFMPEG_TRUE@am__append_5 = $(FFMPEG_LIBS)
@USE_FFMPEG_TRUE@am__append_6 = \
@USE_FFMPEG_TRUE@	export/ExportFFmpeg.cpp \
@USE_FFMPEG_TRUE@	export/ExportFFmpeg.h \
@USE_FFMPEG_TRUE@	export/ExportFFmpegDialogs.cpp \
@USE_FFMPEG_TRUE@	export/ExportFFmpegDialogs.h \
@USE_FFMPEG_TRUE@	import/ImportFFmpeg.cpp \
@USE_FFMPEG_TRUE@	import/ImportFFmpeg.h \
@USE_FFMPEG_TRUE@	$(NULL)

@USE_GSTREAMER_TRUE@am__append_7 = $(GSTREAMER_CFLAGS)
@USE_GSTREAMER_TRUE@am__append_8 = $(GSTREAMER_LIBS)
@USE_GSTREAMER_TRUE@am__append_9 = \
@USE_GSTREAMER_TRUE@	import/ImportGStreamer.cpp \
@USE_GSTREAMER_TRUE@	import/ImportGStreamer.h \
@USE_GSTREAMER_TRUE@	$(NULL)

@USE_LADSPA_TRUE@am__append_10 = $(LADSPA_CFLAGS)
@USE_LADSPA_TRUE@am__append_11 = $(LADSPA_LIBS)
@USE_LADSPA_TRUE@am__append_12 = \
@USE_LADSPA_TRUE@	effects/ladspa/ladspa.h \
@USE_LADSPA_TRUE@	effects/ladspa/LadspaEffect.cpp \
@USE_LADSPA_TRUE@	effects/ladspa/LadspaEffect.h \
@USE_LADSPA_TRUE@	$(NULL)

@USE_LAME_TRUE@am__append_13 = $(LAME_CFLAGS)
@USE_LAME_TRUE@am__append_14 = $(LAME_LIBS)
@USE_LIBFLAC_TRUE@am__append_15 = $(FLAC_CFLAGS)
@USE_LIBFLAC_TRUE@am__append_16 = $(FLAC_LIBS)
@USE_LIBFLAC_TRUE@am__append_17 = \
@USE_LIBFLAC_TRUE@	ondemand/ODDecodeFlacTask.cpp \
@USE_LIBFLAC_TRUE@	ondemand/ODDecodeFlacTask.h \
@USE_LIBFLAC_TRUE@	$(NULL)

@USE_LIBID3TAG_TRUE@am__append_18 = $(ID3TAG_CFLAGS)
@USE_LIBID3TAG_TRUE@am__append_19 = $(ID3TAG_LIBS)
@USE_LIBMAD_TRUE@am__append_20 = $(LIBMAD_CFLAGS)
@USE_LIBMAD_TRUE@am__append_21 = $(LIBMAD_LIBS)
@USE_LIBNYQUIST_TRUE@am__append_22 = $(LIBNYQUIST_CFLAGS)
@USE_LIBNYQUIST_TRUE@am__append_23 = $(LIBNYQUIST_LIBS)
@USE_LIBNYQUIST_TRUE@am__append_24 = \
@USE_LIBNYQUIST_TRUE@	effects/nyquist/LoadNyquist.cpp \
@USE_LIBNYQUIST_TRUE@	effects/nyquist/LoadNyquist.h \
@USE_LIBNYQUIST_TRUE@	effects/nyquist/Nyquist.cpp \
@USE_LIBNYQUIST_TRUE@	effects/nyquist/Nyquist.h \
@USE_LIBNYQUIST_TRUE@	$(NULL)

@USE_LIBSOUNDTOUCH_TRUE@am__append_25 = $(SOUNDTOUCH_CFLAGS)
@USE_LIBSOUNDTOUCH_TRUE@am__append_26 = $(SOUNDTOUCH_LIBS)
@USE_LIBTWOLAME_TRUE@am__append_27 = $(LIBTWOLAME_CFLAGS)
@USE_LIBTWOLAME_TRUE@am__append_28 = $(LIBTWOLAME_LIBS)
@USE_LIBVORBIS_TRUE@am__append_29 = $(LIBVORBIS_CFLAGS)
@USE_LIBVORBIS_TRUE@am__append_30 = $(LIBVORBIS_LIBS)
@USE_LV2_TRUE@am__append_31 = $(LV2_CFLAGS)
@USE_LV2_TRUE@am__append_32 = $(LV2_LIBS)
@USE_LV2_TRUE@am__append_33 = \
@USE_LV2_TRUE@	effects/lv2/LoadLV2.cpp \
@USE_LV2_TRUE@	effects/lv2/LoadLV2.h \
@USE_LV2_TRUE@	effects/lv2/LV2Effect.cpp \
@USE_LV2_TRUE@	effects/lv2/LV2Effect.h \
@USE_LV2_TRUE@	$(NULL)

@USE_PORTSMF_TRUE@am__append_34 = $(PORTSMF_CFLAGS)
@USE_PORTSMF_TRUE@am__append_35 = $(PORTSMF_LIBS)
@USE_PORTSMF_TRUE@am__append_36 = \
@USE_PORTSMF_TRUE@	NoteTrack.cpp \
@USE_PORTSMF_TRUE@	NoteTrack.h \
@USE_PORTSMF_TRUE@	import/ImportMIDI.cpp \
@USE_PORTSMF_TRUE@	import/ImportMIDI.h \
@USE_PORTSMF_TRUE@	$(NULL)

@USE_QUICKTIME_TRUE@am__append_37 = $(QUICKTIME_CFLAGS)
@USE_QUICKTIME_TRUE@am__append_38 = $(QUICKTIME_LIBS)
@USE_QUICKTIME_TRUE@am__append_39 = \
@USE_QUICKTIME_TRUE@	import/ImportQT.cpp \
@USE_QUICKTIME_TRUE@	import/ImportQT.h \
@USE_QUICKTIME_TRUE@	$(NULL)

@USE_SBSMS_TRUE@am__append_40 = $(SBSMS_CFLAGS)
@USE_SBSMS_TRUE@am__append_41 = $(SBSMS_LIBS)
@USE_VAMP_TRUE@am__append_42 = $(VAMP_CFLAGS)
@USE_VAMP_TRUE@am__append_43 = $(VAMP_LIBS)
@USE_VAMP_TRUE@am__append_44 = \
@USE_VAMP_TRUE@	effects/vamp/LoadVamp.cpp \
@USE_VAMP_TRUE@	effects/vamp/LoadVamp.h \
@USE_VAMP_TRUE@	effects/vamp/VampEffect.cpp \
@USE_VAMP_TRUE@	effects/vamp/VampEffect.h \
@USE_VAMP_TRUE@	$(NULL)

@USE_VST_TRUE@am__append_45 = $(VST_CFLAGS)
@USE_VST_TRUE@am__append_46 = $(VST_LIBS)
@USE_VST_TRUE@am__append_47 = \
@USE_VST_TRUE@	effects/VST/aeffectx.h \
@USE_VST_TRUE@	effects/VST/VSTEffect.cpp \
@USE_VST_TRUE@	effects/VST/VSTEffect.h \
@USE_VST_TRUE@	$(NULL)

subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/configtemplate.h $(srcdir)/audacity.desktop.in \
	$(top_srcdir)/autotools/depcomp $(dist_mime_DATA)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_c99_func_lrint.m4 \
	$(top_srcdir)/m4/ac_c99_func_lrintf.m4 \
	$(top_srcdir)/m4/audacity_checklib_ffmpeg.m4 \
	$(top_srcdir)/m4/audacity_checklib_gstreamer.m4 \
	$(top_srcdir)/m4/audacity_checklib_lame.m4 \
	$(top_srcdir)/m4/audacity_checklib_libexpat.m4 \
	$(top_srcdir)/m4/audacity_checklib_libflac.m4 \
	$(top_srcdir)/m4/audacity_checklib_libid3tag.m4 \
	$(top_srcdir)/m4/audacity_checklib_libmad.m4 \
	$(top_srcdir)/m4/audacity_checklib_libnyquist.m4 \
	$(top_srcdir)/m4/audacity_checklib_libsbsms.m4 \
	$(top_srcdir)/m4/audacity_checklib_libsndfile.m4 \
	$(top_srcdir)/m4/audacity_checklib_libsoundtouch.m4 \
	$(top_srcdir)/m4/audacity_checklib_libsoxr.m4 \
	$(top_srcdir)/m4/audacity_checklib_libtwolame.m4 \
	$(top_srcdir)/m4/audacity_checklib_libvamp.m4 \
	$(top_srcdir)/m4/audacity_checklib_libvorbis.m4 \
	$(top_srcdir)/m4/audacity_checklib_lv2.m4 \
	$(top_srcdir)/m4/audacity_checklib_portaudio.m4 \
	$(top_srcdir)/m4/audacity_checklib_portsmf.m4 \
	$(top_srcdir)/m4/audacity_checklib_widgetextra.m4 \
	$(top_srcdir)/m4/ax_cflags_strict_prototypes.m4 \
	$(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/m4/ax_check_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_cxx_check_flag.m4 \
	$(top_srcdir)/m4/ax_cxxcpp_check_flag.m4 \
	$(top_srcdir)/m4/ax_ld_check_flag.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/visibility.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = configwin.h configunix.h
CONFIG_CLEAN_FILES = audacity.desktop
CONFIG_CLEAN_VPATH_FILES =
am__DEPENDENCIES_1 =
libaudacity_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_libaudacity_la_OBJECTS = libaudacity_la-BlockFile.lo \
	libaudacity_la-DirManager.lo libaudacity_la-Dither.lo \
	libaudacity_la-FileFormats.lo libaudacity_la-Internat.lo \
	libaudacity_la-Prefs.lo libaudacity_la-SampleFormat.lo \
	libaudacity_la-Sequence.lo \
	blockfile/libaudacity_la-LegacyAliasBlockFile.lo \
	blockfile/libaudacity_la-LegacyBlockFile.lo \
	blockfile/libaudacity_la-ODDecodeBlockFile.lo \
	blockfile/libaudacity_la-ODPCMAliasBlockFile.lo \
	blockfile/libaudacity_la-PCMAliasBlockFile.lo \
	blockfile/libaudacity_la-SilentBlockFile.lo \
	blockfile/libaudacity_la-SimpleBlockFile.lo \
	xml/libaudacity_la-XMLTagHandler.lo
libaudacity_la_OBJECTS = $(am_libaudacity_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(mimedir)"
PROGRAMS = $(bin_PROGRAMS)
am__audacity_SOURCES_DIST = BlockFile.cpp BlockFile.h DirManager.cpp \
	DirManager.h Dither.cpp Dither.h FileFormats.cpp FileFormats.h \
	Internat.cpp Internat.h Prefs.cpp Prefs.h SampleFormat.cpp \
	SampleFormat.h Sequence.cpp Sequence.h \
	blockfile/LegacyAliasBlockFile.cpp \
	blockfile/LegacyAliasBlockFile.h blockfile/LegacyBlockFile.cpp \
	blockfile/LegacyBlockFile.h blockfile/ODDecodeBlockFile.cpp \
	blockfile/ODDecodeBlockFile.h \
	blockfile/ODPCMAliasBlockFile.cpp \
	blockfile/ODPCMAliasBlockFile.h \
	blockfile/PCMAliasBlockFile.cpp blockfile/PCMAliasBlockFile.h \
	blockfile/SilentBlockFile.cpp blockfile/SilentBlockFile.h \
	blockfile/SimpleBlockFile.cpp blockfile/SimpleBlockFile.h \
	xml/XMLTagHandler.cpp xml/XMLTagHandler.h AboutDialog.cpp \
	AboutDialog.h AColor.cpp AColor.h AllThemeResources.h \
	Audacity.h AudacityApp.cpp AudacityApp.h AudacityLogger.cpp \
	AudacityLogger.h AudioIO.cpp AudioIO.h AudioIOListenerer.h \
	AutoRecovery.cpp AutoRecovery.h BatchCommandDialog.cpp \
	BatchCommandDialog.h BatchCommands.cpp BatchCommands.h \
	BatchProcessDialog.cpp BatchProcessDialog.h Benchmark.cpp \
	Benchmark.h CaptureEvents.cpp CaptureEvents.h Dependencies.cpp \
	Dependencies.h DeviceChange.cpp DeviceChange.h \
	DeviceManager.cpp DeviceManager.h Diags.cpp Diags.h \
	Envelope.cpp Envelope.h Experimental.h FFmpeg.cpp FFmpeg.h \
	FFT.cpp FFT.h FileIO.cpp FileIO.h FileNames.cpp FileNames.h \
	float_cast.h FreqWindow.cpp FreqWindow.h HelpText.cpp \
	HelpText.h HistoryWindow.cpp HistoryWindow.h \
	ImageManipulation.cpp ImageManipulation.h InterpolateAudio.cpp \
	InterpolateAudio.h LabelDialog.cpp LabelDialog.h \
	LabelTrack.cpp LabelTrack.h LangChoice.cpp LangChoice.h \
	Languages.cpp Languages.h Legacy.cpp Legacy.h Lyrics.cpp \
	Lyrics.h LyricsWindow.cpp LyricsWindow.h MacroMagic.h \
	Matrix.cpp Matrix.h Menus.cpp Menus.h Mix.cpp Mix.h \
	MixerBoard.cpp MixerBoard.h ModuleManager.cpp ModuleManager.h \
	PitchName.cpp PitchName.h PlatformCompatibility.cpp \
	PlatformCompatibility.h PluginManager.cpp PluginManager.h \
	Printing.cpp Printing.h Profiler.cpp Profiler.h Project.cpp \
	Project.h RealFFTf.cpp RealFFTf.h RealFFTf48x.cpp \
	RealFFTf48x.h Resample.cpp Resample.h RevisionIdent.h \
	RingBuffer.cpp RingBuffer.h Screenshot.cpp Screenshot.h \
	SelectedRegion.cpp SelectedRegion.h Shuttle.cpp Shuttle.h \
	ShuttleGui.cpp ShuttleGui.h ShuttlePrefs.cpp ShuttlePrefs.h \
	Snap.cpp Snap.h SoundActivatedRecord.cpp \
	SoundActivatedRecord.h Spectrum.cpp Spectrum.h \
	SplashDialog.cpp SplashDialog.h SseMathFuncs.cpp \
	SseMathFuncs.h Tags.cpp Tags.h Theme.cpp Theme.h \
	ThemeAsCeeCode.h TimeDialog.cpp TimeDialog.h \
	TimerRecordDialog.cpp TimerRecordDialog.h TimeTrack.cpp \
	TimeTrack.h Track.cpp Track.h TrackArtist.cpp TrackArtist.h \
	TrackPanel.cpp TrackPanel.h TrackPanelAx.cpp TrackPanelAx.h \
	UndoManager.cpp UndoManager.h ViewInfo.cpp ViewInfo.h \
	VoiceKey.cpp VoiceKey.h WaveClip.cpp WaveClip.h WaveTrack.cpp \
	WaveTrack.h WrappedType.cpp WrappedType.h \
	commands/AppCommandEvent.cpp commands/AppCommandEvent.h \
	commands/BatchEvalCommand.cpp commands/BatchEvalCommand.h \
	commands/Command.cpp commands/Command.h \
	commands/CommandBuilder.cpp commands/CommandBuilder.h \
	commands/CommandDirectory.cpp commands/CommandDirectory.h \
	commands/CommandHandler.cpp commands/CommandHandler.h \
	commands/CommandManager.cpp commands/CommandManager.h \
	commands/CommandMisc.h commands/CommandSignature.cpp \
	commands/CommandSignature.h commands/CommandTargets.h \
	commands/CommandType.cpp commands/CommandType.h \
	commands/CompareAudioCommand.cpp \
	commands/CompareAudioCommand.h commands/ExecMenuCommand.cpp \
	commands/ExecMenuCommand.h commands/GetAllMenuCommands.cpp \
	commands/GetAllMenuCommands.h \
	commands/GetProjectInfoCommand.cpp \
	commands/GetProjectInfoCommand.h \
	commands/GetTrackInfoCommand.cpp \
	commands/GetTrackInfoCommand.h commands/HelpCommand.cpp \
	commands/HelpCommand.h commands/ImportExportCommands.cpp \
	commands/ImportExportCommands.h commands/Keyboard.cpp \
	commands/Keyboard.h commands/MessageCommand.cpp \
	commands/MessageCommand.h commands/OpenSaveCommands.cpp \
	commands/OpenSaveCommands.h commands/PreferenceCommands.cpp \
	commands/PreferenceCommands.h commands/ResponseQueue.cpp \
	commands/ResponseQueue.h commands/ScreenshotCommand.cpp \
	commands/ScreenshotCommand.h commands/ScriptCommandRelay.cpp \
	commands/ScriptCommandRelay.h commands/SelectCommand.cpp \
	commands/SelectCommand.h commands/SetProjectInfoCommand.cpp \
	commands/SetProjectInfoCommand.h \
	commands/SetTrackInfoCommand.cpp \
	commands/SetTrackInfoCommand.h commands/Validators.h \
	effects/Amplify.cpp effects/Amplify.h effects/AutoDuck.cpp \
	effects/AutoDuck.h effects/BassTreble.cpp effects/BassTreble.h \
	effects/Biquad.cpp effects/Biquad.h effects/ChangePitch.cpp \
	effects/ChangePitch.h effects/ChangeSpeed.cpp \
	effects/ChangeSpeed.h effects/ChangeTempo.cpp \
	effects/ChangeTempo.h effects/ClickRemoval.cpp \
	effects/ClickRemoval.h effects/Compressor.cpp \
	effects/Compressor.h effects/Contrast.cpp effects/Contrast.h \
	effects/DtmfGen.cpp effects/DtmfGen.h effects/Echo.cpp \
	effects/Echo.h effects/Effect.cpp effects/Effect.h \
	effects/EffectManager.cpp effects/EffectManager.h \
	effects/EffectRack.cpp effects/EffectRack.h \
	effects/Equalization.cpp effects/Equalization.h \
	effects/Equalization48x.cpp effects/Equalization48x.h \
	effects/Fade.cpp effects/Fade.h effects/FindClipping.cpp \
	effects/FindClipping.h effects/Generator.cpp \
	effects/Generator.h effects/Invert.cpp effects/Invert.h \
	effects/Leveller.cpp effects/Leveller.h \
	effects/LoadEffects.cpp effects/LoadEffects.h \
	effects/Noise.cpp effects/Noise.h effects/NoiseReduction.cpp \
	effects/NoiseReduction.h effects/NoiseRemoval.cpp \
	effects/NoiseRemoval.h effects/Normalize.cpp \
	effects/Normalize.h effects/Paulstretch.cpp \
	effects/Paulstretch.h effects/Phaser.cpp effects/Phaser.h \
	effects/Repair.cpp effects/Repair.h effects/Repeat.cpp \
	effects/Repeat.h effects/Reverb.cpp effects/Reverb.h \
	effects/Reverb_libSoX.h effects/Reverse.cpp effects/Reverse.h \
	effects/SBSMSEffect.cpp effects/SBSMSEffect.h \
	effects/ScienFilter.cpp effects/ScienFilter.h \
	effects/Silence.cpp effects/Silence.h effects/SimpleMono.cpp \
	effects/SimpleMono.h effects/SoundTouchEffect.cpp \
	effects/SoundTouchEffect.h effects/StereoToMono.cpp \
	effects/StereoToMono.h effects/TimeScale.cpp \
	effects/TimeScale.h effects/TimeWarper.cpp \
	effects/TimeWarper.h effects/ToneGen.cpp effects/ToneGen.h \
	effects/TruncSilence.cpp effects/TruncSilence.h \
	effects/TwoPassSimpleMono.cpp effects/TwoPassSimpleMono.h \
	effects/Wahwah.cpp effects/Wahwah.h export/Export.cpp \
	export/Export.h export/ExportCL.cpp export/ExportCL.h \
	export/ExportFLAC.cpp export/ExportFLAC.h export/ExportMP2.cpp \
	export/ExportMP2.h export/ExportMP3.cpp export/ExportMP3.h \
	export/ExportMultiple.cpp export/ExportMultiple.h \
	export/ExportOGG.cpp export/ExportOGG.h export/ExportPCM.cpp \
	export/ExportPCM.h import/Import.cpp import/Import.h \
	import/ImportFLAC.cpp import/ImportFLAC.h import/ImportLOF.cpp \
	import/ImportLOF.h import/ImportMP3.cpp import/ImportMP3.h \
	import/ImportOGG.cpp import/ImportOGG.h import/ImportPCM.cpp \
	import/ImportPCM.h import/ImportPlugin.h import/ImportRaw.cpp \
	import/ImportRaw.h import/RawAudioGuess.cpp \
	import/RawAudioGuess.h import/FormatClassifier.cpp \
	import/FormatClassifier.h import/MultiFormatReader.cpp \
	import/MultiFormatReader.h import/SpecPowerMeter.cpp \
	import/SpecPowerMeter.h ondemand/ODComputeSummaryTask.cpp \
	ondemand/ODComputeSummaryTask.h \
	ondemand/ODDecodeFFmpegTask.cpp ondemand/ODDecodeFFmpegTask.h \
	ondemand/ODDecodeTask.cpp ondemand/ODDecodeTask.h \
	ondemand/ODManager.cpp ondemand/ODManager.h \
	ondemand/ODTask.cpp ondemand/ODTask.h \
	ondemand/ODTaskThread.cpp ondemand/ODTaskThread.h \
	ondemand/ODWaveTrackTaskQueue.cpp \
	ondemand/ODWaveTrackTaskQueue.h prefs/BatchPrefs.cpp \
	prefs/BatchPrefs.h prefs/DevicePrefs.cpp prefs/DevicePrefs.h \
	prefs/DirectoriesPrefs.cpp prefs/DirectoriesPrefs.h \
	prefs/EffectsPrefs.cpp prefs/EffectsPrefs.h \
	prefs/ExtImportPrefs.cpp prefs/ExtImportPrefs.h \
	prefs/GUIPrefs.cpp prefs/GUIPrefs.h \
	prefs/ImportExportPrefs.cpp prefs/ImportExportPrefs.h \
	prefs/KeyConfigPrefs.cpp prefs/KeyConfigPrefs.h \
	prefs/LibraryPrefs.cpp prefs/LibraryPrefs.h \
	prefs/MidiIOPrefs.cpp prefs/MidiIOPrefs.h \
	prefs/ModulePrefs.cpp prefs/ModulePrefs.h prefs/MousePrefs.cpp \
	prefs/MousePrefs.h prefs/PlaybackPrefs.cpp \
	prefs/PlaybackPrefs.h prefs/PrefsDialog.cpp \
	prefs/PrefsDialog.h prefs/PrefsPanel.h prefs/ProjectsPrefs.cpp \
	prefs/ProjectsPrefs.h prefs/QualityPrefs.cpp \
	prefs/QualityPrefs.h prefs/RecordingPrefs.cpp \
	prefs/RecordingPrefs.h prefs/SpectrumPrefs.cpp \
	prefs/SpectrumPrefs.h prefs/ThemePrefs.cpp prefs/ThemePrefs.h \
	prefs/TracksPrefs.cpp prefs/TracksPrefs.h \
	prefs/WarningsPrefs.cpp prefs/WarningsPrefs.h \
	toolbars/ControlToolBar.cpp toolbars/ControlToolBar.h \
	toolbars/DeviceToolBar.cpp toolbars/DeviceToolBar.h \
	toolbars/EditToolBar.cpp toolbars/EditToolBar.h \
	toolbars/MeterToolBar.cpp toolbars/MeterToolBar.h \
	toolbars/MixerToolBar.cpp toolbars/MixerToolBar.h \
	toolbars/SelectionBar.cpp toolbars/SelectionBar.h \
	toolbars/SpectralSelectionBar.cpp \
	toolbars/SpectralSelectionBar.h \
	toolbars/SpectralSelectionBarListener.h toolbars/ToolBar.cpp \
	toolbars/ToolBar.h toolbars/ToolDock.cpp toolbars/ToolDock.h \
	toolbars/ToolManager.cpp toolbars/ToolManager.h \
	toolbars/ToolsToolBar.cpp toolbars/ToolsToolBar.h \
	toolbars/TranscriptionToolBar.cpp \
	toolbars/TranscriptionToolBar.h widgets/AButton.cpp \
	widgets/AButton.h widgets/ASlider.cpp widgets/ASlider.h \
	widgets/AttachableScrollBar.cpp widgets/AttachableScrollBar.h \
	widgets/ErrorDialog.cpp widgets/ErrorDialog.h \
	widgets/ExpandingToolBar.cpp widgets/ExpandingToolBar.h \
	widgets/FileHistory.cpp widgets/FileHistory.h \
	widgets/Grabber.cpp widgets/Grabber.h widgets/Grid.cpp \
	widgets/Grid.h widgets/HelpSystem.cpp widgets/HelpSystem.h \
	widgets/HtmlWindow.cpp widgets/HtmlWindow.h \
	widgets/ImageRoll.cpp widgets/ImageRoll.h widgets/KeyView.cpp \
	widgets/KeyView.h widgets/LinkingHtmlWindow.cpp \
	widgets/LinkingHtmlWindow.h widgets/Meter.cpp widgets/Meter.h \
	widgets/MultiDialog.cpp widgets/MultiDialog.h \
	widgets/NumericTextCtrl.cpp widgets/NumericTextCtrl.h \
	widgets/numformatter.cpp widgets/numformatter.h \
	widgets/ProgressDialog.cpp widgets/ProgressDialog.h \
	widgets/Ruler.cpp widgets/Ruler.h widgets/valnum.cpp \
	widgets/valnum.h widgets/Warning.cpp widgets/Warning.h \
	xml/XMLFileReader.cpp xml/XMLFileReader.h xml/XMLWriter.cpp \
	xml/XMLWriter.h effects/audiounits/AudioUnitEffect.cpp \
	effects/audiounits/AudioUnitEffect.h export/ExportFFmpeg.cpp \
	export/ExportFFmpeg.h export/ExportFFmpegDialogs.cpp \
	export/ExportFFmpegDialogs.h import/ImportFFmpeg.cpp \
	import/ImportFFmpeg.h import/ImportGStreamer.cpp \
	import/ImportGStreamer.h effects/ladspa/ladspa.h \
	effects/ladspa/LadspaEffect.cpp effects/ladspa/LadspaEffect.h \
	ondemand/ODDecodeFlacTask.cpp ondemand/ODDecodeFlacTask.h \
	effects/nyquist/LoadNyquist.cpp effects/nyquist/LoadNyquist.h \
	effects/nyquist/Nyquist.cpp effects/nyquist/Nyquist.h \
	effects/lv2/LoadLV2.cpp effects/lv2/LoadLV2.h \
	effects/lv2/LV2Effect.cpp effects/lv2/LV2Effect.h \
	NoteTrack.cpp NoteTrack.h import/ImportMIDI.cpp \
	import/ImportMIDI.h import/ImportQT.cpp import/ImportQT.h \
	effects/vamp/LoadVamp.cpp effects/vamp/LoadVamp.h \
	effects/vamp/VampEffect.cpp effects/vamp/VampEffect.h \
	effects/VST/aeffectx.h effects/VST/VSTEffect.cpp \
	effects/VST/VSTEffect.h
am__objects_1 = audacity-BlockFile.$(OBJEXT) \
	audacity-DirManager.$(OBJEXT) audacity-Dither.$(OBJEXT) \
	audacity-FileFormats.$(OBJEXT) audacity-Internat.$(OBJEXT) \
	audacity-Prefs.$(OBJEXT) audacity-SampleFormat.$(OBJEXT) \
	audacity-Sequence.$(OBJEXT) \
	blockfile/audacity-LegacyAliasBlockFile.$(OBJEXT) \
	blockfile/audacity-LegacyBlockFile.$(OBJEXT) \
	blockfile/audacity-ODDecodeBlockFile.$(OBJEXT) \
	blockfile/audacity-ODPCMAliasBlockFile.$(OBJEXT) \
	blockfile/audacity-PCMAliasBlockFile.$(OBJEXT) \
	blockfile/audacity-SilentBlockFile.$(OBJEXT) \
	blockfile/audacity-SimpleBlockFile.$(OBJEXT) \
	xml/audacity-XMLTagHandler.$(OBJEXT)
@USE_AUDIO_UNITS_TRUE@am__objects_2 = effects/audiounits/audacity-AudioUnitEffect.$(OBJEXT)
@USE_FFMPEG_TRUE@am__objects_3 =  \
@USE_FFMPEG_TRUE@	export/audacity-ExportFFmpeg.$(OBJEXT) \
@USE_FFMPEG_TRUE@	export/audacity-ExportFFmpegDialogs.$(OBJEXT) \
@USE_FFMPEG_TRUE@	import/audacity-ImportFFmpeg.$(OBJEXT)
@USE_GSTREAMER_TRUE@am__objects_4 =  \
@USE_GSTREAMER_TRUE@	import/audacity-ImportGStreamer.$(OBJEXT)
@USE_LADSPA_TRUE@am__objects_5 = effects/ladspa/audacity-LadspaEffect.$(OBJEXT)
@USE_LIBFLAC_TRUE@am__objects_6 = ondemand/audacity-ODDecodeFlacTask.$(OBJEXT)
@USE_LIBNYQUIST_TRUE@am__objects_7 = effects/nyquist/audacity-LoadNyquist.$(OBJEXT) \
@USE_LIBNYQUIST_TRUE@	effects/nyquist/audacity-Nyquist.$(OBJEXT)
@USE_LV2_TRUE@am__objects_8 = effects/lv2/audacity-LoadLV2.$(OBJEXT) \
@USE_LV2_TRUE@	effects/lv2/audacity-LV2Effect.$(OBJEXT)
@USE_PORTSMF_TRUE@am__objects_9 = audacity-NoteTrack.$(OBJEXT) \
@USE_PORTSMF_TRUE@	import/audacity-ImportMIDI.$(OBJEXT)
@USE_QUICKTIME_TRUE@am__objects_10 =  \
@USE_QUICKTIME_TRUE@	import/audacity-ImportQT.$(OBJEXT)
@USE_VAMP_TRUE@am__objects_11 =  \
@USE_VAMP_TRUE@	effects/vamp/audacity-LoadVamp.$(OBJEXT) \
@USE_VAMP_TRUE@	effects/vamp/audacity-VampEffect.$(OBJEXT)
@USE_VST_TRUE@am__objects_12 =  \
@USE_VST_TRUE@	effects/VST/audacity-VSTEffect.$(OBJEXT)
am_audacity_OBJECTS = $(am__objects_1) audacity-AboutDialog.$(OBJEXT) \
	audacity-AColor.$(OBJEXT) audacity-AudacityApp.$(OBJEXT) \
	audacity-AudacityLogger.$(OBJEXT) audacity-AudioIO.$(OBJEXT) \
	audacity-AutoRecovery.$(OBJEXT) \
	audacity-BatchCommandDialog.$(OBJEXT) \
	audacity-BatchCommands.$(OBJEXT) \
	audacity-BatchProcessDialog.$(OBJEXT) \
	audacity-Benchmark.$(OBJEXT) audacity-CaptureEvents.$(OBJEXT) \
	audacity-Dependencies.$(OBJEXT) \
	audacity-DeviceChange.$(OBJEXT) \
	audacity-DeviceManager.$(OBJEXT) audacity-Diags.$(OBJEXT) \
	audacity-Envelope.$(OBJEXT) audacity-FFmpeg.$(OBJEXT) \
	audacity-FFT.$(OBJEXT) audacity-FileIO.$(OBJEXT) \
	audacity-FileNames.$(OBJEXT) audacity-FreqWindow.$(OBJEXT) \
	audacity-HelpText.$(OBJEXT) audacity-HistoryWindow.$(OBJEXT) \
	audacity-ImageManipulation.$(OBJEXT) \
	audacity-InterpolateAudio.$(OBJEXT) \
	audacity-LabelDialog.$(OBJEXT) audacity-LabelTrack.$(OBJEXT) \
	audacity-LangChoice.$(OBJEXT) audacity-Languages.$(OBJEXT) \
	audacity-Legacy.$(OBJEXT) audacity-Lyrics.$(OBJEXT) \
	audacity-LyricsWindow.$(OBJEXT) audacity-Matrix.$(OBJEXT) \
	audacity-Menus.$(OBJEXT) audacity-Mix.$(OBJEXT) \
	audacity-MixerBoard.$(OBJEXT) audacity-ModuleManager.$(OBJEXT) \
	audacity-PitchName.$(OBJEXT) \
	audacity-PlatformCompatibility.$(OBJEXT) \
	audacity-PluginManager.$(OBJEXT) audacity-Printing.$(OBJEXT) \
	audacity-Profiler.$(OBJEXT) audacity-Project.$(OBJEXT) \
	audacity-RealFFTf.$(OBJEXT) audacity-RealFFTf48x.$(OBJEXT) \
	audacity-Resample.$(OBJEXT) audacity-RingBuffer.$(OBJEXT) \
	audacity-Screenshot.$(OBJEXT) \
	audacity-SelectedRegion.$(OBJEXT) audacity-Shuttle.$(OBJEXT) \
	audacity-ShuttleGui.$(OBJEXT) audacity-ShuttlePrefs.$(OBJEXT) \
	audacity-Snap.$(OBJEXT) \
	audacity-SoundActivatedRecord.$(OBJEXT) \
	audacity-Spectrum.$(OBJEXT) audacity-SplashDialog.$(OBJEXT) \
	audacity-SseMathFuncs.$(OBJEXT) audacity-Tags.$(OBJEXT) \
	audacity-Theme.$(OBJEXT) audacity-TimeDialog.$(OBJEXT) \
	audacity-TimerRecordDialog.$(OBJEXT) \
	audacity-TimeTrack.$(OBJEXT) audacity-Track.$(OBJEXT) \
	audacity-TrackArtist.$(OBJEXT) audacity-TrackPanel.$(OBJEXT) \
	audacity-TrackPanelAx.$(OBJEXT) audacity-UndoManager.$(OBJEXT) \
	audacity-ViewInfo.$(OBJEXT) audacity-VoiceKey.$(OBJEXT) \
	audacity-WaveClip.$(OBJEXT) audacity-WaveTrack.$(OBJEXT) \
	audacity-WrappedType.$(OBJEXT) \
	commands/audacity-AppCommandEvent.$(OBJEXT) \
	commands/audacity-BatchEvalCommand.$(OBJEXT) \
	commands/audacity-Command.$(OBJEXT) \
	commands/audacity-CommandBuilder.$(OBJEXT) \
	commands/audacity-CommandDirectory.$(OBJEXT) \
	commands/audacity-CommandHandler.$(OBJEXT) \
	commands/audacity-CommandManager.$(OBJEXT) \
	commands/audacity-CommandSignature.$(OBJEXT) \
	commands/audacity-CommandType.$(OBJEXT) \
	commands/audacity-CompareAudioCommand.$(OBJEXT) \
	commands/audacity-ExecMenuCommand.$(OBJEXT) \
	commands/audacity-GetAllMenuCommands.$(OBJEXT) \
	commands/audacity-GetProjectInfoCommand.$(OBJEXT) \
	commands/audacity-GetTrackInfoCommand.$(OBJEXT) \
	commands/audacity-HelpCommand.$(OBJEXT) \
	commands/audacity-ImportExportCommands.$(OBJEXT) \
	commands/audacity-Keyboard.$(OBJEXT) \
	commands/audacity-MessageCommand.$(OBJEXT) \
	commands/audacity-OpenSaveCommands.$(OBJEXT) \
	commands/audacity-PreferenceCommands.$(OBJEXT) \
	commands/audacity-ResponseQueue.$(OBJEXT) \
	commands/audacity-ScreenshotCommand.$(OBJEXT) \
	commands/audacity-ScriptCommandRelay.$(OBJEXT) \
	commands/audacity-SelectCommand.$(OBJEXT) \
	commands/audacity-SetProjectInfoCommand.$(OBJEXT) \
	commands/audacity-SetTrackInfoCommand.$(OBJEXT) \
	effects/audacity-Amplify.$(OBJEXT) \
	effects/audacity-AutoDuck.$(OBJEXT) \
	effects/audacity-BassTreble.$(OBJEXT) \
	effects/audacity-Biquad.$(OBJEXT) \
	effects/audacity-ChangePitch.$(OBJEXT) \
	effects/audacity-ChangeSpeed.$(OBJEXT) \
	effects/audacity-ChangeTempo.$(OBJEXT) \
	effects/audacity-ClickRemoval.$(OBJEXT) \
	effects/audacity-Compressor.$(OBJEXT) \
	effects/audacity-Contrast.$(OBJEXT) \
	effects/audacity-DtmfGen.$(OBJEXT) \
	effects/audacity-Echo.$(OBJEXT) \
	effects/audacity-Effect.$(OBJEXT) \
	effects/audacity-EffectManager.$(OBJEXT) \
	effects/audacity-EffectRack.$(OBJEXT) \
	effects/audacity-Equalization.$(OBJEXT) \
	effects/audacity-Equalization48x.$(OBJEXT) \
	effects/audacity-Fade.$(OBJEXT) \
	effects/audacity-FindClipping.$(OBJEXT) \
	effects/audacity-Generator.$(OBJEXT) \
	effects/audacity-Invert.$(OBJEXT) \
	effects/audacity-Leveller.$(OBJEXT) \
	effects/audacity-LoadEffects.$(OBJEXT) \
	effects/audacity-Noise.$(OBJEXT) \
	effects/audacity-NoiseReduction.$(OBJEXT) \
	effects/audacity-NoiseRemoval.$(OBJEXT) \
	effects/audacity-Normalize.$(OBJEXT) \
	effects/audacity-Paulstretch.$(OBJEXT) \
	effects/audacity-Phaser.$(OBJEXT) \
	effects/audacity-Repair.$(OBJEXT) \
	effects/audacity-Repeat.$(OBJEXT) \
	effects/audacity-Reverb.$(OBJEXT) \
	effects/audacity-Reverse.$(OBJEXT) \
	effects/audacity-SBSMSEffect.$(OBJEXT) \
	effects/audacity-ScienFilter.$(OBJEXT) \
	effects/audacity-Silence.$(OBJEXT) \
	effects/audacity-SimpleMono.$(OBJEXT) \
	effects/audacity-SoundTouchEffect.$(OBJEXT) \
	effects/audacity-StereoToMono.$(OBJEXT) \
	effects/audacity-TimeScale.$(OBJEXT) \
	effects/audacity-TimeWarper.$(OBJEXT) \
	effects/audacity-ToneGen.$(OBJEXT) \
	effects/audacity-TruncSilence.$(OBJEXT) \
	effects/audacity-TwoPassSimpleMono.$(OBJEXT) \
	effects/audacity-Wahwah.$(OBJEXT) \
	export/audacity-Export.$(OBJEXT) \
	export/audacity-ExportCL.$(OBJEXT) \
	export/audacity-ExportFLAC.$(OBJEXT) \
	export/audacity-ExportMP2.$(OBJEXT) \
	export/audacity-ExportMP3.$(OBJEXT) \
	export/audacity-ExportMultiple.$(OBJEXT) \
	export/audacity-ExportOGG.$(OBJEXT) \
	export/audacity-ExportPCM.$(OBJEXT) \
	import/audacity-Import.$(OBJEXT) \
	import/audacity-ImportFLAC.$(OBJEXT) \
	import/audacity-ImportLOF.$(OBJEXT) \
	import/audacity-ImportMP3.$(OBJEXT) \
	import/audacity-ImportOGG.$(OBJEXT) \
	import/audacity-ImportPCM.$(OBJEXT) \
	import/audacity-ImportRaw.$(OBJEXT) \
	import/audacity-RawAudioGuess.$(OBJEXT) \
	import/audacity-FormatClassifier.$(OBJEXT) \
	import/audacity-MultiFormatReader.$(OBJEXT) \
	import/audacity-SpecPowerMeter.$(OBJEXT) \
	ondemand/audacity-ODComputeSummaryTask.$(OBJEXT) \
	ondemand/audacity-ODDecodeFFmpegTask.$(OBJEXT) \
	ondemand/audacity-ODDecodeTask.$(OBJEXT) \
	ondemand/audacity-ODManager.$(OBJEXT) \
	ondemand/audacity-ODTask.$(OBJEXT) \
	ondemand/audacity-ODTaskThread.$(OBJEXT) \
	ondemand/audacity-ODWaveTrackTaskQueue.$(OBJEXT) \
	prefs/audacity-BatchPrefs.$(OBJEXT) \
	prefs/audacity-DevicePrefs.$(OBJEXT) \
	prefs/audacity-DirectoriesPrefs.$(OBJEXT) \
	prefs/audacity-EffectsPrefs.$(OBJEXT) \
	prefs/audacity-ExtImportPrefs.$(OBJEXT) \
	prefs/audacity-GUIPrefs.$(OBJEXT) \
	prefs/audacity-ImportExportPrefs.$(OBJEXT) \
	prefs/audacity-KeyConfigPrefs.$(OBJEXT) \
	prefs/audacity-LibraryPrefs.$(OBJEXT) \
	prefs/audacity-MidiIOPrefs.$(OBJEXT) \
	prefs/audacity-ModulePrefs.$(OBJEXT) \
	prefs/audacity-MousePrefs.$(OBJEXT) \
	prefs/audacity-PlaybackPrefs.$(OBJEXT) \
	prefs/audacity-PrefsDialog.$(OBJEXT) \
	prefs/audacity-ProjectsPrefs.$(OBJEXT) \
	prefs/audacity-QualityPrefs.$(OBJEXT) \
	prefs/audacity-RecordingPrefs.$(OBJEXT) \
	prefs/audacity-SpectrumPrefs.$(OBJEXT) \
	prefs/audacity-ThemePrefs.$(OBJEXT) \
	prefs/audacity-TracksPrefs.$(OBJEXT) \
	prefs/audacity-WarningsPrefs.$(OBJEXT) \
	toolbars/audacity-ControlToolBar.$(OBJEXT) \
	toolbars/audacity-DeviceToolBar.$(OBJEXT) \
	toolbars/audacity-EditToolBar.$(OBJEXT) \
	toolbars/audacity-MeterToolBar.$(OBJEXT) \
	toolbars/audacity-MixerToolBar.$(OBJEXT) \
	toolbars/audacity-SelectionBar.$(OBJEXT) \
	toolbars/audacity-SpectralSelectionBar.$(OBJEXT) \
	toolbars/audacity-ToolBar.$(OBJEXT) \
	toolbars/audacity-ToolDock.$(OBJEXT) \
	toolbars/audacity-ToolManager.$(OBJEXT) \
	toolbars/audacity-ToolsToolBar.$(OBJEXT) \
	toolbars/audacity-TranscriptionToolBar.$(OBJEXT) \
	widgets/audacity-AButton.$(OBJEXT) \
	widgets/audacity-ASlider.$(OBJEXT) \
	widgets/audacity-AttachableScrollBar.$(OBJEXT) \
	widgets/audacity-ErrorDialog.$(OBJEXT) \
	widgets/audacity-ExpandingToolBar.$(OBJEXT) \
	widgets/audacity-FileHistory.$(OBJEXT) \
	widgets/audacity-Grabber.$(OBJEXT) \
	widgets/audacity-Grid.$(OBJEXT) \
	widgets/audacity-HelpSystem.$(OBJEXT) \
	widgets/audacity-HtmlWindow.$(OBJEXT) \
	widgets/audacity-ImageRoll.$(OBJEXT) \
	widgets/audacity-KeyView.$(OBJEXT) \
	widgets/audacity-LinkingHtmlWindow.$(OBJEXT) \
	widgets/audacity-Meter.$(OBJEXT) \
	widgets/audacity-MultiDialog.$(OBJEXT) \
	widgets/audacity-NumericTextCtrl.$(OBJEXT) \
	widgets/audacity-numformatter.$(OBJEXT) \
	widgets/audacity-ProgressDialog.$(OBJEXT) \
	widgets/audacity-Ruler.$(OBJEXT) \
	widgets/audacity-valnum.$(OBJEXT) \
	widgets/audacity-Warning.$(OBJEXT) \
	xml/audacity-XMLFileReader.$(OBJEXT) \
	xml/audacity-XMLWriter.$(OBJEXT) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12)
audacity_OBJECTS = $(am_audacity_OBJECTS)
@USE_FFMPEG_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@USE_GSTREAMER_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@USE_LAME_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
@USE_LIBFLAC_TRUE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
@USE_LIBID3TAG_TRUE@am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
@USE_LIBMAD_TRUE@am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
@USE_LIBNYQUIST_TRUE@am__DEPENDENCIES_8 = $(am__DEPENDENCIES_1)
@USE_LIBSOUNDTOUCH_TRUE@am__DEPENDENCIES_9 = $(am__DEPENDENCIES_1)
@USE_LIBTWOLAME_TRUE@am__DEPENDENCIES_10 = $(am__DEPENDENCIES_1)
@USE_LIBVORBIS_TRUE@am__DEPENDENCIES_11 = $(am__DEPENDENCIES_1)
@USE_LV2_TRUE@am__DEPENDENCIES_12 = $(am__DEPENDENCIES_1)
@USE_PORTSMF_TRUE@am__DEPENDENCIES_13 = $(am__DEPENDENCIES_1)
@USE_SBSMS_TRUE@am__DEPENDENCIES_14 = $(am__DEPENDENCIES_1)
@USE_VAMP_TRUE@am__DEPENDENCIES_15 = $(am__DEPENDENCIES_1)
audacity_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7) \
	$(am__DEPENDENCIES_8) $(am__DEPENDENCIES_9) \
	$(am__DEPENDENCIES_10) $(am__DEPENDENCIES_11) \
	$(am__DEPENDENCIES_12) $(am__DEPENDENCIES_13) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_14) \
	$(am__DEPENDENCIES_15) $(am__DEPENDENCIES_1)
audacity_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(audacity_CXXFLAGS) \
	$(CXXFLAGS) $(audacity_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libaudacity_la_SOURCES) $(audacity_SOURCES)
DIST_SOURCES = $(libaudacity_la_SOURCES) $(am__audacity_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(desktop_DATA) $(dist_mime_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)configtemplate.h configtemplate.h
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUDACITY_NAME = @AUDACITY_NAME@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AVCODEC_CFLAGS = @AVCODEC_CFLAGS@
AVCODEC_LIBS = @AVCODEC_LIBS@
AVFORMAT_CFLAGS = @AVFORMAT_CFLAGS@
AVFORMAT_LIBS = @AVFORMAT_LIBS@
AVUTIL_CFLAGS = @AVUTIL_CFLAGS@
AVUTIL_LIBS = @AVUTIL_LIBS@
AWK = @AWK@
BUILD_LDFLAGS = @BUILD_LDFLAGS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDEPEND = @CDEPEND@
CFLAGS = @CFLAGS@
CFLAG_VISIBILITY = @CFLAG_VISIBILITY@
CONFIGHEADER = @CONFIGHEADER@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_LIBS = @EXPAT_LIBS@
EXTRATARGETS = @EXTRATARGETS@
FFMPEG_CFLAGS = @FFMPEG_CFLAGS@
FFMPEG_LIBS = @FFMPEG_LIBS@
FGREP = @FGREP@
FILEDIALOG_LIBS = @FILEDIALOG_LIBS@
FLAC_CFLAGS = @FLAC_CFLAGS@
FLAC_LIBS = @FLAC_LIBS@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GSTREAMER_CFLAGS = @GSTREAMER_CFLAGS@
GSTREAMER_LIBS = @GSTREAMER_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
HAVE_GTK = @HAVE_GTK@
HAVE_PKG_CONFIG = @HAVE_PKG_CONFIG@
HAVE_VISIBILITY = @HAVE_VISIBILITY@
ID3TAG_CFLAGS = @ID3TAG_CFLAGS@
ID3TAG_LIBS = @ID3TAG_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PREFIX = @INSTALL_PREFIX@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
LAME_CFLAGS = @LAME_CFLAGS@
LAME_LIBS = @LAME_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBMAD_CFLAGS = @LIBMAD_CFLAGS@
LIBMAD_LIBS = @LIBMAD_LIBS@
LIBNYQUIST_CFLAGS = @LIBNYQUIST_CFLAGS@
LIBNYQUIST_LIBS = @LIBNYQUIST_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTWOLAME_CFLAGS = @LIBTWOLAME_CFLAGS@
LIBTWOLAME_LIBS = @LIBTWOLAME_LIBS@
LIBVORBIS_CFLAGS = @LIBVORBIS_CFLAGS@
LIBVORBIS_LIBS = @LIBVORBIS_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
LV2_CFLAGS = @LV2_CFLAGS@
LV2_LIBS = @LV2_LIBS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MIMETYPES = @MIMETYPES@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PORTAUDIO_CFLAGS = @PORTAUDIO_CFLAGS@
PORTAUDIO_LIBS = @PORTAUDIO_LIBS@
PORTMIXER_LIBS = @PORTMIXER_LIBS@
PORTSMF_CFLAGS = @PORTSMF_CFLAGS@
PORTSMF_LIBS = @PORTSMF_LIBS@
POSUB = @POSUB@
PRECOMP_CFLAGS = @PRECOMP_CFLAGS@
RANLIB = @RANLIB@
SBSMS_CFLAGS = @SBSMS_CFLAGS@
SBSMS_LIBS = @SBSMS_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
SNDFILE_LIBS = @SNDFILE_LIBS@
SOUNDTOUCH_CFLAGS = @SOUNDTOUCH_CFLAGS@
SOUNDTOUCH_LIBS = @SOUNDTOUCH_LIBS@
SOXR_CFLAGS = @SOXR_CFLAGS@
SOXR_LIBS = @SOXR_LIBS@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VAMP_CFLAGS = @VAMP_CFLAGS@
VAMP_LIBS = @VAMP_LIBS@
VERSION = @VERSION@
WIDGETEXTRA_CFLAGS = @WIDGETEXTRA_CFLAGS@
WIDGETEXTRA_LIBS = @WIDGETEXTRA_LIBS@
WX_CONFIG = @WX_CONFIG@
WX_CXXFLAGS = @WX_CXXFLAGS@
WX_LIBS = @WX_LIBS@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
desktopdir = $(datadir)/applications
desktop_DATA = audacity.desktop
mimedir = $(datarootdir)/mime/packages
dist_mime_DATA = audacity.xml
check_LTLIBRARIES = libaudacity.la
libaudacity_la_CPPFLAGS = $(WX_CXXFLAGS)
libaudacity_la_LIBADD = $(WX_LIBS)
libaudacity_la_SOURCES = \
	BlockFile.cpp \
	BlockFile.h \
	DirManager.cpp \
	DirManager.h \
	Dither.cpp \
	Dither.h \
	FileFormats.cpp \
	FileFormats.h \
	Internat.cpp \
	Internat.h \
	Prefs.cpp \
	Prefs.h \
	SampleFormat.cpp \
	SampleFormat.h \
	Sequence.cpp \
	Sequence.h \
	blockfile/LegacyAliasBlockFile.cpp \
	blockfile/LegacyAliasBlockFile.h \
	blockfile/LegacyBlockFile.cpp \
	blockfile/LegacyBlockFile.h \
	blockfile/ODDecodeBlockFile.cpp \
	blockfile/ODDecodeBlockFile.h \
	blockfile/ODPCMAliasBlockFile.cpp \
	blockfile/ODPCMAliasBlockFile.h \
	blockfile/PCMAliasBlockFile.cpp \
	blockfile/PCMAliasBlockFile.h \
	blockfile/SilentBlockFile.cpp \
	blockfile/SilentBlockFile.h \
	blockfile/SimpleBlockFile.cpp \
	blockfile/SimpleBlockFile.h \
	xml/XMLTagHandler.cpp \
	xml/XMLTagHandler.h \
	$(NULL)

audacity_CPPFLAGS = -D__STDC_CONSTANT_MACROS -DLIBDIR=\"$(libdir)\" \
	$(EXPAT_CFLAGS) $(FILEDIALOG_CFLAGS) $(PORTAUDIO_CFLAGS) \
	$(PORTMIXER_CFLAGS) $(SNDFILE_CFLAGS) $(SOXR_CFLAGS) \
	$(WIDGETEXTRA_CFLAGS) $(WX_CXXFLAGS) $(NULL) $(am__append_1) \
	$(am__append_4) $(am__append_7) $(am__append_10) \
	$(am__append_13) $(am__append_15) $(am__append_18) \
	$(am__append_20) $(am__append_22) $(am__append_25) \
	$(am__append_27) $(am__append_29) $(am__append_31) \
	$(am__append_34) $(am__append_37) $(am__append_40) \
	$(am__append_42) $(am__append_45)

# Until we upgrade to a newer version of wxWidgets...will get rid of hundreds of these:
#
#  /usr/local/include/wx-2.8/wx/buffer.h: In member function 'void wxMemoryBuffer::AppendByte(char)':
#  /usr/local/include/wx-2.8/wx/debug.h:194:43: warning: typedef 'wxDummyCheckInt' locally defined but not used [-Wunused-local-typedefs]
#       #define wxFORCE_SEMICOLON typedef int wxDummyCheckInt
#                                           ^
#  /usr/local/include/wx-2.8/wx/debug.h:224:9: note: in expansion of macro 'wxFORCE_SEMICOLON'
#           wxFORCE_SEMICOLON /* just to force a semicolon */
#           ^
#  /usr/local/include/wx-2.8/wx/debug.h:233:38: note: in expansion of macro 'wxCHECK2_MSG'
#   #define wxCHECK_RET(cond, msg)       wxCHECK2_MSG(cond, return, msg)
#                                        ^
#  /usr/local/include/wx-2.8/wx/buffer.h:289:9: note: in expansion of macro 'wxCHECK_RET'
#           wxCHECK_RET( m_bufdata->m_data, wxT("invalid wxMemoryBuffer") );
#           ^
audacity_CXXFLAGS = \
   -Wno-unused-local-typedefs

audacity_LDFLAGS = -rdynamic
audacity_LDADD = $(EXPAT_LIBS) $(FILEDIALOG_LIBS) $(PORTAUDIO_LIBS) \
	$(PORTMIXER_LIBS) $(SNDFILE_LIBS) $(SOXR_LIBS) \
	$(WIDGETEXTRA_LIBS) $(WX_LIBS) $(NULL) $(am__append_2) \
	$(am__append_5) $(am__append_8) $(am__append_11) \
	$(am__append_14) $(am__append_16) $(am__append_19) \
	$(am__append_21) $(am__append_23) $(am__append_26) \
	$(am__append_28) $(am__append_30) $(am__append_32) \
	$(am__append_35) $(am__append_38) $(am__append_41) \
	$(am__append_43) $(am__append_46)
audacity_SOURCES = $(libaudacity_la_SOURCES) AboutDialog.cpp \
	AboutDialog.h AColor.cpp AColor.h AllThemeResources.h \
	Audacity.h AudacityApp.cpp AudacityApp.h AudacityLogger.cpp \
	AudacityLogger.h AudioIO.cpp AudioIO.h AudioIOListenerer.h \
	AutoRecovery.cpp AutoRecovery.h BatchCommandDialog.cpp \
	BatchCommandDialog.h BatchCommands.cpp BatchCommands.h \
	BatchProcessDialog.cpp BatchProcessDialog.h Benchmark.cpp \
	Benchmark.h CaptureEvents.cpp CaptureEvents.h Dependencies.cpp \
	Dependencies.h DeviceChange.cpp DeviceChange.h \
	DeviceManager.cpp DeviceManager.h Diags.cpp Diags.h \
	Envelope.cpp Envelope.h Experimental.h FFmpeg.cpp FFmpeg.h \
	FFT.cpp FFT.h FileIO.cpp FileIO.h FileNames.cpp FileNames.h \
	float_cast.h FreqWindow.cpp FreqWindow.h HelpText.cpp \
	HelpText.h HistoryWindow.cpp HistoryWindow.h \
	ImageManipulation.cpp ImageManipulation.h InterpolateAudio.cpp \
	InterpolateAudio.h LabelDialog.cpp LabelDialog.h \
	LabelTrack.cpp LabelTrack.h LangChoice.cpp LangChoice.h \
	Languages.cpp Languages.h Legacy.cpp Legacy.h Lyrics.cpp \
	Lyrics.h LyricsWindow.cpp LyricsWindow.h MacroMagic.h \
	Matrix.cpp Matrix.h Menus.cpp Menus.h Mix.cpp Mix.h \
	MixerBoard.cpp MixerBoard.h ModuleManager.cpp ModuleManager.h \
	PitchName.cpp PitchName.h PlatformCompatibility.cpp \
	PlatformCompatibility.h PluginManager.cpp PluginManager.h \
	Printing.cpp Printing.h Profiler.cpp Profiler.h Project.cpp \
	Project.h RealFFTf.cpp RealFFTf.h RealFFTf48x.cpp \
	RealFFTf48x.h Resample.cpp Resample.h RevisionIdent.h \
	RingBuffer.cpp RingBuffer.h Screenshot.cpp Screenshot.h \
	SelectedRegion.cpp SelectedRegion.h Shuttle.cpp Shuttle.h \
	ShuttleGui.cpp ShuttleGui.h ShuttlePrefs.cpp ShuttlePrefs.h \
	Snap.cpp Snap.h SoundActivatedRecord.cpp \
	SoundActivatedRecord.h Spectrum.cpp Spectrum.h \
	SplashDialog.cpp SplashDialog.h SseMathFuncs.cpp \
	SseMathFuncs.h Tags.cpp Tags.h Theme.cpp Theme.h \
	ThemeAsCeeCode.h TimeDialog.cpp TimeDialog.h \
	TimerRecordDialog.cpp TimerRecordDialog.h TimeTrack.cpp \
	TimeTrack.h Track.cpp Track.h TrackArtist.cpp TrackArtist.h \
	TrackPanel.cpp TrackPanel.h TrackPanelAx.cpp TrackPanelAx.h \
	UndoManager.cpp UndoManager.h ViewInfo.cpp ViewInfo.h \
	VoiceKey.cpp VoiceKey.h WaveClip.cpp WaveClip.h WaveTrack.cpp \
	WaveTrack.h WrappedType.cpp WrappedType.h \
	commands/AppCommandEvent.cpp commands/AppCommandEvent.h \
	commands/BatchEvalCommand.cpp commands/BatchEvalCommand.h \
	commands/Command.cpp commands/Command.h \
	commands/CommandBuilder.cpp commands/CommandBuilder.h \
	commands/CommandDirectory.cpp commands/CommandDirectory.h \
	commands/CommandHandler.cpp commands/CommandHandler.h \
	commands/CommandManager.cpp commands/CommandManager.h \
	commands/CommandMisc.h commands/CommandSignature.cpp \
	commands/CommandSignature.h commands/CommandTargets.h \
	commands/CommandType.cpp commands/CommandType.h \
	commands/CompareAudioCommand.cpp \
	commands/CompareAudioCommand.h commands/ExecMenuCommand.cpp \
	commands/ExecMenuCommand.h commands/GetAllMenuCommands.cpp \
	commands/GetAllMenuCommands.h \
	commands/GetProjectInfoCommand.cpp \
	commands/GetProjectInfoCommand.h \
	commands/GetTrackInfoCommand.cpp \
	commands/GetTrackInfoCommand.h commands/HelpCommand.cpp \
	commands/HelpCommand.h commands/ImportExportCommands.cpp \
	commands/ImportExportCommands.h commands/Keyboard.cpp \
	commands/Keyboard.h commands/MessageCommand.cpp \
	commands/MessageCommand.h commands/OpenSaveCommands.cpp \
	commands/OpenSaveCommands.h commands/PreferenceCommands.cpp \
	commands/PreferenceCommands.h commands/ResponseQueue.cpp \
	commands/ResponseQueue.h commands/ScreenshotCommand.cpp \
	commands/ScreenshotCommand.h commands/ScriptCommandRelay.cpp \
	commands/ScriptCommandRelay.h commands/SelectCommand.cpp \
	commands/SelectCommand.h commands/SetProjectInfoCommand.cpp \
	commands/SetProjectInfoCommand.h \
	commands/SetTrackInfoCommand.cpp \
	commands/SetTrackInfoCommand.h commands/Validators.h \
	effects/Amplify.cpp effects/Amplify.h effects/AutoDuck.cpp \
	effects/AutoDuck.h effects/BassTreble.cpp effects/BassTreble.h \
	effects/Biquad.cpp effects/Biquad.h effects/ChangePitch.cpp \
	effects/ChangePitch.h effects/ChangeSpeed.cpp \
	effects/ChangeSpeed.h effects/ChangeTempo.cpp \
	effects/ChangeTempo.h effects/ClickRemoval.cpp \
	effects/ClickRemoval.h effects/Compressor.cpp \
	effects/Compressor.h effects/Contrast.cpp effects/Contrast.h \
	effects/DtmfGen.cpp effects/DtmfGen.h effects/Echo.cpp \
	effects/Echo.h effects/Effect.cpp effects/Effect.h \
	effects/EffectManager.cpp effects/EffectManager.h \
	effects/EffectRack.cpp effects/EffectRack.h \
	effects/Equalization.cpp effects/Equalization.h \
	effects/Equalization48x.cpp effects/Equalization48x.h \
	effects/Fade.cpp effects/Fade.h effects/FindClipping.cpp \
	effects/FindClipping.h effects/Generator.cpp \
	effects/Generator.h effects/Invert.cpp effects/Invert.h \
	effects/Leveller.cpp effects/Leveller.h \
	effects/LoadEffects.cpp effects/LoadEffects.h \
	effects/Noise.cpp effects/Noise.h effects/NoiseReduction.cpp \
	effects/NoiseReduction.h effects/NoiseRemoval.cpp \
	effects/NoiseRemoval.h effects/Normalize.cpp \
	effects/Normalize.h effects/Paulstretch.cpp \
	effects/Paulstretch.h effects/Phaser.cpp effects/Phaser.h \
	effects/Repair.cpp effects/Repair.h effects/Repeat.cpp \
	effects/Repeat.h effects/Reverb.cpp effects/Reverb.h \
	effects/Reverb_libSoX.h effects/Reverse.cpp effects/Reverse.h \
	effects/SBSMSEffect.cpp effects/SBSMSEffect.h \
	effects/ScienFilter.cpp effects/ScienFilter.h \
	effects/Silence.cpp effects/Silence.h effects/SimpleMono.cpp \
	effects/SimpleMono.h effects/SoundTouchEffect.cpp \
	effects/SoundTouchEffect.h effects/StereoToMono.cpp \
	effects/StereoToMono.h effects/TimeScale.cpp \
	effects/TimeScale.h effects/TimeWarper.cpp \
	effects/TimeWarper.h effects/ToneGen.cpp effects/ToneGen.h \
	effects/TruncSilence.cpp effects/TruncSilence.h \
	effects/TwoPassSimpleMono.cpp effects/TwoPassSimpleMono.h \
	effects/Wahwah.cpp effects/Wahwah.h export/Export.cpp \
	export/Export.h export/ExportCL.cpp export/ExportCL.h \
	export/ExportFLAC.cpp export/ExportFLAC.h export/ExportMP2.cpp \
	export/ExportMP2.h export/ExportMP3.cpp export/ExportMP3.h \
	export/ExportMultiple.cpp export/ExportMultiple.h \
	export/ExportOGG.cpp export/ExportOGG.h export/ExportPCM.cpp \
	export/ExportPCM.h import/Import.cpp import/Import.h \
	import/ImportFLAC.cpp import/ImportFLAC.h import/ImportLOF.cpp \
	import/ImportLOF.h import/ImportMP3.cpp import/ImportMP3.h \
	import/ImportOGG.cpp import/ImportOGG.h import/ImportPCM.cpp \
	import/ImportPCM.h import/ImportPlugin.h import/ImportRaw.cpp \
	import/ImportRaw.h import/RawAudioGuess.cpp \
	import/RawAudioGuess.h import/FormatClassifier.cpp \
	import/FormatClassifier.h import/MultiFormatReader.cpp \
	import/MultiFormatReader.h import/SpecPowerMeter.cpp \
	import/SpecPowerMeter.h ondemand/ODComputeSummaryTask.cpp \
	ondemand/ODComputeSummaryTask.h \
	ondemand/ODDecodeFFmpegTask.cpp ondemand/ODDecodeFFmpegTask.h \
	ondemand/ODDecodeTask.cpp ondemand/ODDecodeTask.h \
	ondemand/ODManager.cpp ondemand/ODManager.h \
	ondemand/ODTask.cpp ondemand/ODTask.h \
	ondemand/ODTaskThread.cpp ondemand/ODTaskThread.h \
	ondemand/ODWaveTrackTaskQueue.cpp \
	ondemand/ODWaveTrackTaskQueue.h prefs/BatchPrefs.cpp \
	prefs/BatchPrefs.h prefs/DevicePrefs.cpp prefs/DevicePrefs.h \
	prefs/DirectoriesPrefs.cpp prefs/DirectoriesPrefs.h \
	prefs/EffectsPrefs.cpp prefs/EffectsPrefs.h \
	prefs/ExtImportPrefs.cpp prefs/ExtImportPrefs.h \
	prefs/GUIPrefs.cpp prefs/GUIPrefs.h \
	prefs/ImportExportPrefs.cpp prefs/ImportExportPrefs.h \
	prefs/KeyConfigPrefs.cpp prefs/KeyConfigPrefs.h \
	prefs/LibraryPrefs.cpp prefs/LibraryPrefs.h \
	prefs/MidiIOPrefs.cpp prefs/MidiIOPrefs.h \
	prefs/ModulePrefs.cpp prefs/ModulePrefs.h prefs/MousePrefs.cpp \
	prefs/MousePrefs.h prefs/PlaybackPrefs.cpp \
	prefs/PlaybackPrefs.h prefs/PrefsDialog.cpp \
	prefs/PrefsDialog.h prefs/PrefsPanel.h prefs/ProjectsPrefs.cpp \
	prefs/ProjectsPrefs.h prefs/QualityPrefs.cpp \
	prefs/QualityPrefs.h prefs/RecordingPrefs.cpp \
	prefs/RecordingPrefs.h prefs/SpectrumPrefs.cpp \
	prefs/SpectrumPrefs.h prefs/ThemePrefs.cpp prefs/ThemePrefs.h \
	prefs/TracksPrefs.cpp prefs/TracksPrefs.h \
	prefs/WarningsPrefs.cpp prefs/WarningsPrefs.h \
	toolbars/ControlToolBar.cpp toolbars/ControlToolBar.h \
	toolbars/DeviceToolBar.cpp toolbars/DeviceToolBar.h \
	toolbars/EditToolBar.cpp toolbars/EditToolBar.h \
	toolbars/MeterToolBar.cpp toolbars/MeterToolBar.h \
	toolbars/MixerToolBar.cpp toolbars/MixerToolBar.h \
	toolbars/SelectionBar.cpp toolbars/SelectionBar.h \
	toolbars/SpectralSelectionBar.cpp \
	toolbars/SpectralSelectionBar.h \
	toolbars/SpectralSelectionBarListener.h toolbars/ToolBar.cpp \
	toolbars/ToolBar.h toolbars/ToolDock.cpp toolbars/ToolDock.h \
	toolbars/ToolManager.cpp toolbars/ToolManager.h \
	toolbars/ToolsToolBar.cpp toolbars/ToolsToolBar.h \
	toolbars/TranscriptionToolBar.cpp \
	toolbars/TranscriptionToolBar.h widgets/AButton.cpp \
	widgets/AButton.h widgets/ASlider.cpp widgets/ASlider.h \
	widgets/AttachableScrollBar.cpp widgets/AttachableScrollBar.h \
	widgets/ErrorDialog.cpp widgets/ErrorDialog.h \
	widgets/ExpandingToolBar.cpp widgets/ExpandingToolBar.h \
	widgets/FileHistory.cpp widgets/FileHistory.h \
	widgets/Grabber.cpp widgets/Grabber.h widgets/Grid.cpp \
	widgets/Grid.h widgets/HelpSystem.cpp widgets/HelpSystem.h \
	widgets/HtmlWindow.cpp widgets/HtmlWindow.h \
	widgets/ImageRoll.cpp widgets/ImageRoll.h widgets/KeyView.cpp \
	widgets/KeyView.h widgets/LinkingHtmlWindow.cpp \
	widgets/LinkingHtmlWindow.h widgets/Meter.cpp widgets/Meter.h \
	widgets/MultiDialog.cpp widgets/MultiDialog.h \
	widgets/NumericTextCtrl.cpp widgets/NumericTextCtrl.h \
	widgets/numformatter.cpp widgets/numformatter.h \
	widgets/ProgressDialog.cpp widgets/ProgressDialog.h \
	widgets/Ruler.cpp widgets/Ruler.h widgets/valnum.cpp \
	widgets/valnum.h widgets/Warning.cpp widgets/Warning.h \
	xml/XMLFileReader.cpp xml/XMLFileReader.h xml/XMLWriter.cpp \
	xml/XMLWriter.h $(NULL) $(am__append_3) $(am__append_6) \
	$(am__append_9) $(am__append_12) $(am__append_17) \
	$(am__append_24) $(am__append_33) $(am__append_36) \
	$(am__append_39) $(am__append_44) $(am__append_47)

# TODO: Check *.cpp and *.h files if they are needed.
EXTRA_DIST = audacity.desktop.in xml/audacityproject.dtd \
	AudacityHeaders.cpp \
	AudacityHeaders.h \
	CrossFade.cpp \
	CrossFade.h \
	effects/ScoreAlignDialog.cpp \
	effects/ScoreAlignDialog.h \
	$(NULL)

all: configwin.h configunix.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

configwin.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/configtemplate.h $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/configwin.h
$(srcdir)/configtemplate.h: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

configunix.h: stamp-h2
	@test -f $@ || rm -f stamp-h2
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h2

stamp-h2: $(srcdir)/configtemplate.h $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/configunix.h

distclean-hdr:
	-rm -f configwin.h stamp-h1 configunix.h stamp-h2
audacity.desktop: $(top_builddir)/config.status $(srcdir)/audacity.desktop.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
blockfile/$(am__dirstamp):
	@$(MKDIR_P) blockfile
	@: > blockfile/$(am__dirstamp)
blockfile/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) blockfile/$(DEPDIR)
	@: > blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-LegacyAliasBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-LegacyBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-ODDecodeBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-ODPCMAliasBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-PCMAliasBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-SilentBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/libaudacity_la-SimpleBlockFile.lo:  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
xml/$(am__dirstamp):
	@$(MKDIR_P) xml
	@: > xml/$(am__dirstamp)
xml/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) xml/$(DEPDIR)
	@: > xml/$(DEPDIR)/$(am__dirstamp)
xml/libaudacity_la-XMLTagHandler.lo: xml/$(am__dirstamp) \
	xml/$(DEPDIR)/$(am__dirstamp)

libaudacity.la: $(libaudacity_la_OBJECTS) $(libaudacity_la_DEPENDENCIES) $(EXTRA_libaudacity_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libaudacity_la_OBJECTS) $(libaudacity_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
blockfile/audacity-LegacyAliasBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-LegacyBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-ODDecodeBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-ODPCMAliasBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-PCMAliasBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-SilentBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
blockfile/audacity-SimpleBlockFile.$(OBJEXT):  \
	blockfile/$(am__dirstamp) blockfile/$(DEPDIR)/$(am__dirstamp)
xml/audacity-XMLTagHandler.$(OBJEXT): xml/$(am__dirstamp) \
	xml/$(DEPDIR)/$(am__dirstamp)
commands/$(am__dirstamp):
	@$(MKDIR_P) commands
	@: > commands/$(am__dirstamp)
commands/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) commands/$(DEPDIR)
	@: > commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-AppCommandEvent.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-BatchEvalCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-Command.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandBuilder.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandDirectory.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandHandler.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandManager.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandSignature.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CommandType.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-CompareAudioCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-ExecMenuCommand.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-GetAllMenuCommands.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-GetProjectInfoCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-GetTrackInfoCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-HelpCommand.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-ImportExportCommands.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-Keyboard.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-MessageCommand.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-OpenSaveCommands.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-PreferenceCommands.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-ResponseQueue.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-ScreenshotCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-ScriptCommandRelay.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-SelectCommand.$(OBJEXT): commands/$(am__dirstamp) \
	commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-SetProjectInfoCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
commands/audacity-SetTrackInfoCommand.$(OBJEXT):  \
	commands/$(am__dirstamp) commands/$(DEPDIR)/$(am__dirstamp)
effects/$(am__dirstamp):
	@$(MKDIR_P) effects
	@: > effects/$(am__dirstamp)
effects/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/$(DEPDIR)
	@: > effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Amplify.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-AutoDuck.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-BassTreble.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Biquad.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ChangePitch.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ChangeSpeed.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ChangeTempo.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ClickRemoval.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Compressor.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Contrast.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-DtmfGen.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Echo.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Effect.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-EffectManager.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-EffectRack.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Equalization.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Equalization48x.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Fade.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-FindClipping.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Generator.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Invert.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Leveller.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-LoadEffects.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Noise.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-NoiseReduction.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-NoiseRemoval.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Normalize.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Paulstretch.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Phaser.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Repair.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Repeat.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Reverb.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Reverse.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-SBSMSEffect.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ScienFilter.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Silence.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-SimpleMono.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-SoundTouchEffect.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-StereoToMono.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-TimeScale.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-TimeWarper.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-ToneGen.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-TruncSilence.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-TwoPassSimpleMono.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
effects/audacity-Wahwah.$(OBJEXT): effects/$(am__dirstamp) \
	effects/$(DEPDIR)/$(am__dirstamp)
export/$(am__dirstamp):
	@$(MKDIR_P) export
	@: > export/$(am__dirstamp)
export/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) export/$(DEPDIR)
	@: > export/$(DEPDIR)/$(am__dirstamp)
export/audacity-Export.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportCL.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportFLAC.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportMP2.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportMP3.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportMultiple.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportOGG.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportPCM.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
import/$(am__dirstamp):
	@$(MKDIR_P) import
	@: > import/$(am__dirstamp)
import/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) import/$(DEPDIR)
	@: > import/$(DEPDIR)/$(am__dirstamp)
import/audacity-Import.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportFLAC.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportLOF.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportMP3.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportOGG.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportPCM.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportRaw.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-RawAudioGuess.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-FormatClassifier.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-MultiFormatReader.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-SpecPowerMeter.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
ondemand/$(am__dirstamp):
	@$(MKDIR_P) ondemand
	@: > ondemand/$(am__dirstamp)
ondemand/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ondemand/$(DEPDIR)
	@: > ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODComputeSummaryTask.$(OBJEXT):  \
	ondemand/$(am__dirstamp) ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODDecodeFFmpegTask.$(OBJEXT):  \
	ondemand/$(am__dirstamp) ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODDecodeTask.$(OBJEXT): ondemand/$(am__dirstamp) \
	ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODManager.$(OBJEXT): ondemand/$(am__dirstamp) \
	ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODTask.$(OBJEXT): ondemand/$(am__dirstamp) \
	ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODTaskThread.$(OBJEXT): ondemand/$(am__dirstamp) \
	ondemand/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODWaveTrackTaskQueue.$(OBJEXT):  \
	ondemand/$(am__dirstamp) ondemand/$(DEPDIR)/$(am__dirstamp)
prefs/$(am__dirstamp):
	@$(MKDIR_P) prefs
	@: > prefs/$(am__dirstamp)
prefs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) prefs/$(DEPDIR)
	@: > prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-BatchPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-DevicePrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-DirectoriesPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-EffectsPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-ExtImportPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-GUIPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-ImportExportPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-KeyConfigPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-LibraryPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-MidiIOPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-ModulePrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-MousePrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-PlaybackPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-PrefsDialog.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-ProjectsPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-QualityPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-RecordingPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-SpectrumPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-ThemePrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-TracksPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
prefs/audacity-WarningsPrefs.$(OBJEXT): prefs/$(am__dirstamp) \
	prefs/$(DEPDIR)/$(am__dirstamp)
toolbars/$(am__dirstamp):
	@$(MKDIR_P) toolbars
	@: > toolbars/$(am__dirstamp)
toolbars/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) toolbars/$(DEPDIR)
	@: > toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-ControlToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-DeviceToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-EditToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-MeterToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-MixerToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-SelectionBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-SpectralSelectionBar.$(OBJEXT):  \
	toolbars/$(am__dirstamp) toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-ToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-ToolDock.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-ToolManager.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-ToolsToolBar.$(OBJEXT): toolbars/$(am__dirstamp) \
	toolbars/$(DEPDIR)/$(am__dirstamp)
toolbars/audacity-TranscriptionToolBar.$(OBJEXT):  \
	toolbars/$(am__dirstamp) toolbars/$(DEPDIR)/$(am__dirstamp)
widgets/$(am__dirstamp):
	@$(MKDIR_P) widgets
	@: > widgets/$(am__dirstamp)
widgets/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) widgets/$(DEPDIR)
	@: > widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-AButton.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-ASlider.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-AttachableScrollBar.$(OBJEXT):  \
	widgets/$(am__dirstamp) widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-ErrorDialog.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-ExpandingToolBar.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-FileHistory.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-Grabber.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-Grid.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-HelpSystem.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-HtmlWindow.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-ImageRoll.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-KeyView.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-LinkingHtmlWindow.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-Meter.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-MultiDialog.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-NumericTextCtrl.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-numformatter.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-ProgressDialog.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-Ruler.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-valnum.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
widgets/audacity-Warning.$(OBJEXT): widgets/$(am__dirstamp) \
	widgets/$(DEPDIR)/$(am__dirstamp)
xml/audacity-XMLFileReader.$(OBJEXT): xml/$(am__dirstamp) \
	xml/$(DEPDIR)/$(am__dirstamp)
xml/audacity-XMLWriter.$(OBJEXT): xml/$(am__dirstamp) \
	xml/$(DEPDIR)/$(am__dirstamp)
effects/audiounits/$(am__dirstamp):
	@$(MKDIR_P) effects/audiounits
	@: > effects/audiounits/$(am__dirstamp)
effects/audiounits/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/audiounits/$(DEPDIR)
	@: > effects/audiounits/$(DEPDIR)/$(am__dirstamp)
effects/audiounits/audacity-AudioUnitEffect.$(OBJEXT):  \
	effects/audiounits/$(am__dirstamp) \
	effects/audiounits/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportFFmpeg.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
export/audacity-ExportFFmpegDialogs.$(OBJEXT): export/$(am__dirstamp) \
	export/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportFFmpeg.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportGStreamer.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
effects/ladspa/$(am__dirstamp):
	@$(MKDIR_P) effects/ladspa
	@: > effects/ladspa/$(am__dirstamp)
effects/ladspa/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/ladspa/$(DEPDIR)
	@: > effects/ladspa/$(DEPDIR)/$(am__dirstamp)
effects/ladspa/audacity-LadspaEffect.$(OBJEXT):  \
	effects/ladspa/$(am__dirstamp) \
	effects/ladspa/$(DEPDIR)/$(am__dirstamp)
ondemand/audacity-ODDecodeFlacTask.$(OBJEXT):  \
	ondemand/$(am__dirstamp) ondemand/$(DEPDIR)/$(am__dirstamp)
effects/nyquist/$(am__dirstamp):
	@$(MKDIR_P) effects/nyquist
	@: > effects/nyquist/$(am__dirstamp)
effects/nyquist/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/nyquist/$(DEPDIR)
	@: > effects/nyquist/$(DEPDIR)/$(am__dirstamp)
effects/nyquist/audacity-LoadNyquist.$(OBJEXT):  \
	effects/nyquist/$(am__dirstamp) \
	effects/nyquist/$(DEPDIR)/$(am__dirstamp)
effects/nyquist/audacity-Nyquist.$(OBJEXT):  \
	effects/nyquist/$(am__dirstamp) \
	effects/nyquist/$(DEPDIR)/$(am__dirstamp)
effects/lv2/$(am__dirstamp):
	@$(MKDIR_P) effects/lv2
	@: > effects/lv2/$(am__dirstamp)
effects/lv2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/lv2/$(DEPDIR)
	@: > effects/lv2/$(DEPDIR)/$(am__dirstamp)
effects/lv2/audacity-LoadLV2.$(OBJEXT): effects/lv2/$(am__dirstamp) \
	effects/lv2/$(DEPDIR)/$(am__dirstamp)
effects/lv2/audacity-LV2Effect.$(OBJEXT): effects/lv2/$(am__dirstamp) \
	effects/lv2/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportMIDI.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
import/audacity-ImportQT.$(OBJEXT): import/$(am__dirstamp) \
	import/$(DEPDIR)/$(am__dirstamp)
effects/vamp/$(am__dirstamp):
	@$(MKDIR_P) effects/vamp
	@: > effects/vamp/$(am__dirstamp)
effects/vamp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/vamp/$(DEPDIR)
	@: > effects/vamp/$(DEPDIR)/$(am__dirstamp)
effects/vamp/audacity-LoadVamp.$(OBJEXT):  \
	effects/vamp/$(am__dirstamp) \
	effects/vamp/$(DEPDIR)/$(am__dirstamp)
effects/vamp/audacity-VampEffect.$(OBJEXT):  \
	effects/vamp/$(am__dirstamp) \
	effects/vamp/$(DEPDIR)/$(am__dirstamp)
effects/VST/$(am__dirstamp):
	@$(MKDIR_P) effects/VST
	@: > effects/VST/$(am__dirstamp)
effects/VST/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) effects/VST/$(DEPDIR)
	@: > effects/VST/$(DEPDIR)/$(am__dirstamp)
effects/VST/audacity-VSTEffect.$(OBJEXT): effects/VST/$(am__dirstamp) \
	effects/VST/$(DEPDIR)/$(am__dirstamp)

audacity$(EXEEXT): $(audacity_OBJECTS) $(audacity_DEPENDENCIES) $(EXTRA_audacity_DEPENDENCIES) 
	@rm -f audacity$(EXEEXT)
	$(AM_V_CXXLD)$(audacity_LINK) $(audacity_OBJECTS) $(audacity_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f blockfile/*.$(OBJEXT)
	-rm -f blockfile/*.lo
	-rm -f commands/*.$(OBJEXT)
	-rm -f effects/*.$(OBJEXT)
	-rm -f effects/VST/*.$(OBJEXT)
	-rm -f effects/audiounits/*.$(OBJEXT)
	-rm -f effects/ladspa/*.$(OBJEXT)
	-rm -f effects/lv2/*.$(OBJEXT)
	-rm -f effects/nyquist/*.$(OBJEXT)
	-rm -f effects/vamp/*.$(OBJEXT)
	-rm -f export/*.$(OBJEXT)
	-rm -f import/*.$(OBJEXT)
	-rm -f ondemand/*.$(OBJEXT)
	-rm -f prefs/*.$(OBJEXT)
	-rm -f toolbars/*.$(OBJEXT)
	-rm -f widgets/*.$(OBJEXT)
	-rm -f xml/*.$(OBJEXT)
	-rm -f xml/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AColor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AboutDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AudacityApp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AudacityLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AudioIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-AutoRecovery.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-BatchCommandDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-BatchCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-BatchProcessDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Benchmark.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-BlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-CaptureEvents.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Dependencies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-DeviceChange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-DeviceManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Diags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-DirManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Dither.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Envelope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FFT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FFmpeg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FileFormats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FileIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FileNames.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-FreqWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-HelpText.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-HistoryWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-ImageManipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Internat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-InterpolateAudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-LabelDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-LabelTrack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-LangChoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Languages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Legacy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Lyrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-LyricsWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Menus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Mix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-MixerBoard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-ModuleManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-NoteTrack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-PitchName.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-PlatformCompatibility.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-PluginManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Prefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Printing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Profiler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Project.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-RealFFTf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-RealFFTf48x.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Resample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-RingBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-SampleFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Screenshot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-SelectedRegion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Shuttle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-ShuttleGui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-ShuttlePrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Snap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-SoundActivatedRecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Spectrum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-SplashDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-SseMathFuncs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Tags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Theme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TimeDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TimeTrack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TimerRecordDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-Track.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TrackArtist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TrackPanel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-TrackPanelAx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-UndoManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-ViewInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-VoiceKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-WaveClip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-WaveTrack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/audacity-WrappedType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-BlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-DirManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-Dither.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-FileFormats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-Internat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-Prefs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-SampleFormat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaudacity_la-Sequence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-SilentBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-LegacyAliasBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-LegacyBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-ODDecodeBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-ODPCMAliasBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-PCMAliasBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-SilentBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@blockfile/$(DEPDIR)/libaudacity_la-SimpleBlockFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-AppCommandEvent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-BatchEvalCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-Command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandDirectory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandSignature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CommandType.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-CompareAudioCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-ExecMenuCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-GetAllMenuCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-HelpCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-ImportExportCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-Keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-MessageCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-OpenSaveCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-PreferenceCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-ResponseQueue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-ScreenshotCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-ScriptCommandRelay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-SelectCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Amplify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-AutoDuck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-BassTreble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Biquad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ChangePitch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ChangeSpeed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ChangeTempo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ClickRemoval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Compressor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Contrast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-DtmfGen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Echo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Effect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-EffectManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-EffectRack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Equalization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Equalization48x.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Fade.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-FindClipping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Generator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Invert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Leveller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-LoadEffects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Noise.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-NoiseReduction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-NoiseRemoval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Normalize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Paulstretch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Phaser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Repair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Reverb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Reverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-SBSMSEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ScienFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Silence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-SimpleMono.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-SoundTouchEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-StereoToMono.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-TimeScale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-TimeWarper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-ToneGen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-TruncSilence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/$(DEPDIR)/audacity-Wahwah.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/VST/$(DEPDIR)/audacity-VSTEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/lv2/$(DEPDIR)/audacity-LV2Effect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/lv2/$(DEPDIR)/audacity-LoadLV2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/nyquist/$(DEPDIR)/audacity-Nyquist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/vamp/$(DEPDIR)/audacity-LoadVamp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@effects/vamp/$(DEPDIR)/audacity-VampEffect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-Export.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportCL.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportFFmpeg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportFLAC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportMP2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportMP3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportMultiple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportOGG.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@export/$(DEPDIR)/audacity-ExportPCM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-FormatClassifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-Import.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportFFmpeg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportFLAC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportGStreamer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportLOF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportMIDI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportMP3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportOGG.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportPCM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportQT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-ImportRaw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-MultiFormatReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-RawAudioGuess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@import/$(DEPDIR)/audacity-SpecPowerMeter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODDecodeTask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODTask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODTaskThread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-BatchPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-DevicePrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-EffectsPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-ExtImportPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-GUIPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-ImportExportPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-LibraryPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-MidiIOPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-ModulePrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-MousePrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-PlaybackPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-PrefsDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-ProjectsPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-QualityPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-RecordingPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-SpectrumPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-ThemePrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-TracksPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@prefs/$(DEPDIR)/audacity-WarningsPrefs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-ControlToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-DeviceToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-EditToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-MeterToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-MixerToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-SelectionBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-ToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-ToolDock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-ToolManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-ToolsToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-AButton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-ASlider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-AttachableScrollBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-ErrorDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-ExpandingToolBar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-FileHistory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-Grabber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-Grid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-HelpSystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-HtmlWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-ImageRoll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-KeyView.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-Meter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-MultiDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-NumericTextCtrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-ProgressDialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-Ruler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-Warning.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-numformatter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@widgets/$(DEPDIR)/audacity-valnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@xml/$(DEPDIR)/audacity-XMLFileReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@xml/$(DEPDIR)/audacity-XMLTagHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@xml/$(DEPDIR)/audacity-XMLWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@xml/$(DEPDIR)/libaudacity_la-XMLTagHandler.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libaudacity_la-BlockFile.lo: BlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-BlockFile.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-BlockFile.Tpo -c -o libaudacity_la-BlockFile.lo `test -f 'BlockFile.cpp' || echo '$(srcdir)/'`BlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-BlockFile.Tpo $(DEPDIR)/libaudacity_la-BlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BlockFile.cpp' object='libaudacity_la-BlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-BlockFile.lo `test -f 'BlockFile.cpp' || echo '$(srcdir)/'`BlockFile.cpp

libaudacity_la-DirManager.lo: DirManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-DirManager.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-DirManager.Tpo -c -o libaudacity_la-DirManager.lo `test -f 'DirManager.cpp' || echo '$(srcdir)/'`DirManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-DirManager.Tpo $(DEPDIR)/libaudacity_la-DirManager.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DirManager.cpp' object='libaudacity_la-DirManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-DirManager.lo `test -f 'DirManager.cpp' || echo '$(srcdir)/'`DirManager.cpp

libaudacity_la-Dither.lo: Dither.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-Dither.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-Dither.Tpo -c -o libaudacity_la-Dither.lo `test -f 'Dither.cpp' || echo '$(srcdir)/'`Dither.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-Dither.Tpo $(DEPDIR)/libaudacity_la-Dither.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Dither.cpp' object='libaudacity_la-Dither.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-Dither.lo `test -f 'Dither.cpp' || echo '$(srcdir)/'`Dither.cpp

libaudacity_la-FileFormats.lo: FileFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-FileFormats.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-FileFormats.Tpo -c -o libaudacity_la-FileFormats.lo `test -f 'FileFormats.cpp' || echo '$(srcdir)/'`FileFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-FileFormats.Tpo $(DEPDIR)/libaudacity_la-FileFormats.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileFormats.cpp' object='libaudacity_la-FileFormats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-FileFormats.lo `test -f 'FileFormats.cpp' || echo '$(srcdir)/'`FileFormats.cpp

libaudacity_la-Internat.lo: Internat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-Internat.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-Internat.Tpo -c -o libaudacity_la-Internat.lo `test -f 'Internat.cpp' || echo '$(srcdir)/'`Internat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-Internat.Tpo $(DEPDIR)/libaudacity_la-Internat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Internat.cpp' object='libaudacity_la-Internat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-Internat.lo `test -f 'Internat.cpp' || echo '$(srcdir)/'`Internat.cpp

libaudacity_la-Prefs.lo: Prefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-Prefs.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-Prefs.Tpo -c -o libaudacity_la-Prefs.lo `test -f 'Prefs.cpp' || echo '$(srcdir)/'`Prefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-Prefs.Tpo $(DEPDIR)/libaudacity_la-Prefs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Prefs.cpp' object='libaudacity_la-Prefs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-Prefs.lo `test -f 'Prefs.cpp' || echo '$(srcdir)/'`Prefs.cpp

libaudacity_la-SampleFormat.lo: SampleFormat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-SampleFormat.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-SampleFormat.Tpo -c -o libaudacity_la-SampleFormat.lo `test -f 'SampleFormat.cpp' || echo '$(srcdir)/'`SampleFormat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-SampleFormat.Tpo $(DEPDIR)/libaudacity_la-SampleFormat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SampleFormat.cpp' object='libaudacity_la-SampleFormat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-SampleFormat.lo `test -f 'SampleFormat.cpp' || echo '$(srcdir)/'`SampleFormat.cpp

libaudacity_la-Sequence.lo: Sequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libaudacity_la-Sequence.lo -MD -MP -MF $(DEPDIR)/libaudacity_la-Sequence.Tpo -c -o libaudacity_la-Sequence.lo `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaudacity_la-Sequence.Tpo $(DEPDIR)/libaudacity_la-Sequence.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sequence.cpp' object='libaudacity_la-Sequence.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libaudacity_la-Sequence.lo `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp

blockfile/libaudacity_la-LegacyAliasBlockFile.lo: blockfile/LegacyAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-LegacyAliasBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-LegacyAliasBlockFile.Tpo -c -o blockfile/libaudacity_la-LegacyAliasBlockFile.lo `test -f 'blockfile/LegacyAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-LegacyAliasBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-LegacyAliasBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyAliasBlockFile.cpp' object='blockfile/libaudacity_la-LegacyAliasBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-LegacyAliasBlockFile.lo `test -f 'blockfile/LegacyAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyAliasBlockFile.cpp

blockfile/libaudacity_la-LegacyBlockFile.lo: blockfile/LegacyBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-LegacyBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-LegacyBlockFile.Tpo -c -o blockfile/libaudacity_la-LegacyBlockFile.lo `test -f 'blockfile/LegacyBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-LegacyBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-LegacyBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyBlockFile.cpp' object='blockfile/libaudacity_la-LegacyBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-LegacyBlockFile.lo `test -f 'blockfile/LegacyBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyBlockFile.cpp

blockfile/libaudacity_la-ODDecodeBlockFile.lo: blockfile/ODDecodeBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-ODDecodeBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-ODDecodeBlockFile.Tpo -c -o blockfile/libaudacity_la-ODDecodeBlockFile.lo `test -f 'blockfile/ODDecodeBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODDecodeBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-ODDecodeBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-ODDecodeBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODDecodeBlockFile.cpp' object='blockfile/libaudacity_la-ODDecodeBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-ODDecodeBlockFile.lo `test -f 'blockfile/ODDecodeBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODDecodeBlockFile.cpp

blockfile/libaudacity_la-ODPCMAliasBlockFile.lo: blockfile/ODPCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-ODPCMAliasBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-ODPCMAliasBlockFile.Tpo -c -o blockfile/libaudacity_la-ODPCMAliasBlockFile.lo `test -f 'blockfile/ODPCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODPCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-ODPCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-ODPCMAliasBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODPCMAliasBlockFile.cpp' object='blockfile/libaudacity_la-ODPCMAliasBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-ODPCMAliasBlockFile.lo `test -f 'blockfile/ODPCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODPCMAliasBlockFile.cpp

blockfile/libaudacity_la-PCMAliasBlockFile.lo: blockfile/PCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-PCMAliasBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-PCMAliasBlockFile.Tpo -c -o blockfile/libaudacity_la-PCMAliasBlockFile.lo `test -f 'blockfile/PCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/PCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-PCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-PCMAliasBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/PCMAliasBlockFile.cpp' object='blockfile/libaudacity_la-PCMAliasBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-PCMAliasBlockFile.lo `test -f 'blockfile/PCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/PCMAliasBlockFile.cpp

blockfile/libaudacity_la-SilentBlockFile.lo: blockfile/SilentBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-SilentBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-SilentBlockFile.Tpo -c -o blockfile/libaudacity_la-SilentBlockFile.lo `test -f 'blockfile/SilentBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SilentBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-SilentBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-SilentBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SilentBlockFile.cpp' object='blockfile/libaudacity_la-SilentBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-SilentBlockFile.lo `test -f 'blockfile/SilentBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SilentBlockFile.cpp

blockfile/libaudacity_la-SimpleBlockFile.lo: blockfile/SimpleBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blockfile/libaudacity_la-SimpleBlockFile.lo -MD -MP -MF blockfile/$(DEPDIR)/libaudacity_la-SimpleBlockFile.Tpo -c -o blockfile/libaudacity_la-SimpleBlockFile.lo `test -f 'blockfile/SimpleBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SimpleBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/libaudacity_la-SimpleBlockFile.Tpo blockfile/$(DEPDIR)/libaudacity_la-SimpleBlockFile.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SimpleBlockFile.cpp' object='blockfile/libaudacity_la-SimpleBlockFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/libaudacity_la-SimpleBlockFile.lo `test -f 'blockfile/SimpleBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SimpleBlockFile.cpp

xml/libaudacity_la-XMLTagHandler.lo: xml/XMLTagHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xml/libaudacity_la-XMLTagHandler.lo -MD -MP -MF xml/$(DEPDIR)/libaudacity_la-XMLTagHandler.Tpo -c -o xml/libaudacity_la-XMLTagHandler.lo `test -f 'xml/XMLTagHandler.cpp' || echo '$(srcdir)/'`xml/XMLTagHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/libaudacity_la-XMLTagHandler.Tpo xml/$(DEPDIR)/libaudacity_la-XMLTagHandler.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLTagHandler.cpp' object='xml/libaudacity_la-XMLTagHandler.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaudacity_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xml/libaudacity_la-XMLTagHandler.lo `test -f 'xml/XMLTagHandler.cpp' || echo '$(srcdir)/'`xml/XMLTagHandler.cpp

audacity-BlockFile.o: BlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BlockFile.o -MD -MP -MF $(DEPDIR)/audacity-BlockFile.Tpo -c -o audacity-BlockFile.o `test -f 'BlockFile.cpp' || echo '$(srcdir)/'`BlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BlockFile.Tpo $(DEPDIR)/audacity-BlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BlockFile.cpp' object='audacity-BlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BlockFile.o `test -f 'BlockFile.cpp' || echo '$(srcdir)/'`BlockFile.cpp

audacity-BlockFile.obj: BlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BlockFile.obj -MD -MP -MF $(DEPDIR)/audacity-BlockFile.Tpo -c -o audacity-BlockFile.obj `if test -f 'BlockFile.cpp'; then $(CYGPATH_W) 'BlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/BlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BlockFile.Tpo $(DEPDIR)/audacity-BlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BlockFile.cpp' object='audacity-BlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BlockFile.obj `if test -f 'BlockFile.cpp'; then $(CYGPATH_W) 'BlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/BlockFile.cpp'; fi`

audacity-DirManager.o: DirManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DirManager.o -MD -MP -MF $(DEPDIR)/audacity-DirManager.Tpo -c -o audacity-DirManager.o `test -f 'DirManager.cpp' || echo '$(srcdir)/'`DirManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DirManager.Tpo $(DEPDIR)/audacity-DirManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DirManager.cpp' object='audacity-DirManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DirManager.o `test -f 'DirManager.cpp' || echo '$(srcdir)/'`DirManager.cpp

audacity-DirManager.obj: DirManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DirManager.obj -MD -MP -MF $(DEPDIR)/audacity-DirManager.Tpo -c -o audacity-DirManager.obj `if test -f 'DirManager.cpp'; then $(CYGPATH_W) 'DirManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DirManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DirManager.Tpo $(DEPDIR)/audacity-DirManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DirManager.cpp' object='audacity-DirManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DirManager.obj `if test -f 'DirManager.cpp'; then $(CYGPATH_W) 'DirManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DirManager.cpp'; fi`

audacity-Dither.o: Dither.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Dither.o -MD -MP -MF $(DEPDIR)/audacity-Dither.Tpo -c -o audacity-Dither.o `test -f 'Dither.cpp' || echo '$(srcdir)/'`Dither.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Dither.Tpo $(DEPDIR)/audacity-Dither.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Dither.cpp' object='audacity-Dither.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Dither.o `test -f 'Dither.cpp' || echo '$(srcdir)/'`Dither.cpp

audacity-Dither.obj: Dither.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Dither.obj -MD -MP -MF $(DEPDIR)/audacity-Dither.Tpo -c -o audacity-Dither.obj `if test -f 'Dither.cpp'; then $(CYGPATH_W) 'Dither.cpp'; else $(CYGPATH_W) '$(srcdir)/Dither.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Dither.Tpo $(DEPDIR)/audacity-Dither.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Dither.cpp' object='audacity-Dither.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Dither.obj `if test -f 'Dither.cpp'; then $(CYGPATH_W) 'Dither.cpp'; else $(CYGPATH_W) '$(srcdir)/Dither.cpp'; fi`

audacity-FileFormats.o: FileFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileFormats.o -MD -MP -MF $(DEPDIR)/audacity-FileFormats.Tpo -c -o audacity-FileFormats.o `test -f 'FileFormats.cpp' || echo '$(srcdir)/'`FileFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileFormats.Tpo $(DEPDIR)/audacity-FileFormats.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileFormats.cpp' object='audacity-FileFormats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileFormats.o `test -f 'FileFormats.cpp' || echo '$(srcdir)/'`FileFormats.cpp

audacity-FileFormats.obj: FileFormats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileFormats.obj -MD -MP -MF $(DEPDIR)/audacity-FileFormats.Tpo -c -o audacity-FileFormats.obj `if test -f 'FileFormats.cpp'; then $(CYGPATH_W) 'FileFormats.cpp'; else $(CYGPATH_W) '$(srcdir)/FileFormats.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileFormats.Tpo $(DEPDIR)/audacity-FileFormats.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileFormats.cpp' object='audacity-FileFormats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileFormats.obj `if test -f 'FileFormats.cpp'; then $(CYGPATH_W) 'FileFormats.cpp'; else $(CYGPATH_W) '$(srcdir)/FileFormats.cpp'; fi`

audacity-Internat.o: Internat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Internat.o -MD -MP -MF $(DEPDIR)/audacity-Internat.Tpo -c -o audacity-Internat.o `test -f 'Internat.cpp' || echo '$(srcdir)/'`Internat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Internat.Tpo $(DEPDIR)/audacity-Internat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Internat.cpp' object='audacity-Internat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Internat.o `test -f 'Internat.cpp' || echo '$(srcdir)/'`Internat.cpp

audacity-Internat.obj: Internat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Internat.obj -MD -MP -MF $(DEPDIR)/audacity-Internat.Tpo -c -o audacity-Internat.obj `if test -f 'Internat.cpp'; then $(CYGPATH_W) 'Internat.cpp'; else $(CYGPATH_W) '$(srcdir)/Internat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Internat.Tpo $(DEPDIR)/audacity-Internat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Internat.cpp' object='audacity-Internat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Internat.obj `if test -f 'Internat.cpp'; then $(CYGPATH_W) 'Internat.cpp'; else $(CYGPATH_W) '$(srcdir)/Internat.cpp'; fi`

audacity-Prefs.o: Prefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Prefs.o -MD -MP -MF $(DEPDIR)/audacity-Prefs.Tpo -c -o audacity-Prefs.o `test -f 'Prefs.cpp' || echo '$(srcdir)/'`Prefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Prefs.Tpo $(DEPDIR)/audacity-Prefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Prefs.cpp' object='audacity-Prefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Prefs.o `test -f 'Prefs.cpp' || echo '$(srcdir)/'`Prefs.cpp

audacity-Prefs.obj: Prefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Prefs.obj -MD -MP -MF $(DEPDIR)/audacity-Prefs.Tpo -c -o audacity-Prefs.obj `if test -f 'Prefs.cpp'; then $(CYGPATH_W) 'Prefs.cpp'; else $(CYGPATH_W) '$(srcdir)/Prefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Prefs.Tpo $(DEPDIR)/audacity-Prefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Prefs.cpp' object='audacity-Prefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Prefs.obj `if test -f 'Prefs.cpp'; then $(CYGPATH_W) 'Prefs.cpp'; else $(CYGPATH_W) '$(srcdir)/Prefs.cpp'; fi`

audacity-SampleFormat.o: SampleFormat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SampleFormat.o -MD -MP -MF $(DEPDIR)/audacity-SampleFormat.Tpo -c -o audacity-SampleFormat.o `test -f 'SampleFormat.cpp' || echo '$(srcdir)/'`SampleFormat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SampleFormat.Tpo $(DEPDIR)/audacity-SampleFormat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SampleFormat.cpp' object='audacity-SampleFormat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SampleFormat.o `test -f 'SampleFormat.cpp' || echo '$(srcdir)/'`SampleFormat.cpp

audacity-SampleFormat.obj: SampleFormat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SampleFormat.obj -MD -MP -MF $(DEPDIR)/audacity-SampleFormat.Tpo -c -o audacity-SampleFormat.obj `if test -f 'SampleFormat.cpp'; then $(CYGPATH_W) 'SampleFormat.cpp'; else $(CYGPATH_W) '$(srcdir)/SampleFormat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SampleFormat.Tpo $(DEPDIR)/audacity-SampleFormat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SampleFormat.cpp' object='audacity-SampleFormat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SampleFormat.obj `if test -f 'SampleFormat.cpp'; then $(CYGPATH_W) 'SampleFormat.cpp'; else $(CYGPATH_W) '$(srcdir)/SampleFormat.cpp'; fi`

audacity-Sequence.o: Sequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Sequence.o -MD -MP -MF $(DEPDIR)/audacity-Sequence.Tpo -c -o audacity-Sequence.o `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Sequence.Tpo $(DEPDIR)/audacity-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sequence.cpp' object='audacity-Sequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Sequence.o `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp

audacity-Sequence.obj: Sequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Sequence.obj -MD -MP -MF $(DEPDIR)/audacity-Sequence.Tpo -c -o audacity-Sequence.obj `if test -f 'Sequence.cpp'; then $(CYGPATH_W) 'Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Sequence.Tpo $(DEPDIR)/audacity-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Sequence.cpp' object='audacity-Sequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Sequence.obj `if test -f 'Sequence.cpp'; then $(CYGPATH_W) 'Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequence.cpp'; fi`

blockfile/audacity-LegacyAliasBlockFile.o: blockfile/LegacyAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-LegacyAliasBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Tpo -c -o blockfile/audacity-LegacyAliasBlockFile.o `test -f 'blockfile/LegacyAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyAliasBlockFile.cpp' object='blockfile/audacity-LegacyAliasBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-LegacyAliasBlockFile.o `test -f 'blockfile/LegacyAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyAliasBlockFile.cpp

blockfile/audacity-LegacyAliasBlockFile.obj: blockfile/LegacyAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-LegacyAliasBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Tpo -c -o blockfile/audacity-LegacyAliasBlockFile.obj `if test -f 'blockfile/LegacyAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/LegacyAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/LegacyAliasBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-LegacyAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyAliasBlockFile.cpp' object='blockfile/audacity-LegacyAliasBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-LegacyAliasBlockFile.obj `if test -f 'blockfile/LegacyAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/LegacyAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/LegacyAliasBlockFile.cpp'; fi`

blockfile/audacity-LegacyBlockFile.o: blockfile/LegacyBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-LegacyBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Tpo -c -o blockfile/audacity-LegacyBlockFile.o `test -f 'blockfile/LegacyBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Tpo blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyBlockFile.cpp' object='blockfile/audacity-LegacyBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-LegacyBlockFile.o `test -f 'blockfile/LegacyBlockFile.cpp' || echo '$(srcdir)/'`blockfile/LegacyBlockFile.cpp

blockfile/audacity-LegacyBlockFile.obj: blockfile/LegacyBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-LegacyBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Tpo -c -o blockfile/audacity-LegacyBlockFile.obj `if test -f 'blockfile/LegacyBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/LegacyBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/LegacyBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Tpo blockfile/$(DEPDIR)/audacity-LegacyBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/LegacyBlockFile.cpp' object='blockfile/audacity-LegacyBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-LegacyBlockFile.obj `if test -f 'blockfile/LegacyBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/LegacyBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/LegacyBlockFile.cpp'; fi`

blockfile/audacity-ODDecodeBlockFile.o: blockfile/ODDecodeBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-ODDecodeBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Tpo -c -o blockfile/audacity-ODDecodeBlockFile.o `test -f 'blockfile/ODDecodeBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODDecodeBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Tpo blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODDecodeBlockFile.cpp' object='blockfile/audacity-ODDecodeBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-ODDecodeBlockFile.o `test -f 'blockfile/ODDecodeBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODDecodeBlockFile.cpp

blockfile/audacity-ODDecodeBlockFile.obj: blockfile/ODDecodeBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-ODDecodeBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Tpo -c -o blockfile/audacity-ODDecodeBlockFile.obj `if test -f 'blockfile/ODDecodeBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/ODDecodeBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/ODDecodeBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Tpo blockfile/$(DEPDIR)/audacity-ODDecodeBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODDecodeBlockFile.cpp' object='blockfile/audacity-ODDecodeBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-ODDecodeBlockFile.obj `if test -f 'blockfile/ODDecodeBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/ODDecodeBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/ODDecodeBlockFile.cpp'; fi`

blockfile/audacity-ODPCMAliasBlockFile.o: blockfile/ODPCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-ODPCMAliasBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Tpo -c -o blockfile/audacity-ODPCMAliasBlockFile.o `test -f 'blockfile/ODPCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODPCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODPCMAliasBlockFile.cpp' object='blockfile/audacity-ODPCMAliasBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-ODPCMAliasBlockFile.o `test -f 'blockfile/ODPCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/ODPCMAliasBlockFile.cpp

blockfile/audacity-ODPCMAliasBlockFile.obj: blockfile/ODPCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-ODPCMAliasBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Tpo -c -o blockfile/audacity-ODPCMAliasBlockFile.obj `if test -f 'blockfile/ODPCMAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/ODPCMAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/ODPCMAliasBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-ODPCMAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/ODPCMAliasBlockFile.cpp' object='blockfile/audacity-ODPCMAliasBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-ODPCMAliasBlockFile.obj `if test -f 'blockfile/ODPCMAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/ODPCMAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/ODPCMAliasBlockFile.cpp'; fi`

blockfile/audacity-PCMAliasBlockFile.o: blockfile/PCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-PCMAliasBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Tpo -c -o blockfile/audacity-PCMAliasBlockFile.o `test -f 'blockfile/PCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/PCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/PCMAliasBlockFile.cpp' object='blockfile/audacity-PCMAliasBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-PCMAliasBlockFile.o `test -f 'blockfile/PCMAliasBlockFile.cpp' || echo '$(srcdir)/'`blockfile/PCMAliasBlockFile.cpp

blockfile/audacity-PCMAliasBlockFile.obj: blockfile/PCMAliasBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-PCMAliasBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Tpo -c -o blockfile/audacity-PCMAliasBlockFile.obj `if test -f 'blockfile/PCMAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/PCMAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/PCMAliasBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Tpo blockfile/$(DEPDIR)/audacity-PCMAliasBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/PCMAliasBlockFile.cpp' object='blockfile/audacity-PCMAliasBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-PCMAliasBlockFile.obj `if test -f 'blockfile/PCMAliasBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/PCMAliasBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/PCMAliasBlockFile.cpp'; fi`

blockfile/audacity-SilentBlockFile.o: blockfile/SilentBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-SilentBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-SilentBlockFile.Tpo -c -o blockfile/audacity-SilentBlockFile.o `test -f 'blockfile/SilentBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SilentBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-SilentBlockFile.Tpo blockfile/$(DEPDIR)/audacity-SilentBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SilentBlockFile.cpp' object='blockfile/audacity-SilentBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-SilentBlockFile.o `test -f 'blockfile/SilentBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SilentBlockFile.cpp

blockfile/audacity-SilentBlockFile.obj: blockfile/SilentBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-SilentBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-SilentBlockFile.Tpo -c -o blockfile/audacity-SilentBlockFile.obj `if test -f 'blockfile/SilentBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/SilentBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/SilentBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-SilentBlockFile.Tpo blockfile/$(DEPDIR)/audacity-SilentBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SilentBlockFile.cpp' object='blockfile/audacity-SilentBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-SilentBlockFile.obj `if test -f 'blockfile/SilentBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/SilentBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/SilentBlockFile.cpp'; fi`

blockfile/audacity-SimpleBlockFile.o: blockfile/SimpleBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-SimpleBlockFile.o -MD -MP -MF blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Tpo -c -o blockfile/audacity-SimpleBlockFile.o `test -f 'blockfile/SimpleBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SimpleBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Tpo blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SimpleBlockFile.cpp' object='blockfile/audacity-SimpleBlockFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-SimpleBlockFile.o `test -f 'blockfile/SimpleBlockFile.cpp' || echo '$(srcdir)/'`blockfile/SimpleBlockFile.cpp

blockfile/audacity-SimpleBlockFile.obj: blockfile/SimpleBlockFile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT blockfile/audacity-SimpleBlockFile.obj -MD -MP -MF blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Tpo -c -o blockfile/audacity-SimpleBlockFile.obj `if test -f 'blockfile/SimpleBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/SimpleBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/SimpleBlockFile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Tpo blockfile/$(DEPDIR)/audacity-SimpleBlockFile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blockfile/SimpleBlockFile.cpp' object='blockfile/audacity-SimpleBlockFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o blockfile/audacity-SimpleBlockFile.obj `if test -f 'blockfile/SimpleBlockFile.cpp'; then $(CYGPATH_W) 'blockfile/SimpleBlockFile.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfile/SimpleBlockFile.cpp'; fi`

xml/audacity-XMLTagHandler.o: xml/XMLTagHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLTagHandler.o -MD -MP -MF xml/$(DEPDIR)/audacity-XMLTagHandler.Tpo -c -o xml/audacity-XMLTagHandler.o `test -f 'xml/XMLTagHandler.cpp' || echo '$(srcdir)/'`xml/XMLTagHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLTagHandler.Tpo xml/$(DEPDIR)/audacity-XMLTagHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLTagHandler.cpp' object='xml/audacity-XMLTagHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLTagHandler.o `test -f 'xml/XMLTagHandler.cpp' || echo '$(srcdir)/'`xml/XMLTagHandler.cpp

xml/audacity-XMLTagHandler.obj: xml/XMLTagHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLTagHandler.obj -MD -MP -MF xml/$(DEPDIR)/audacity-XMLTagHandler.Tpo -c -o xml/audacity-XMLTagHandler.obj `if test -f 'xml/XMLTagHandler.cpp'; then $(CYGPATH_W) 'xml/XMLTagHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLTagHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLTagHandler.Tpo xml/$(DEPDIR)/audacity-XMLTagHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLTagHandler.cpp' object='xml/audacity-XMLTagHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLTagHandler.obj `if test -f 'xml/XMLTagHandler.cpp'; then $(CYGPATH_W) 'xml/XMLTagHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLTagHandler.cpp'; fi`

audacity-AboutDialog.o: AboutDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AboutDialog.o -MD -MP -MF $(DEPDIR)/audacity-AboutDialog.Tpo -c -o audacity-AboutDialog.o `test -f 'AboutDialog.cpp' || echo '$(srcdir)/'`AboutDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AboutDialog.Tpo $(DEPDIR)/audacity-AboutDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AboutDialog.cpp' object='audacity-AboutDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AboutDialog.o `test -f 'AboutDialog.cpp' || echo '$(srcdir)/'`AboutDialog.cpp

audacity-AboutDialog.obj: AboutDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AboutDialog.obj -MD -MP -MF $(DEPDIR)/audacity-AboutDialog.Tpo -c -o audacity-AboutDialog.obj `if test -f 'AboutDialog.cpp'; then $(CYGPATH_W) 'AboutDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/AboutDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AboutDialog.Tpo $(DEPDIR)/audacity-AboutDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AboutDialog.cpp' object='audacity-AboutDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AboutDialog.obj `if test -f 'AboutDialog.cpp'; then $(CYGPATH_W) 'AboutDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/AboutDialog.cpp'; fi`

audacity-AColor.o: AColor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AColor.o -MD -MP -MF $(DEPDIR)/audacity-AColor.Tpo -c -o audacity-AColor.o `test -f 'AColor.cpp' || echo '$(srcdir)/'`AColor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AColor.Tpo $(DEPDIR)/audacity-AColor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AColor.cpp' object='audacity-AColor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AColor.o `test -f 'AColor.cpp' || echo '$(srcdir)/'`AColor.cpp

audacity-AColor.obj: AColor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AColor.obj -MD -MP -MF $(DEPDIR)/audacity-AColor.Tpo -c -o audacity-AColor.obj `if test -f 'AColor.cpp'; then $(CYGPATH_W) 'AColor.cpp'; else $(CYGPATH_W) '$(srcdir)/AColor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AColor.Tpo $(DEPDIR)/audacity-AColor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AColor.cpp' object='audacity-AColor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AColor.obj `if test -f 'AColor.cpp'; then $(CYGPATH_W) 'AColor.cpp'; else $(CYGPATH_W) '$(srcdir)/AColor.cpp'; fi`

audacity-AudacityApp.o: AudacityApp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudacityApp.o -MD -MP -MF $(DEPDIR)/audacity-AudacityApp.Tpo -c -o audacity-AudacityApp.o `test -f 'AudacityApp.cpp' || echo '$(srcdir)/'`AudacityApp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudacityApp.Tpo $(DEPDIR)/audacity-AudacityApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudacityApp.cpp' object='audacity-AudacityApp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudacityApp.o `test -f 'AudacityApp.cpp' || echo '$(srcdir)/'`AudacityApp.cpp

audacity-AudacityApp.obj: AudacityApp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudacityApp.obj -MD -MP -MF $(DEPDIR)/audacity-AudacityApp.Tpo -c -o audacity-AudacityApp.obj `if test -f 'AudacityApp.cpp'; then $(CYGPATH_W) 'AudacityApp.cpp'; else $(CYGPATH_W) '$(srcdir)/AudacityApp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudacityApp.Tpo $(DEPDIR)/audacity-AudacityApp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudacityApp.cpp' object='audacity-AudacityApp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudacityApp.obj `if test -f 'AudacityApp.cpp'; then $(CYGPATH_W) 'AudacityApp.cpp'; else $(CYGPATH_W) '$(srcdir)/AudacityApp.cpp'; fi`

audacity-AudacityLogger.o: AudacityLogger.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudacityLogger.o -MD -MP -MF $(DEPDIR)/audacity-AudacityLogger.Tpo -c -o audacity-AudacityLogger.o `test -f 'AudacityLogger.cpp' || echo '$(srcdir)/'`AudacityLogger.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudacityLogger.Tpo $(DEPDIR)/audacity-AudacityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudacityLogger.cpp' object='audacity-AudacityLogger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudacityLogger.o `test -f 'AudacityLogger.cpp' || echo '$(srcdir)/'`AudacityLogger.cpp

audacity-AudacityLogger.obj: AudacityLogger.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudacityLogger.obj -MD -MP -MF $(DEPDIR)/audacity-AudacityLogger.Tpo -c -o audacity-AudacityLogger.obj `if test -f 'AudacityLogger.cpp'; then $(CYGPATH_W) 'AudacityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/AudacityLogger.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudacityLogger.Tpo $(DEPDIR)/audacity-AudacityLogger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudacityLogger.cpp' object='audacity-AudacityLogger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudacityLogger.obj `if test -f 'AudacityLogger.cpp'; then $(CYGPATH_W) 'AudacityLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/AudacityLogger.cpp'; fi`

audacity-AudioIO.o: AudioIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudioIO.o -MD -MP -MF $(DEPDIR)/audacity-AudioIO.Tpo -c -o audacity-AudioIO.o `test -f 'AudioIO.cpp' || echo '$(srcdir)/'`AudioIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudioIO.Tpo $(DEPDIR)/audacity-AudioIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudioIO.cpp' object='audacity-AudioIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudioIO.o `test -f 'AudioIO.cpp' || echo '$(srcdir)/'`AudioIO.cpp

audacity-AudioIO.obj: AudioIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AudioIO.obj -MD -MP -MF $(DEPDIR)/audacity-AudioIO.Tpo -c -o audacity-AudioIO.obj `if test -f 'AudioIO.cpp'; then $(CYGPATH_W) 'AudioIO.cpp'; else $(CYGPATH_W) '$(srcdir)/AudioIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AudioIO.Tpo $(DEPDIR)/audacity-AudioIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AudioIO.cpp' object='audacity-AudioIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AudioIO.obj `if test -f 'AudioIO.cpp'; then $(CYGPATH_W) 'AudioIO.cpp'; else $(CYGPATH_W) '$(srcdir)/AudioIO.cpp'; fi`

audacity-AutoRecovery.o: AutoRecovery.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AutoRecovery.o -MD -MP -MF $(DEPDIR)/audacity-AutoRecovery.Tpo -c -o audacity-AutoRecovery.o `test -f 'AutoRecovery.cpp' || echo '$(srcdir)/'`AutoRecovery.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AutoRecovery.Tpo $(DEPDIR)/audacity-AutoRecovery.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AutoRecovery.cpp' object='audacity-AutoRecovery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AutoRecovery.o `test -f 'AutoRecovery.cpp' || echo '$(srcdir)/'`AutoRecovery.cpp

audacity-AutoRecovery.obj: AutoRecovery.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-AutoRecovery.obj -MD -MP -MF $(DEPDIR)/audacity-AutoRecovery.Tpo -c -o audacity-AutoRecovery.obj `if test -f 'AutoRecovery.cpp'; then $(CYGPATH_W) 'AutoRecovery.cpp'; else $(CYGPATH_W) '$(srcdir)/AutoRecovery.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-AutoRecovery.Tpo $(DEPDIR)/audacity-AutoRecovery.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AutoRecovery.cpp' object='audacity-AutoRecovery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-AutoRecovery.obj `if test -f 'AutoRecovery.cpp'; then $(CYGPATH_W) 'AutoRecovery.cpp'; else $(CYGPATH_W) '$(srcdir)/AutoRecovery.cpp'; fi`

audacity-BatchCommandDialog.o: BatchCommandDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchCommandDialog.o -MD -MP -MF $(DEPDIR)/audacity-BatchCommandDialog.Tpo -c -o audacity-BatchCommandDialog.o `test -f 'BatchCommandDialog.cpp' || echo '$(srcdir)/'`BatchCommandDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchCommandDialog.Tpo $(DEPDIR)/audacity-BatchCommandDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchCommandDialog.cpp' object='audacity-BatchCommandDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchCommandDialog.o `test -f 'BatchCommandDialog.cpp' || echo '$(srcdir)/'`BatchCommandDialog.cpp

audacity-BatchCommandDialog.obj: BatchCommandDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchCommandDialog.obj -MD -MP -MF $(DEPDIR)/audacity-BatchCommandDialog.Tpo -c -o audacity-BatchCommandDialog.obj `if test -f 'BatchCommandDialog.cpp'; then $(CYGPATH_W) 'BatchCommandDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchCommandDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchCommandDialog.Tpo $(DEPDIR)/audacity-BatchCommandDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchCommandDialog.cpp' object='audacity-BatchCommandDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchCommandDialog.obj `if test -f 'BatchCommandDialog.cpp'; then $(CYGPATH_W) 'BatchCommandDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchCommandDialog.cpp'; fi`

audacity-BatchCommands.o: BatchCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchCommands.o -MD -MP -MF $(DEPDIR)/audacity-BatchCommands.Tpo -c -o audacity-BatchCommands.o `test -f 'BatchCommands.cpp' || echo '$(srcdir)/'`BatchCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchCommands.Tpo $(DEPDIR)/audacity-BatchCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchCommands.cpp' object='audacity-BatchCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchCommands.o `test -f 'BatchCommands.cpp' || echo '$(srcdir)/'`BatchCommands.cpp

audacity-BatchCommands.obj: BatchCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchCommands.obj -MD -MP -MF $(DEPDIR)/audacity-BatchCommands.Tpo -c -o audacity-BatchCommands.obj `if test -f 'BatchCommands.cpp'; then $(CYGPATH_W) 'BatchCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchCommands.Tpo $(DEPDIR)/audacity-BatchCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchCommands.cpp' object='audacity-BatchCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchCommands.obj `if test -f 'BatchCommands.cpp'; then $(CYGPATH_W) 'BatchCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchCommands.cpp'; fi`

audacity-BatchProcessDialog.o: BatchProcessDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchProcessDialog.o -MD -MP -MF $(DEPDIR)/audacity-BatchProcessDialog.Tpo -c -o audacity-BatchProcessDialog.o `test -f 'BatchProcessDialog.cpp' || echo '$(srcdir)/'`BatchProcessDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchProcessDialog.Tpo $(DEPDIR)/audacity-BatchProcessDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchProcessDialog.cpp' object='audacity-BatchProcessDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchProcessDialog.o `test -f 'BatchProcessDialog.cpp' || echo '$(srcdir)/'`BatchProcessDialog.cpp

audacity-BatchProcessDialog.obj: BatchProcessDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-BatchProcessDialog.obj -MD -MP -MF $(DEPDIR)/audacity-BatchProcessDialog.Tpo -c -o audacity-BatchProcessDialog.obj `if test -f 'BatchProcessDialog.cpp'; then $(CYGPATH_W) 'BatchProcessDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchProcessDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-BatchProcessDialog.Tpo $(DEPDIR)/audacity-BatchProcessDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BatchProcessDialog.cpp' object='audacity-BatchProcessDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-BatchProcessDialog.obj `if test -f 'BatchProcessDialog.cpp'; then $(CYGPATH_W) 'BatchProcessDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/BatchProcessDialog.cpp'; fi`

audacity-Benchmark.o: Benchmark.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Benchmark.o -MD -MP -MF $(DEPDIR)/audacity-Benchmark.Tpo -c -o audacity-Benchmark.o `test -f 'Benchmark.cpp' || echo '$(srcdir)/'`Benchmark.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Benchmark.Tpo $(DEPDIR)/audacity-Benchmark.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Benchmark.cpp' object='audacity-Benchmark.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Benchmark.o `test -f 'Benchmark.cpp' || echo '$(srcdir)/'`Benchmark.cpp

audacity-Benchmark.obj: Benchmark.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Benchmark.obj -MD -MP -MF $(DEPDIR)/audacity-Benchmark.Tpo -c -o audacity-Benchmark.obj `if test -f 'Benchmark.cpp'; then $(CYGPATH_W) 'Benchmark.cpp'; else $(CYGPATH_W) '$(srcdir)/Benchmark.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Benchmark.Tpo $(DEPDIR)/audacity-Benchmark.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Benchmark.cpp' object='audacity-Benchmark.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Benchmark.obj `if test -f 'Benchmark.cpp'; then $(CYGPATH_W) 'Benchmark.cpp'; else $(CYGPATH_W) '$(srcdir)/Benchmark.cpp'; fi`

audacity-CaptureEvents.o: CaptureEvents.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-CaptureEvents.o -MD -MP -MF $(DEPDIR)/audacity-CaptureEvents.Tpo -c -o audacity-CaptureEvents.o `test -f 'CaptureEvents.cpp' || echo '$(srcdir)/'`CaptureEvents.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-CaptureEvents.Tpo $(DEPDIR)/audacity-CaptureEvents.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CaptureEvents.cpp' object='audacity-CaptureEvents.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-CaptureEvents.o `test -f 'CaptureEvents.cpp' || echo '$(srcdir)/'`CaptureEvents.cpp

audacity-CaptureEvents.obj: CaptureEvents.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-CaptureEvents.obj -MD -MP -MF $(DEPDIR)/audacity-CaptureEvents.Tpo -c -o audacity-CaptureEvents.obj `if test -f 'CaptureEvents.cpp'; then $(CYGPATH_W) 'CaptureEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/CaptureEvents.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-CaptureEvents.Tpo $(DEPDIR)/audacity-CaptureEvents.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CaptureEvents.cpp' object='audacity-CaptureEvents.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-CaptureEvents.obj `if test -f 'CaptureEvents.cpp'; then $(CYGPATH_W) 'CaptureEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/CaptureEvents.cpp'; fi`

audacity-Dependencies.o: Dependencies.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Dependencies.o -MD -MP -MF $(DEPDIR)/audacity-Dependencies.Tpo -c -o audacity-Dependencies.o `test -f 'Dependencies.cpp' || echo '$(srcdir)/'`Dependencies.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Dependencies.Tpo $(DEPDIR)/audacity-Dependencies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Dependencies.cpp' object='audacity-Dependencies.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Dependencies.o `test -f 'Dependencies.cpp' || echo '$(srcdir)/'`Dependencies.cpp

audacity-Dependencies.obj: Dependencies.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Dependencies.obj -MD -MP -MF $(DEPDIR)/audacity-Dependencies.Tpo -c -o audacity-Dependencies.obj `if test -f 'Dependencies.cpp'; then $(CYGPATH_W) 'Dependencies.cpp'; else $(CYGPATH_W) '$(srcdir)/Dependencies.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Dependencies.Tpo $(DEPDIR)/audacity-Dependencies.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Dependencies.cpp' object='audacity-Dependencies.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Dependencies.obj `if test -f 'Dependencies.cpp'; then $(CYGPATH_W) 'Dependencies.cpp'; else $(CYGPATH_W) '$(srcdir)/Dependencies.cpp'; fi`

audacity-DeviceChange.o: DeviceChange.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DeviceChange.o -MD -MP -MF $(DEPDIR)/audacity-DeviceChange.Tpo -c -o audacity-DeviceChange.o `test -f 'DeviceChange.cpp' || echo '$(srcdir)/'`DeviceChange.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DeviceChange.Tpo $(DEPDIR)/audacity-DeviceChange.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DeviceChange.cpp' object='audacity-DeviceChange.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DeviceChange.o `test -f 'DeviceChange.cpp' || echo '$(srcdir)/'`DeviceChange.cpp

audacity-DeviceChange.obj: DeviceChange.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DeviceChange.obj -MD -MP -MF $(DEPDIR)/audacity-DeviceChange.Tpo -c -o audacity-DeviceChange.obj `if test -f 'DeviceChange.cpp'; then $(CYGPATH_W) 'DeviceChange.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceChange.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DeviceChange.Tpo $(DEPDIR)/audacity-DeviceChange.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DeviceChange.cpp' object='audacity-DeviceChange.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DeviceChange.obj `if test -f 'DeviceChange.cpp'; then $(CYGPATH_W) 'DeviceChange.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceChange.cpp'; fi`

audacity-DeviceManager.o: DeviceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DeviceManager.o -MD -MP -MF $(DEPDIR)/audacity-DeviceManager.Tpo -c -o audacity-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DeviceManager.Tpo $(DEPDIR)/audacity-DeviceManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DeviceManager.cpp' object='audacity-DeviceManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DeviceManager.o `test -f 'DeviceManager.cpp' || echo '$(srcdir)/'`DeviceManager.cpp

audacity-DeviceManager.obj: DeviceManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-DeviceManager.obj -MD -MP -MF $(DEPDIR)/audacity-DeviceManager.Tpo -c -o audacity-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-DeviceManager.Tpo $(DEPDIR)/audacity-DeviceManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DeviceManager.cpp' object='audacity-DeviceManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-DeviceManager.obj `if test -f 'DeviceManager.cpp'; then $(CYGPATH_W) 'DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DeviceManager.cpp'; fi`

audacity-Diags.o: Diags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Diags.o -MD -MP -MF $(DEPDIR)/audacity-Diags.Tpo -c -o audacity-Diags.o `test -f 'Diags.cpp' || echo '$(srcdir)/'`Diags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Diags.Tpo $(DEPDIR)/audacity-Diags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Diags.cpp' object='audacity-Diags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Diags.o `test -f 'Diags.cpp' || echo '$(srcdir)/'`Diags.cpp

audacity-Diags.obj: Diags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Diags.obj -MD -MP -MF $(DEPDIR)/audacity-Diags.Tpo -c -o audacity-Diags.obj `if test -f 'Diags.cpp'; then $(CYGPATH_W) 'Diags.cpp'; else $(CYGPATH_W) '$(srcdir)/Diags.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Diags.Tpo $(DEPDIR)/audacity-Diags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Diags.cpp' object='audacity-Diags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Diags.obj `if test -f 'Diags.cpp'; then $(CYGPATH_W) 'Diags.cpp'; else $(CYGPATH_W) '$(srcdir)/Diags.cpp'; fi`

audacity-Envelope.o: Envelope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Envelope.o -MD -MP -MF $(DEPDIR)/audacity-Envelope.Tpo -c -o audacity-Envelope.o `test -f 'Envelope.cpp' || echo '$(srcdir)/'`Envelope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Envelope.Tpo $(DEPDIR)/audacity-Envelope.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Envelope.cpp' object='audacity-Envelope.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Envelope.o `test -f 'Envelope.cpp' || echo '$(srcdir)/'`Envelope.cpp

audacity-Envelope.obj: Envelope.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Envelope.obj -MD -MP -MF $(DEPDIR)/audacity-Envelope.Tpo -c -o audacity-Envelope.obj `if test -f 'Envelope.cpp'; then $(CYGPATH_W) 'Envelope.cpp'; else $(CYGPATH_W) '$(srcdir)/Envelope.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Envelope.Tpo $(DEPDIR)/audacity-Envelope.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Envelope.cpp' object='audacity-Envelope.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Envelope.obj `if test -f 'Envelope.cpp'; then $(CYGPATH_W) 'Envelope.cpp'; else $(CYGPATH_W) '$(srcdir)/Envelope.cpp'; fi`

audacity-FFmpeg.o: FFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FFmpeg.o -MD -MP -MF $(DEPDIR)/audacity-FFmpeg.Tpo -c -o audacity-FFmpeg.o `test -f 'FFmpeg.cpp' || echo '$(srcdir)/'`FFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FFmpeg.Tpo $(DEPDIR)/audacity-FFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FFmpeg.cpp' object='audacity-FFmpeg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FFmpeg.o `test -f 'FFmpeg.cpp' || echo '$(srcdir)/'`FFmpeg.cpp

audacity-FFmpeg.obj: FFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FFmpeg.obj -MD -MP -MF $(DEPDIR)/audacity-FFmpeg.Tpo -c -o audacity-FFmpeg.obj `if test -f 'FFmpeg.cpp'; then $(CYGPATH_W) 'FFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/FFmpeg.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FFmpeg.Tpo $(DEPDIR)/audacity-FFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FFmpeg.cpp' object='audacity-FFmpeg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FFmpeg.obj `if test -f 'FFmpeg.cpp'; then $(CYGPATH_W) 'FFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/FFmpeg.cpp'; fi`

audacity-FFT.o: FFT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FFT.o -MD -MP -MF $(DEPDIR)/audacity-FFT.Tpo -c -o audacity-FFT.o `test -f 'FFT.cpp' || echo '$(srcdir)/'`FFT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FFT.Tpo $(DEPDIR)/audacity-FFT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FFT.cpp' object='audacity-FFT.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FFT.o `test -f 'FFT.cpp' || echo '$(srcdir)/'`FFT.cpp

audacity-FFT.obj: FFT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FFT.obj -MD -MP -MF $(DEPDIR)/audacity-FFT.Tpo -c -o audacity-FFT.obj `if test -f 'FFT.cpp'; then $(CYGPATH_W) 'FFT.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FFT.Tpo $(DEPDIR)/audacity-FFT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FFT.cpp' object='audacity-FFT.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FFT.obj `if test -f 'FFT.cpp'; then $(CYGPATH_W) 'FFT.cpp'; else $(CYGPATH_W) '$(srcdir)/FFT.cpp'; fi`

audacity-FileIO.o: FileIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileIO.o -MD -MP -MF $(DEPDIR)/audacity-FileIO.Tpo -c -o audacity-FileIO.o `test -f 'FileIO.cpp' || echo '$(srcdir)/'`FileIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileIO.Tpo $(DEPDIR)/audacity-FileIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileIO.cpp' object='audacity-FileIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileIO.o `test -f 'FileIO.cpp' || echo '$(srcdir)/'`FileIO.cpp

audacity-FileIO.obj: FileIO.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileIO.obj -MD -MP -MF $(DEPDIR)/audacity-FileIO.Tpo -c -o audacity-FileIO.obj `if test -f 'FileIO.cpp'; then $(CYGPATH_W) 'FileIO.cpp'; else $(CYGPATH_W) '$(srcdir)/FileIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileIO.Tpo $(DEPDIR)/audacity-FileIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileIO.cpp' object='audacity-FileIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileIO.obj `if test -f 'FileIO.cpp'; then $(CYGPATH_W) 'FileIO.cpp'; else $(CYGPATH_W) '$(srcdir)/FileIO.cpp'; fi`

audacity-FileNames.o: FileNames.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileNames.o -MD -MP -MF $(DEPDIR)/audacity-FileNames.Tpo -c -o audacity-FileNames.o `test -f 'FileNames.cpp' || echo '$(srcdir)/'`FileNames.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileNames.Tpo $(DEPDIR)/audacity-FileNames.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileNames.cpp' object='audacity-FileNames.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileNames.o `test -f 'FileNames.cpp' || echo '$(srcdir)/'`FileNames.cpp

audacity-FileNames.obj: FileNames.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FileNames.obj -MD -MP -MF $(DEPDIR)/audacity-FileNames.Tpo -c -o audacity-FileNames.obj `if test -f 'FileNames.cpp'; then $(CYGPATH_W) 'FileNames.cpp'; else $(CYGPATH_W) '$(srcdir)/FileNames.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FileNames.Tpo $(DEPDIR)/audacity-FileNames.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FileNames.cpp' object='audacity-FileNames.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FileNames.obj `if test -f 'FileNames.cpp'; then $(CYGPATH_W) 'FileNames.cpp'; else $(CYGPATH_W) '$(srcdir)/FileNames.cpp'; fi`

audacity-FreqWindow.o: FreqWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FreqWindow.o -MD -MP -MF $(DEPDIR)/audacity-FreqWindow.Tpo -c -o audacity-FreqWindow.o `test -f 'FreqWindow.cpp' || echo '$(srcdir)/'`FreqWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FreqWindow.Tpo $(DEPDIR)/audacity-FreqWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FreqWindow.cpp' object='audacity-FreqWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FreqWindow.o `test -f 'FreqWindow.cpp' || echo '$(srcdir)/'`FreqWindow.cpp

audacity-FreqWindow.obj: FreqWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-FreqWindow.obj -MD -MP -MF $(DEPDIR)/audacity-FreqWindow.Tpo -c -o audacity-FreqWindow.obj `if test -f 'FreqWindow.cpp'; then $(CYGPATH_W) 'FreqWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/FreqWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-FreqWindow.Tpo $(DEPDIR)/audacity-FreqWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FreqWindow.cpp' object='audacity-FreqWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-FreqWindow.obj `if test -f 'FreqWindow.cpp'; then $(CYGPATH_W) 'FreqWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/FreqWindow.cpp'; fi`

audacity-HelpText.o: HelpText.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-HelpText.o -MD -MP -MF $(DEPDIR)/audacity-HelpText.Tpo -c -o audacity-HelpText.o `test -f 'HelpText.cpp' || echo '$(srcdir)/'`HelpText.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-HelpText.Tpo $(DEPDIR)/audacity-HelpText.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HelpText.cpp' object='audacity-HelpText.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-HelpText.o `test -f 'HelpText.cpp' || echo '$(srcdir)/'`HelpText.cpp

audacity-HelpText.obj: HelpText.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-HelpText.obj -MD -MP -MF $(DEPDIR)/audacity-HelpText.Tpo -c -o audacity-HelpText.obj `if test -f 'HelpText.cpp'; then $(CYGPATH_W) 'HelpText.cpp'; else $(CYGPATH_W) '$(srcdir)/HelpText.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-HelpText.Tpo $(DEPDIR)/audacity-HelpText.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HelpText.cpp' object='audacity-HelpText.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-HelpText.obj `if test -f 'HelpText.cpp'; then $(CYGPATH_W) 'HelpText.cpp'; else $(CYGPATH_W) '$(srcdir)/HelpText.cpp'; fi`

audacity-HistoryWindow.o: HistoryWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-HistoryWindow.o -MD -MP -MF $(DEPDIR)/audacity-HistoryWindow.Tpo -c -o audacity-HistoryWindow.o `test -f 'HistoryWindow.cpp' || echo '$(srcdir)/'`HistoryWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-HistoryWindow.Tpo $(DEPDIR)/audacity-HistoryWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HistoryWindow.cpp' object='audacity-HistoryWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-HistoryWindow.o `test -f 'HistoryWindow.cpp' || echo '$(srcdir)/'`HistoryWindow.cpp

audacity-HistoryWindow.obj: HistoryWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-HistoryWindow.obj -MD -MP -MF $(DEPDIR)/audacity-HistoryWindow.Tpo -c -o audacity-HistoryWindow.obj `if test -f 'HistoryWindow.cpp'; then $(CYGPATH_W) 'HistoryWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/HistoryWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-HistoryWindow.Tpo $(DEPDIR)/audacity-HistoryWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HistoryWindow.cpp' object='audacity-HistoryWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-HistoryWindow.obj `if test -f 'HistoryWindow.cpp'; then $(CYGPATH_W) 'HistoryWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/HistoryWindow.cpp'; fi`

audacity-ImageManipulation.o: ImageManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ImageManipulation.o -MD -MP -MF $(DEPDIR)/audacity-ImageManipulation.Tpo -c -o audacity-ImageManipulation.o `test -f 'ImageManipulation.cpp' || echo '$(srcdir)/'`ImageManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ImageManipulation.Tpo $(DEPDIR)/audacity-ImageManipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ImageManipulation.cpp' object='audacity-ImageManipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ImageManipulation.o `test -f 'ImageManipulation.cpp' || echo '$(srcdir)/'`ImageManipulation.cpp

audacity-ImageManipulation.obj: ImageManipulation.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ImageManipulation.obj -MD -MP -MF $(DEPDIR)/audacity-ImageManipulation.Tpo -c -o audacity-ImageManipulation.obj `if test -f 'ImageManipulation.cpp'; then $(CYGPATH_W) 'ImageManipulation.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageManipulation.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ImageManipulation.Tpo $(DEPDIR)/audacity-ImageManipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ImageManipulation.cpp' object='audacity-ImageManipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ImageManipulation.obj `if test -f 'ImageManipulation.cpp'; then $(CYGPATH_W) 'ImageManipulation.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageManipulation.cpp'; fi`

audacity-InterpolateAudio.o: InterpolateAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-InterpolateAudio.o -MD -MP -MF $(DEPDIR)/audacity-InterpolateAudio.Tpo -c -o audacity-InterpolateAudio.o `test -f 'InterpolateAudio.cpp' || echo '$(srcdir)/'`InterpolateAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-InterpolateAudio.Tpo $(DEPDIR)/audacity-InterpolateAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InterpolateAudio.cpp' object='audacity-InterpolateAudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-InterpolateAudio.o `test -f 'InterpolateAudio.cpp' || echo '$(srcdir)/'`InterpolateAudio.cpp

audacity-InterpolateAudio.obj: InterpolateAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-InterpolateAudio.obj -MD -MP -MF $(DEPDIR)/audacity-InterpolateAudio.Tpo -c -o audacity-InterpolateAudio.obj `if test -f 'InterpolateAudio.cpp'; then $(CYGPATH_W) 'InterpolateAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/InterpolateAudio.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-InterpolateAudio.Tpo $(DEPDIR)/audacity-InterpolateAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InterpolateAudio.cpp' object='audacity-InterpolateAudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-InterpolateAudio.obj `if test -f 'InterpolateAudio.cpp'; then $(CYGPATH_W) 'InterpolateAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/InterpolateAudio.cpp'; fi`

audacity-LabelDialog.o: LabelDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LabelDialog.o -MD -MP -MF $(DEPDIR)/audacity-LabelDialog.Tpo -c -o audacity-LabelDialog.o `test -f 'LabelDialog.cpp' || echo '$(srcdir)/'`LabelDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LabelDialog.Tpo $(DEPDIR)/audacity-LabelDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LabelDialog.cpp' object='audacity-LabelDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LabelDialog.o `test -f 'LabelDialog.cpp' || echo '$(srcdir)/'`LabelDialog.cpp

audacity-LabelDialog.obj: LabelDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LabelDialog.obj -MD -MP -MF $(DEPDIR)/audacity-LabelDialog.Tpo -c -o audacity-LabelDialog.obj `if test -f 'LabelDialog.cpp'; then $(CYGPATH_W) 'LabelDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/LabelDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LabelDialog.Tpo $(DEPDIR)/audacity-LabelDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LabelDialog.cpp' object='audacity-LabelDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LabelDialog.obj `if test -f 'LabelDialog.cpp'; then $(CYGPATH_W) 'LabelDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/LabelDialog.cpp'; fi`

audacity-LabelTrack.o: LabelTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LabelTrack.o -MD -MP -MF $(DEPDIR)/audacity-LabelTrack.Tpo -c -o audacity-LabelTrack.o `test -f 'LabelTrack.cpp' || echo '$(srcdir)/'`LabelTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LabelTrack.Tpo $(DEPDIR)/audacity-LabelTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LabelTrack.cpp' object='audacity-LabelTrack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LabelTrack.o `test -f 'LabelTrack.cpp' || echo '$(srcdir)/'`LabelTrack.cpp

audacity-LabelTrack.obj: LabelTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LabelTrack.obj -MD -MP -MF $(DEPDIR)/audacity-LabelTrack.Tpo -c -o audacity-LabelTrack.obj `if test -f 'LabelTrack.cpp'; then $(CYGPATH_W) 'LabelTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/LabelTrack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LabelTrack.Tpo $(DEPDIR)/audacity-LabelTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LabelTrack.cpp' object='audacity-LabelTrack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LabelTrack.obj `if test -f 'LabelTrack.cpp'; then $(CYGPATH_W) 'LabelTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/LabelTrack.cpp'; fi`

audacity-LangChoice.o: LangChoice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LangChoice.o -MD -MP -MF $(DEPDIR)/audacity-LangChoice.Tpo -c -o audacity-LangChoice.o `test -f 'LangChoice.cpp' || echo '$(srcdir)/'`LangChoice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LangChoice.Tpo $(DEPDIR)/audacity-LangChoice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LangChoice.cpp' object='audacity-LangChoice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LangChoice.o `test -f 'LangChoice.cpp' || echo '$(srcdir)/'`LangChoice.cpp

audacity-LangChoice.obj: LangChoice.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LangChoice.obj -MD -MP -MF $(DEPDIR)/audacity-LangChoice.Tpo -c -o audacity-LangChoice.obj `if test -f 'LangChoice.cpp'; then $(CYGPATH_W) 'LangChoice.cpp'; else $(CYGPATH_W) '$(srcdir)/LangChoice.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LangChoice.Tpo $(DEPDIR)/audacity-LangChoice.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LangChoice.cpp' object='audacity-LangChoice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LangChoice.obj `if test -f 'LangChoice.cpp'; then $(CYGPATH_W) 'LangChoice.cpp'; else $(CYGPATH_W) '$(srcdir)/LangChoice.cpp'; fi`

audacity-Languages.o: Languages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Languages.o -MD -MP -MF $(DEPDIR)/audacity-Languages.Tpo -c -o audacity-Languages.o `test -f 'Languages.cpp' || echo '$(srcdir)/'`Languages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Languages.Tpo $(DEPDIR)/audacity-Languages.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Languages.cpp' object='audacity-Languages.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Languages.o `test -f 'Languages.cpp' || echo '$(srcdir)/'`Languages.cpp

audacity-Languages.obj: Languages.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Languages.obj -MD -MP -MF $(DEPDIR)/audacity-Languages.Tpo -c -o audacity-Languages.obj `if test -f 'Languages.cpp'; then $(CYGPATH_W) 'Languages.cpp'; else $(CYGPATH_W) '$(srcdir)/Languages.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Languages.Tpo $(DEPDIR)/audacity-Languages.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Languages.cpp' object='audacity-Languages.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Languages.obj `if test -f 'Languages.cpp'; then $(CYGPATH_W) 'Languages.cpp'; else $(CYGPATH_W) '$(srcdir)/Languages.cpp'; fi`

audacity-Legacy.o: Legacy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Legacy.o -MD -MP -MF $(DEPDIR)/audacity-Legacy.Tpo -c -o audacity-Legacy.o `test -f 'Legacy.cpp' || echo '$(srcdir)/'`Legacy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Legacy.Tpo $(DEPDIR)/audacity-Legacy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Legacy.cpp' object='audacity-Legacy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Legacy.o `test -f 'Legacy.cpp' || echo '$(srcdir)/'`Legacy.cpp

audacity-Legacy.obj: Legacy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Legacy.obj -MD -MP -MF $(DEPDIR)/audacity-Legacy.Tpo -c -o audacity-Legacy.obj `if test -f 'Legacy.cpp'; then $(CYGPATH_W) 'Legacy.cpp'; else $(CYGPATH_W) '$(srcdir)/Legacy.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Legacy.Tpo $(DEPDIR)/audacity-Legacy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Legacy.cpp' object='audacity-Legacy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Legacy.obj `if test -f 'Legacy.cpp'; then $(CYGPATH_W) 'Legacy.cpp'; else $(CYGPATH_W) '$(srcdir)/Legacy.cpp'; fi`

audacity-Lyrics.o: Lyrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Lyrics.o -MD -MP -MF $(DEPDIR)/audacity-Lyrics.Tpo -c -o audacity-Lyrics.o `test -f 'Lyrics.cpp' || echo '$(srcdir)/'`Lyrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Lyrics.Tpo $(DEPDIR)/audacity-Lyrics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Lyrics.cpp' object='audacity-Lyrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Lyrics.o `test -f 'Lyrics.cpp' || echo '$(srcdir)/'`Lyrics.cpp

audacity-Lyrics.obj: Lyrics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Lyrics.obj -MD -MP -MF $(DEPDIR)/audacity-Lyrics.Tpo -c -o audacity-Lyrics.obj `if test -f 'Lyrics.cpp'; then $(CYGPATH_W) 'Lyrics.cpp'; else $(CYGPATH_W) '$(srcdir)/Lyrics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Lyrics.Tpo $(DEPDIR)/audacity-Lyrics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Lyrics.cpp' object='audacity-Lyrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Lyrics.obj `if test -f 'Lyrics.cpp'; then $(CYGPATH_W) 'Lyrics.cpp'; else $(CYGPATH_W) '$(srcdir)/Lyrics.cpp'; fi`

audacity-LyricsWindow.o: LyricsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LyricsWindow.o -MD -MP -MF $(DEPDIR)/audacity-LyricsWindow.Tpo -c -o audacity-LyricsWindow.o `test -f 'LyricsWindow.cpp' || echo '$(srcdir)/'`LyricsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LyricsWindow.Tpo $(DEPDIR)/audacity-LyricsWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LyricsWindow.cpp' object='audacity-LyricsWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LyricsWindow.o `test -f 'LyricsWindow.cpp' || echo '$(srcdir)/'`LyricsWindow.cpp

audacity-LyricsWindow.obj: LyricsWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-LyricsWindow.obj -MD -MP -MF $(DEPDIR)/audacity-LyricsWindow.Tpo -c -o audacity-LyricsWindow.obj `if test -f 'LyricsWindow.cpp'; then $(CYGPATH_W) 'LyricsWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/LyricsWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-LyricsWindow.Tpo $(DEPDIR)/audacity-LyricsWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LyricsWindow.cpp' object='audacity-LyricsWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-LyricsWindow.obj `if test -f 'LyricsWindow.cpp'; then $(CYGPATH_W) 'LyricsWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/LyricsWindow.cpp'; fi`

audacity-Matrix.o: Matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Matrix.o -MD -MP -MF $(DEPDIR)/audacity-Matrix.Tpo -c -o audacity-Matrix.o `test -f 'Matrix.cpp' || echo '$(srcdir)/'`Matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Matrix.Tpo $(DEPDIR)/audacity-Matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Matrix.cpp' object='audacity-Matrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Matrix.o `test -f 'Matrix.cpp' || echo '$(srcdir)/'`Matrix.cpp

audacity-Matrix.obj: Matrix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Matrix.obj -MD -MP -MF $(DEPDIR)/audacity-Matrix.Tpo -c -o audacity-Matrix.obj `if test -f 'Matrix.cpp'; then $(CYGPATH_W) 'Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/Matrix.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Matrix.Tpo $(DEPDIR)/audacity-Matrix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Matrix.cpp' object='audacity-Matrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Matrix.obj `if test -f 'Matrix.cpp'; then $(CYGPATH_W) 'Matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/Matrix.cpp'; fi`

audacity-Menus.o: Menus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Menus.o -MD -MP -MF $(DEPDIR)/audacity-Menus.Tpo -c -o audacity-Menus.o `test -f 'Menus.cpp' || echo '$(srcdir)/'`Menus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Menus.Tpo $(DEPDIR)/audacity-Menus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Menus.cpp' object='audacity-Menus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Menus.o `test -f 'Menus.cpp' || echo '$(srcdir)/'`Menus.cpp

audacity-Menus.obj: Menus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Menus.obj -MD -MP -MF $(DEPDIR)/audacity-Menus.Tpo -c -o audacity-Menus.obj `if test -f 'Menus.cpp'; then $(CYGPATH_W) 'Menus.cpp'; else $(CYGPATH_W) '$(srcdir)/Menus.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Menus.Tpo $(DEPDIR)/audacity-Menus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Menus.cpp' object='audacity-Menus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Menus.obj `if test -f 'Menus.cpp'; then $(CYGPATH_W) 'Menus.cpp'; else $(CYGPATH_W) '$(srcdir)/Menus.cpp'; fi`

audacity-Mix.o: Mix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Mix.o -MD -MP -MF $(DEPDIR)/audacity-Mix.Tpo -c -o audacity-Mix.o `test -f 'Mix.cpp' || echo '$(srcdir)/'`Mix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Mix.Tpo $(DEPDIR)/audacity-Mix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Mix.cpp' object='audacity-Mix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Mix.o `test -f 'Mix.cpp' || echo '$(srcdir)/'`Mix.cpp

audacity-Mix.obj: Mix.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Mix.obj -MD -MP -MF $(DEPDIR)/audacity-Mix.Tpo -c -o audacity-Mix.obj `if test -f 'Mix.cpp'; then $(CYGPATH_W) 'Mix.cpp'; else $(CYGPATH_W) '$(srcdir)/Mix.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Mix.Tpo $(DEPDIR)/audacity-Mix.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Mix.cpp' object='audacity-Mix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Mix.obj `if test -f 'Mix.cpp'; then $(CYGPATH_W) 'Mix.cpp'; else $(CYGPATH_W) '$(srcdir)/Mix.cpp'; fi`

audacity-MixerBoard.o: MixerBoard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-MixerBoard.o -MD -MP -MF $(DEPDIR)/audacity-MixerBoard.Tpo -c -o audacity-MixerBoard.o `test -f 'MixerBoard.cpp' || echo '$(srcdir)/'`MixerBoard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-MixerBoard.Tpo $(DEPDIR)/audacity-MixerBoard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MixerBoard.cpp' object='audacity-MixerBoard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-MixerBoard.o `test -f 'MixerBoard.cpp' || echo '$(srcdir)/'`MixerBoard.cpp

audacity-MixerBoard.obj: MixerBoard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-MixerBoard.obj -MD -MP -MF $(DEPDIR)/audacity-MixerBoard.Tpo -c -o audacity-MixerBoard.obj `if test -f 'MixerBoard.cpp'; then $(CYGPATH_W) 'MixerBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/MixerBoard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-MixerBoard.Tpo $(DEPDIR)/audacity-MixerBoard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='MixerBoard.cpp' object='audacity-MixerBoard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-MixerBoard.obj `if test -f 'MixerBoard.cpp'; then $(CYGPATH_W) 'MixerBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/MixerBoard.cpp'; fi`

audacity-ModuleManager.o: ModuleManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ModuleManager.o -MD -MP -MF $(DEPDIR)/audacity-ModuleManager.Tpo -c -o audacity-ModuleManager.o `test -f 'ModuleManager.cpp' || echo '$(srcdir)/'`ModuleManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ModuleManager.Tpo $(DEPDIR)/audacity-ModuleManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ModuleManager.cpp' object='audacity-ModuleManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ModuleManager.o `test -f 'ModuleManager.cpp' || echo '$(srcdir)/'`ModuleManager.cpp

audacity-ModuleManager.obj: ModuleManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ModuleManager.obj -MD -MP -MF $(DEPDIR)/audacity-ModuleManager.Tpo -c -o audacity-ModuleManager.obj `if test -f 'ModuleManager.cpp'; then $(CYGPATH_W) 'ModuleManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ModuleManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ModuleManager.Tpo $(DEPDIR)/audacity-ModuleManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ModuleManager.cpp' object='audacity-ModuleManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ModuleManager.obj `if test -f 'ModuleManager.cpp'; then $(CYGPATH_W) 'ModuleManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ModuleManager.cpp'; fi`

audacity-PitchName.o: PitchName.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PitchName.o -MD -MP -MF $(DEPDIR)/audacity-PitchName.Tpo -c -o audacity-PitchName.o `test -f 'PitchName.cpp' || echo '$(srcdir)/'`PitchName.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PitchName.Tpo $(DEPDIR)/audacity-PitchName.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PitchName.cpp' object='audacity-PitchName.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PitchName.o `test -f 'PitchName.cpp' || echo '$(srcdir)/'`PitchName.cpp

audacity-PitchName.obj: PitchName.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PitchName.obj -MD -MP -MF $(DEPDIR)/audacity-PitchName.Tpo -c -o audacity-PitchName.obj `if test -f 'PitchName.cpp'; then $(CYGPATH_W) 'PitchName.cpp'; else $(CYGPATH_W) '$(srcdir)/PitchName.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PitchName.Tpo $(DEPDIR)/audacity-PitchName.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PitchName.cpp' object='audacity-PitchName.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PitchName.obj `if test -f 'PitchName.cpp'; then $(CYGPATH_W) 'PitchName.cpp'; else $(CYGPATH_W) '$(srcdir)/PitchName.cpp'; fi`

audacity-PlatformCompatibility.o: PlatformCompatibility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PlatformCompatibility.o -MD -MP -MF $(DEPDIR)/audacity-PlatformCompatibility.Tpo -c -o audacity-PlatformCompatibility.o `test -f 'PlatformCompatibility.cpp' || echo '$(srcdir)/'`PlatformCompatibility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PlatformCompatibility.Tpo $(DEPDIR)/audacity-PlatformCompatibility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PlatformCompatibility.cpp' object='audacity-PlatformCompatibility.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PlatformCompatibility.o `test -f 'PlatformCompatibility.cpp' || echo '$(srcdir)/'`PlatformCompatibility.cpp

audacity-PlatformCompatibility.obj: PlatformCompatibility.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PlatformCompatibility.obj -MD -MP -MF $(DEPDIR)/audacity-PlatformCompatibility.Tpo -c -o audacity-PlatformCompatibility.obj `if test -f 'PlatformCompatibility.cpp'; then $(CYGPATH_W) 'PlatformCompatibility.cpp'; else $(CYGPATH_W) '$(srcdir)/PlatformCompatibility.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PlatformCompatibility.Tpo $(DEPDIR)/audacity-PlatformCompatibility.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PlatformCompatibility.cpp' object='audacity-PlatformCompatibility.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PlatformCompatibility.obj `if test -f 'PlatformCompatibility.cpp'; then $(CYGPATH_W) 'PlatformCompatibility.cpp'; else $(CYGPATH_W) '$(srcdir)/PlatformCompatibility.cpp'; fi`

audacity-PluginManager.o: PluginManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PluginManager.o -MD -MP -MF $(DEPDIR)/audacity-PluginManager.Tpo -c -o audacity-PluginManager.o `test -f 'PluginManager.cpp' || echo '$(srcdir)/'`PluginManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PluginManager.Tpo $(DEPDIR)/audacity-PluginManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PluginManager.cpp' object='audacity-PluginManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PluginManager.o `test -f 'PluginManager.cpp' || echo '$(srcdir)/'`PluginManager.cpp

audacity-PluginManager.obj: PluginManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-PluginManager.obj -MD -MP -MF $(DEPDIR)/audacity-PluginManager.Tpo -c -o audacity-PluginManager.obj `if test -f 'PluginManager.cpp'; then $(CYGPATH_W) 'PluginManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-PluginManager.Tpo $(DEPDIR)/audacity-PluginManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PluginManager.cpp' object='audacity-PluginManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-PluginManager.obj `if test -f 'PluginManager.cpp'; then $(CYGPATH_W) 'PluginManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PluginManager.cpp'; fi`

audacity-Printing.o: Printing.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Printing.o -MD -MP -MF $(DEPDIR)/audacity-Printing.Tpo -c -o audacity-Printing.o `test -f 'Printing.cpp' || echo '$(srcdir)/'`Printing.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Printing.Tpo $(DEPDIR)/audacity-Printing.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Printing.cpp' object='audacity-Printing.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Printing.o `test -f 'Printing.cpp' || echo '$(srcdir)/'`Printing.cpp

audacity-Printing.obj: Printing.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Printing.obj -MD -MP -MF $(DEPDIR)/audacity-Printing.Tpo -c -o audacity-Printing.obj `if test -f 'Printing.cpp'; then $(CYGPATH_W) 'Printing.cpp'; else $(CYGPATH_W) '$(srcdir)/Printing.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Printing.Tpo $(DEPDIR)/audacity-Printing.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Printing.cpp' object='audacity-Printing.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Printing.obj `if test -f 'Printing.cpp'; then $(CYGPATH_W) 'Printing.cpp'; else $(CYGPATH_W) '$(srcdir)/Printing.cpp'; fi`

audacity-Profiler.o: Profiler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Profiler.o -MD -MP -MF $(DEPDIR)/audacity-Profiler.Tpo -c -o audacity-Profiler.o `test -f 'Profiler.cpp' || echo '$(srcdir)/'`Profiler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Profiler.Tpo $(DEPDIR)/audacity-Profiler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Profiler.cpp' object='audacity-Profiler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Profiler.o `test -f 'Profiler.cpp' || echo '$(srcdir)/'`Profiler.cpp

audacity-Profiler.obj: Profiler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Profiler.obj -MD -MP -MF $(DEPDIR)/audacity-Profiler.Tpo -c -o audacity-Profiler.obj `if test -f 'Profiler.cpp'; then $(CYGPATH_W) 'Profiler.cpp'; else $(CYGPATH_W) '$(srcdir)/Profiler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Profiler.Tpo $(DEPDIR)/audacity-Profiler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Profiler.cpp' object='audacity-Profiler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Profiler.obj `if test -f 'Profiler.cpp'; then $(CYGPATH_W) 'Profiler.cpp'; else $(CYGPATH_W) '$(srcdir)/Profiler.cpp'; fi`

audacity-Project.o: Project.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Project.o -MD -MP -MF $(DEPDIR)/audacity-Project.Tpo -c -o audacity-Project.o `test -f 'Project.cpp' || echo '$(srcdir)/'`Project.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Project.Tpo $(DEPDIR)/audacity-Project.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Project.cpp' object='audacity-Project.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Project.o `test -f 'Project.cpp' || echo '$(srcdir)/'`Project.cpp

audacity-Project.obj: Project.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Project.obj -MD -MP -MF $(DEPDIR)/audacity-Project.Tpo -c -o audacity-Project.obj `if test -f 'Project.cpp'; then $(CYGPATH_W) 'Project.cpp'; else $(CYGPATH_W) '$(srcdir)/Project.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Project.Tpo $(DEPDIR)/audacity-Project.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Project.cpp' object='audacity-Project.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Project.obj `if test -f 'Project.cpp'; then $(CYGPATH_W) 'Project.cpp'; else $(CYGPATH_W) '$(srcdir)/Project.cpp'; fi`

audacity-RealFFTf.o: RealFFTf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RealFFTf.o -MD -MP -MF $(DEPDIR)/audacity-RealFFTf.Tpo -c -o audacity-RealFFTf.o `test -f 'RealFFTf.cpp' || echo '$(srcdir)/'`RealFFTf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RealFFTf.Tpo $(DEPDIR)/audacity-RealFFTf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RealFFTf.cpp' object='audacity-RealFFTf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RealFFTf.o `test -f 'RealFFTf.cpp' || echo '$(srcdir)/'`RealFFTf.cpp

audacity-RealFFTf.obj: RealFFTf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RealFFTf.obj -MD -MP -MF $(DEPDIR)/audacity-RealFFTf.Tpo -c -o audacity-RealFFTf.obj `if test -f 'RealFFTf.cpp'; then $(CYGPATH_W) 'RealFFTf.cpp'; else $(CYGPATH_W) '$(srcdir)/RealFFTf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RealFFTf.Tpo $(DEPDIR)/audacity-RealFFTf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RealFFTf.cpp' object='audacity-RealFFTf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RealFFTf.obj `if test -f 'RealFFTf.cpp'; then $(CYGPATH_W) 'RealFFTf.cpp'; else $(CYGPATH_W) '$(srcdir)/RealFFTf.cpp'; fi`

audacity-RealFFTf48x.o: RealFFTf48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RealFFTf48x.o -MD -MP -MF $(DEPDIR)/audacity-RealFFTf48x.Tpo -c -o audacity-RealFFTf48x.o `test -f 'RealFFTf48x.cpp' || echo '$(srcdir)/'`RealFFTf48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RealFFTf48x.Tpo $(DEPDIR)/audacity-RealFFTf48x.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RealFFTf48x.cpp' object='audacity-RealFFTf48x.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RealFFTf48x.o `test -f 'RealFFTf48x.cpp' || echo '$(srcdir)/'`RealFFTf48x.cpp

audacity-RealFFTf48x.obj: RealFFTf48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RealFFTf48x.obj -MD -MP -MF $(DEPDIR)/audacity-RealFFTf48x.Tpo -c -o audacity-RealFFTf48x.obj `if test -f 'RealFFTf48x.cpp'; then $(CYGPATH_W) 'RealFFTf48x.cpp'; else $(CYGPATH_W) '$(srcdir)/RealFFTf48x.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RealFFTf48x.Tpo $(DEPDIR)/audacity-RealFFTf48x.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RealFFTf48x.cpp' object='audacity-RealFFTf48x.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RealFFTf48x.obj `if test -f 'RealFFTf48x.cpp'; then $(CYGPATH_W) 'RealFFTf48x.cpp'; else $(CYGPATH_W) '$(srcdir)/RealFFTf48x.cpp'; fi`

audacity-Resample.o: Resample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Resample.o -MD -MP -MF $(DEPDIR)/audacity-Resample.Tpo -c -o audacity-Resample.o `test -f 'Resample.cpp' || echo '$(srcdir)/'`Resample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Resample.Tpo $(DEPDIR)/audacity-Resample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Resample.cpp' object='audacity-Resample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Resample.o `test -f 'Resample.cpp' || echo '$(srcdir)/'`Resample.cpp

audacity-Resample.obj: Resample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Resample.obj -MD -MP -MF $(DEPDIR)/audacity-Resample.Tpo -c -o audacity-Resample.obj `if test -f 'Resample.cpp'; then $(CYGPATH_W) 'Resample.cpp'; else $(CYGPATH_W) '$(srcdir)/Resample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Resample.Tpo $(DEPDIR)/audacity-Resample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Resample.cpp' object='audacity-Resample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Resample.obj `if test -f 'Resample.cpp'; then $(CYGPATH_W) 'Resample.cpp'; else $(CYGPATH_W) '$(srcdir)/Resample.cpp'; fi`

audacity-RingBuffer.o: RingBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RingBuffer.o -MD -MP -MF $(DEPDIR)/audacity-RingBuffer.Tpo -c -o audacity-RingBuffer.o `test -f 'RingBuffer.cpp' || echo '$(srcdir)/'`RingBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RingBuffer.Tpo $(DEPDIR)/audacity-RingBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RingBuffer.cpp' object='audacity-RingBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RingBuffer.o `test -f 'RingBuffer.cpp' || echo '$(srcdir)/'`RingBuffer.cpp

audacity-RingBuffer.obj: RingBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-RingBuffer.obj -MD -MP -MF $(DEPDIR)/audacity-RingBuffer.Tpo -c -o audacity-RingBuffer.obj `if test -f 'RingBuffer.cpp'; then $(CYGPATH_W) 'RingBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/RingBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-RingBuffer.Tpo $(DEPDIR)/audacity-RingBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RingBuffer.cpp' object='audacity-RingBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-RingBuffer.obj `if test -f 'RingBuffer.cpp'; then $(CYGPATH_W) 'RingBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/RingBuffer.cpp'; fi`

audacity-Screenshot.o: Screenshot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Screenshot.o -MD -MP -MF $(DEPDIR)/audacity-Screenshot.Tpo -c -o audacity-Screenshot.o `test -f 'Screenshot.cpp' || echo '$(srcdir)/'`Screenshot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Screenshot.Tpo $(DEPDIR)/audacity-Screenshot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Screenshot.cpp' object='audacity-Screenshot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Screenshot.o `test -f 'Screenshot.cpp' || echo '$(srcdir)/'`Screenshot.cpp

audacity-Screenshot.obj: Screenshot.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Screenshot.obj -MD -MP -MF $(DEPDIR)/audacity-Screenshot.Tpo -c -o audacity-Screenshot.obj `if test -f 'Screenshot.cpp'; then $(CYGPATH_W) 'Screenshot.cpp'; else $(CYGPATH_W) '$(srcdir)/Screenshot.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Screenshot.Tpo $(DEPDIR)/audacity-Screenshot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Screenshot.cpp' object='audacity-Screenshot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Screenshot.obj `if test -f 'Screenshot.cpp'; then $(CYGPATH_W) 'Screenshot.cpp'; else $(CYGPATH_W) '$(srcdir)/Screenshot.cpp'; fi`

audacity-SelectedRegion.o: SelectedRegion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SelectedRegion.o -MD -MP -MF $(DEPDIR)/audacity-SelectedRegion.Tpo -c -o audacity-SelectedRegion.o `test -f 'SelectedRegion.cpp' || echo '$(srcdir)/'`SelectedRegion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SelectedRegion.Tpo $(DEPDIR)/audacity-SelectedRegion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SelectedRegion.cpp' object='audacity-SelectedRegion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SelectedRegion.o `test -f 'SelectedRegion.cpp' || echo '$(srcdir)/'`SelectedRegion.cpp

audacity-SelectedRegion.obj: SelectedRegion.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SelectedRegion.obj -MD -MP -MF $(DEPDIR)/audacity-SelectedRegion.Tpo -c -o audacity-SelectedRegion.obj `if test -f 'SelectedRegion.cpp'; then $(CYGPATH_W) 'SelectedRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SelectedRegion.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SelectedRegion.Tpo $(DEPDIR)/audacity-SelectedRegion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SelectedRegion.cpp' object='audacity-SelectedRegion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SelectedRegion.obj `if test -f 'SelectedRegion.cpp'; then $(CYGPATH_W) 'SelectedRegion.cpp'; else $(CYGPATH_W) '$(srcdir)/SelectedRegion.cpp'; fi`

audacity-Shuttle.o: Shuttle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Shuttle.o -MD -MP -MF $(DEPDIR)/audacity-Shuttle.Tpo -c -o audacity-Shuttle.o `test -f 'Shuttle.cpp' || echo '$(srcdir)/'`Shuttle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Shuttle.Tpo $(DEPDIR)/audacity-Shuttle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Shuttle.cpp' object='audacity-Shuttle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Shuttle.o `test -f 'Shuttle.cpp' || echo '$(srcdir)/'`Shuttle.cpp

audacity-Shuttle.obj: Shuttle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Shuttle.obj -MD -MP -MF $(DEPDIR)/audacity-Shuttle.Tpo -c -o audacity-Shuttle.obj `if test -f 'Shuttle.cpp'; then $(CYGPATH_W) 'Shuttle.cpp'; else $(CYGPATH_W) '$(srcdir)/Shuttle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Shuttle.Tpo $(DEPDIR)/audacity-Shuttle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Shuttle.cpp' object='audacity-Shuttle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Shuttle.obj `if test -f 'Shuttle.cpp'; then $(CYGPATH_W) 'Shuttle.cpp'; else $(CYGPATH_W) '$(srcdir)/Shuttle.cpp'; fi`

audacity-ShuttleGui.o: ShuttleGui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ShuttleGui.o -MD -MP -MF $(DEPDIR)/audacity-ShuttleGui.Tpo -c -o audacity-ShuttleGui.o `test -f 'ShuttleGui.cpp' || echo '$(srcdir)/'`ShuttleGui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ShuttleGui.Tpo $(DEPDIR)/audacity-ShuttleGui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ShuttleGui.cpp' object='audacity-ShuttleGui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ShuttleGui.o `test -f 'ShuttleGui.cpp' || echo '$(srcdir)/'`ShuttleGui.cpp

audacity-ShuttleGui.obj: ShuttleGui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ShuttleGui.obj -MD -MP -MF $(DEPDIR)/audacity-ShuttleGui.Tpo -c -o audacity-ShuttleGui.obj `if test -f 'ShuttleGui.cpp'; then $(CYGPATH_W) 'ShuttleGui.cpp'; else $(CYGPATH_W) '$(srcdir)/ShuttleGui.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ShuttleGui.Tpo $(DEPDIR)/audacity-ShuttleGui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ShuttleGui.cpp' object='audacity-ShuttleGui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ShuttleGui.obj `if test -f 'ShuttleGui.cpp'; then $(CYGPATH_W) 'ShuttleGui.cpp'; else $(CYGPATH_W) '$(srcdir)/ShuttleGui.cpp'; fi`

audacity-ShuttlePrefs.o: ShuttlePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ShuttlePrefs.o -MD -MP -MF $(DEPDIR)/audacity-ShuttlePrefs.Tpo -c -o audacity-ShuttlePrefs.o `test -f 'ShuttlePrefs.cpp' || echo '$(srcdir)/'`ShuttlePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ShuttlePrefs.Tpo $(DEPDIR)/audacity-ShuttlePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ShuttlePrefs.cpp' object='audacity-ShuttlePrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ShuttlePrefs.o `test -f 'ShuttlePrefs.cpp' || echo '$(srcdir)/'`ShuttlePrefs.cpp

audacity-ShuttlePrefs.obj: ShuttlePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ShuttlePrefs.obj -MD -MP -MF $(DEPDIR)/audacity-ShuttlePrefs.Tpo -c -o audacity-ShuttlePrefs.obj `if test -f 'ShuttlePrefs.cpp'; then $(CYGPATH_W) 'ShuttlePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/ShuttlePrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ShuttlePrefs.Tpo $(DEPDIR)/audacity-ShuttlePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ShuttlePrefs.cpp' object='audacity-ShuttlePrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ShuttlePrefs.obj `if test -f 'ShuttlePrefs.cpp'; then $(CYGPATH_W) 'ShuttlePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/ShuttlePrefs.cpp'; fi`

audacity-Snap.o: Snap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Snap.o -MD -MP -MF $(DEPDIR)/audacity-Snap.Tpo -c -o audacity-Snap.o `test -f 'Snap.cpp' || echo '$(srcdir)/'`Snap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Snap.Tpo $(DEPDIR)/audacity-Snap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Snap.cpp' object='audacity-Snap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Snap.o `test -f 'Snap.cpp' || echo '$(srcdir)/'`Snap.cpp

audacity-Snap.obj: Snap.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Snap.obj -MD -MP -MF $(DEPDIR)/audacity-Snap.Tpo -c -o audacity-Snap.obj `if test -f 'Snap.cpp'; then $(CYGPATH_W) 'Snap.cpp'; else $(CYGPATH_W) '$(srcdir)/Snap.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Snap.Tpo $(DEPDIR)/audacity-Snap.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Snap.cpp' object='audacity-Snap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Snap.obj `if test -f 'Snap.cpp'; then $(CYGPATH_W) 'Snap.cpp'; else $(CYGPATH_W) '$(srcdir)/Snap.cpp'; fi`

audacity-SoundActivatedRecord.o: SoundActivatedRecord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SoundActivatedRecord.o -MD -MP -MF $(DEPDIR)/audacity-SoundActivatedRecord.Tpo -c -o audacity-SoundActivatedRecord.o `test -f 'SoundActivatedRecord.cpp' || echo '$(srcdir)/'`SoundActivatedRecord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SoundActivatedRecord.Tpo $(DEPDIR)/audacity-SoundActivatedRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoundActivatedRecord.cpp' object='audacity-SoundActivatedRecord.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SoundActivatedRecord.o `test -f 'SoundActivatedRecord.cpp' || echo '$(srcdir)/'`SoundActivatedRecord.cpp

audacity-SoundActivatedRecord.obj: SoundActivatedRecord.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SoundActivatedRecord.obj -MD -MP -MF $(DEPDIR)/audacity-SoundActivatedRecord.Tpo -c -o audacity-SoundActivatedRecord.obj `if test -f 'SoundActivatedRecord.cpp'; then $(CYGPATH_W) 'SoundActivatedRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/SoundActivatedRecord.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SoundActivatedRecord.Tpo $(DEPDIR)/audacity-SoundActivatedRecord.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SoundActivatedRecord.cpp' object='audacity-SoundActivatedRecord.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SoundActivatedRecord.obj `if test -f 'SoundActivatedRecord.cpp'; then $(CYGPATH_W) 'SoundActivatedRecord.cpp'; else $(CYGPATH_W) '$(srcdir)/SoundActivatedRecord.cpp'; fi`

audacity-Spectrum.o: Spectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Spectrum.o -MD -MP -MF $(DEPDIR)/audacity-Spectrum.Tpo -c -o audacity-Spectrum.o `test -f 'Spectrum.cpp' || echo '$(srcdir)/'`Spectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Spectrum.Tpo $(DEPDIR)/audacity-Spectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Spectrum.cpp' object='audacity-Spectrum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Spectrum.o `test -f 'Spectrum.cpp' || echo '$(srcdir)/'`Spectrum.cpp

audacity-Spectrum.obj: Spectrum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Spectrum.obj -MD -MP -MF $(DEPDIR)/audacity-Spectrum.Tpo -c -o audacity-Spectrum.obj `if test -f 'Spectrum.cpp'; then $(CYGPATH_W) 'Spectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/Spectrum.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Spectrum.Tpo $(DEPDIR)/audacity-Spectrum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Spectrum.cpp' object='audacity-Spectrum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Spectrum.obj `if test -f 'Spectrum.cpp'; then $(CYGPATH_W) 'Spectrum.cpp'; else $(CYGPATH_W) '$(srcdir)/Spectrum.cpp'; fi`

audacity-SplashDialog.o: SplashDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SplashDialog.o -MD -MP -MF $(DEPDIR)/audacity-SplashDialog.Tpo -c -o audacity-SplashDialog.o `test -f 'SplashDialog.cpp' || echo '$(srcdir)/'`SplashDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SplashDialog.Tpo $(DEPDIR)/audacity-SplashDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SplashDialog.cpp' object='audacity-SplashDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SplashDialog.o `test -f 'SplashDialog.cpp' || echo '$(srcdir)/'`SplashDialog.cpp

audacity-SplashDialog.obj: SplashDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SplashDialog.obj -MD -MP -MF $(DEPDIR)/audacity-SplashDialog.Tpo -c -o audacity-SplashDialog.obj `if test -f 'SplashDialog.cpp'; then $(CYGPATH_W) 'SplashDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/SplashDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SplashDialog.Tpo $(DEPDIR)/audacity-SplashDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SplashDialog.cpp' object='audacity-SplashDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SplashDialog.obj `if test -f 'SplashDialog.cpp'; then $(CYGPATH_W) 'SplashDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/SplashDialog.cpp'; fi`

audacity-SseMathFuncs.o: SseMathFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SseMathFuncs.o -MD -MP -MF $(DEPDIR)/audacity-SseMathFuncs.Tpo -c -o audacity-SseMathFuncs.o `test -f 'SseMathFuncs.cpp' || echo '$(srcdir)/'`SseMathFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SseMathFuncs.Tpo $(DEPDIR)/audacity-SseMathFuncs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SseMathFuncs.cpp' object='audacity-SseMathFuncs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SseMathFuncs.o `test -f 'SseMathFuncs.cpp' || echo '$(srcdir)/'`SseMathFuncs.cpp

audacity-SseMathFuncs.obj: SseMathFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-SseMathFuncs.obj -MD -MP -MF $(DEPDIR)/audacity-SseMathFuncs.Tpo -c -o audacity-SseMathFuncs.obj `if test -f 'SseMathFuncs.cpp'; then $(CYGPATH_W) 'SseMathFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/SseMathFuncs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-SseMathFuncs.Tpo $(DEPDIR)/audacity-SseMathFuncs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SseMathFuncs.cpp' object='audacity-SseMathFuncs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-SseMathFuncs.obj `if test -f 'SseMathFuncs.cpp'; then $(CYGPATH_W) 'SseMathFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/SseMathFuncs.cpp'; fi`

audacity-Tags.o: Tags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Tags.o -MD -MP -MF $(DEPDIR)/audacity-Tags.Tpo -c -o audacity-Tags.o `test -f 'Tags.cpp' || echo '$(srcdir)/'`Tags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Tags.Tpo $(DEPDIR)/audacity-Tags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Tags.cpp' object='audacity-Tags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Tags.o `test -f 'Tags.cpp' || echo '$(srcdir)/'`Tags.cpp

audacity-Tags.obj: Tags.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Tags.obj -MD -MP -MF $(DEPDIR)/audacity-Tags.Tpo -c -o audacity-Tags.obj `if test -f 'Tags.cpp'; then $(CYGPATH_W) 'Tags.cpp'; else $(CYGPATH_W) '$(srcdir)/Tags.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Tags.Tpo $(DEPDIR)/audacity-Tags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Tags.cpp' object='audacity-Tags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Tags.obj `if test -f 'Tags.cpp'; then $(CYGPATH_W) 'Tags.cpp'; else $(CYGPATH_W) '$(srcdir)/Tags.cpp'; fi`

audacity-Theme.o: Theme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Theme.o -MD -MP -MF $(DEPDIR)/audacity-Theme.Tpo -c -o audacity-Theme.o `test -f 'Theme.cpp' || echo '$(srcdir)/'`Theme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Theme.Tpo $(DEPDIR)/audacity-Theme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Theme.cpp' object='audacity-Theme.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Theme.o `test -f 'Theme.cpp' || echo '$(srcdir)/'`Theme.cpp

audacity-Theme.obj: Theme.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Theme.obj -MD -MP -MF $(DEPDIR)/audacity-Theme.Tpo -c -o audacity-Theme.obj `if test -f 'Theme.cpp'; then $(CYGPATH_W) 'Theme.cpp'; else $(CYGPATH_W) '$(srcdir)/Theme.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Theme.Tpo $(DEPDIR)/audacity-Theme.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Theme.cpp' object='audacity-Theme.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Theme.obj `if test -f 'Theme.cpp'; then $(CYGPATH_W) 'Theme.cpp'; else $(CYGPATH_W) '$(srcdir)/Theme.cpp'; fi`

audacity-TimeDialog.o: TimeDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimeDialog.o -MD -MP -MF $(DEPDIR)/audacity-TimeDialog.Tpo -c -o audacity-TimeDialog.o `test -f 'TimeDialog.cpp' || echo '$(srcdir)/'`TimeDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimeDialog.Tpo $(DEPDIR)/audacity-TimeDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimeDialog.cpp' object='audacity-TimeDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimeDialog.o `test -f 'TimeDialog.cpp' || echo '$(srcdir)/'`TimeDialog.cpp

audacity-TimeDialog.obj: TimeDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimeDialog.obj -MD -MP -MF $(DEPDIR)/audacity-TimeDialog.Tpo -c -o audacity-TimeDialog.obj `if test -f 'TimeDialog.cpp'; then $(CYGPATH_W) 'TimeDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimeDialog.Tpo $(DEPDIR)/audacity-TimeDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimeDialog.cpp' object='audacity-TimeDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimeDialog.obj `if test -f 'TimeDialog.cpp'; then $(CYGPATH_W) 'TimeDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeDialog.cpp'; fi`

audacity-TimerRecordDialog.o: TimerRecordDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimerRecordDialog.o -MD -MP -MF $(DEPDIR)/audacity-TimerRecordDialog.Tpo -c -o audacity-TimerRecordDialog.o `test -f 'TimerRecordDialog.cpp' || echo '$(srcdir)/'`TimerRecordDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimerRecordDialog.Tpo $(DEPDIR)/audacity-TimerRecordDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimerRecordDialog.cpp' object='audacity-TimerRecordDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimerRecordDialog.o `test -f 'TimerRecordDialog.cpp' || echo '$(srcdir)/'`TimerRecordDialog.cpp

audacity-TimerRecordDialog.obj: TimerRecordDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimerRecordDialog.obj -MD -MP -MF $(DEPDIR)/audacity-TimerRecordDialog.Tpo -c -o audacity-TimerRecordDialog.obj `if test -f 'TimerRecordDialog.cpp'; then $(CYGPATH_W) 'TimerRecordDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/TimerRecordDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimerRecordDialog.Tpo $(DEPDIR)/audacity-TimerRecordDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimerRecordDialog.cpp' object='audacity-TimerRecordDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimerRecordDialog.obj `if test -f 'TimerRecordDialog.cpp'; then $(CYGPATH_W) 'TimerRecordDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/TimerRecordDialog.cpp'; fi`

audacity-TimeTrack.o: TimeTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimeTrack.o -MD -MP -MF $(DEPDIR)/audacity-TimeTrack.Tpo -c -o audacity-TimeTrack.o `test -f 'TimeTrack.cpp' || echo '$(srcdir)/'`TimeTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimeTrack.Tpo $(DEPDIR)/audacity-TimeTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimeTrack.cpp' object='audacity-TimeTrack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimeTrack.o `test -f 'TimeTrack.cpp' || echo '$(srcdir)/'`TimeTrack.cpp

audacity-TimeTrack.obj: TimeTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TimeTrack.obj -MD -MP -MF $(DEPDIR)/audacity-TimeTrack.Tpo -c -o audacity-TimeTrack.obj `if test -f 'TimeTrack.cpp'; then $(CYGPATH_W) 'TimeTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeTrack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TimeTrack.Tpo $(DEPDIR)/audacity-TimeTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TimeTrack.cpp' object='audacity-TimeTrack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TimeTrack.obj `if test -f 'TimeTrack.cpp'; then $(CYGPATH_W) 'TimeTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/TimeTrack.cpp'; fi`

audacity-Track.o: Track.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Track.o -MD -MP -MF $(DEPDIR)/audacity-Track.Tpo -c -o audacity-Track.o `test -f 'Track.cpp' || echo '$(srcdir)/'`Track.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Track.Tpo $(DEPDIR)/audacity-Track.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Track.cpp' object='audacity-Track.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Track.o `test -f 'Track.cpp' || echo '$(srcdir)/'`Track.cpp

audacity-Track.obj: Track.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-Track.obj -MD -MP -MF $(DEPDIR)/audacity-Track.Tpo -c -o audacity-Track.obj `if test -f 'Track.cpp'; then $(CYGPATH_W) 'Track.cpp'; else $(CYGPATH_W) '$(srcdir)/Track.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-Track.Tpo $(DEPDIR)/audacity-Track.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Track.cpp' object='audacity-Track.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-Track.obj `if test -f 'Track.cpp'; then $(CYGPATH_W) 'Track.cpp'; else $(CYGPATH_W) '$(srcdir)/Track.cpp'; fi`

audacity-TrackArtist.o: TrackArtist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackArtist.o -MD -MP -MF $(DEPDIR)/audacity-TrackArtist.Tpo -c -o audacity-TrackArtist.o `test -f 'TrackArtist.cpp' || echo '$(srcdir)/'`TrackArtist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackArtist.Tpo $(DEPDIR)/audacity-TrackArtist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackArtist.cpp' object='audacity-TrackArtist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackArtist.o `test -f 'TrackArtist.cpp' || echo '$(srcdir)/'`TrackArtist.cpp

audacity-TrackArtist.obj: TrackArtist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackArtist.obj -MD -MP -MF $(DEPDIR)/audacity-TrackArtist.Tpo -c -o audacity-TrackArtist.obj `if test -f 'TrackArtist.cpp'; then $(CYGPATH_W) 'TrackArtist.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackArtist.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackArtist.Tpo $(DEPDIR)/audacity-TrackArtist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackArtist.cpp' object='audacity-TrackArtist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackArtist.obj `if test -f 'TrackArtist.cpp'; then $(CYGPATH_W) 'TrackArtist.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackArtist.cpp'; fi`

audacity-TrackPanel.o: TrackPanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackPanel.o -MD -MP -MF $(DEPDIR)/audacity-TrackPanel.Tpo -c -o audacity-TrackPanel.o `test -f 'TrackPanel.cpp' || echo '$(srcdir)/'`TrackPanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackPanel.Tpo $(DEPDIR)/audacity-TrackPanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackPanel.cpp' object='audacity-TrackPanel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackPanel.o `test -f 'TrackPanel.cpp' || echo '$(srcdir)/'`TrackPanel.cpp

audacity-TrackPanel.obj: TrackPanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackPanel.obj -MD -MP -MF $(DEPDIR)/audacity-TrackPanel.Tpo -c -o audacity-TrackPanel.obj `if test -f 'TrackPanel.cpp'; then $(CYGPATH_W) 'TrackPanel.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackPanel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackPanel.Tpo $(DEPDIR)/audacity-TrackPanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackPanel.cpp' object='audacity-TrackPanel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackPanel.obj `if test -f 'TrackPanel.cpp'; then $(CYGPATH_W) 'TrackPanel.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackPanel.cpp'; fi`

audacity-TrackPanelAx.o: TrackPanelAx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackPanelAx.o -MD -MP -MF $(DEPDIR)/audacity-TrackPanelAx.Tpo -c -o audacity-TrackPanelAx.o `test -f 'TrackPanelAx.cpp' || echo '$(srcdir)/'`TrackPanelAx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackPanelAx.Tpo $(DEPDIR)/audacity-TrackPanelAx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackPanelAx.cpp' object='audacity-TrackPanelAx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackPanelAx.o `test -f 'TrackPanelAx.cpp' || echo '$(srcdir)/'`TrackPanelAx.cpp

audacity-TrackPanelAx.obj: TrackPanelAx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-TrackPanelAx.obj -MD -MP -MF $(DEPDIR)/audacity-TrackPanelAx.Tpo -c -o audacity-TrackPanelAx.obj `if test -f 'TrackPanelAx.cpp'; then $(CYGPATH_W) 'TrackPanelAx.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackPanelAx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-TrackPanelAx.Tpo $(DEPDIR)/audacity-TrackPanelAx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='TrackPanelAx.cpp' object='audacity-TrackPanelAx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-TrackPanelAx.obj `if test -f 'TrackPanelAx.cpp'; then $(CYGPATH_W) 'TrackPanelAx.cpp'; else $(CYGPATH_W) '$(srcdir)/TrackPanelAx.cpp'; fi`

audacity-UndoManager.o: UndoManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-UndoManager.o -MD -MP -MF $(DEPDIR)/audacity-UndoManager.Tpo -c -o audacity-UndoManager.o `test -f 'UndoManager.cpp' || echo '$(srcdir)/'`UndoManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-UndoManager.Tpo $(DEPDIR)/audacity-UndoManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='UndoManager.cpp' object='audacity-UndoManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-UndoManager.o `test -f 'UndoManager.cpp' || echo '$(srcdir)/'`UndoManager.cpp

audacity-UndoManager.obj: UndoManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-UndoManager.obj -MD -MP -MF $(DEPDIR)/audacity-UndoManager.Tpo -c -o audacity-UndoManager.obj `if test -f 'UndoManager.cpp'; then $(CYGPATH_W) 'UndoManager.cpp'; else $(CYGPATH_W) '$(srcdir)/UndoManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-UndoManager.Tpo $(DEPDIR)/audacity-UndoManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='UndoManager.cpp' object='audacity-UndoManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-UndoManager.obj `if test -f 'UndoManager.cpp'; then $(CYGPATH_W) 'UndoManager.cpp'; else $(CYGPATH_W) '$(srcdir)/UndoManager.cpp'; fi`

audacity-ViewInfo.o: ViewInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ViewInfo.o -MD -MP -MF $(DEPDIR)/audacity-ViewInfo.Tpo -c -o audacity-ViewInfo.o `test -f 'ViewInfo.cpp' || echo '$(srcdir)/'`ViewInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ViewInfo.Tpo $(DEPDIR)/audacity-ViewInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ViewInfo.cpp' object='audacity-ViewInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ViewInfo.o `test -f 'ViewInfo.cpp' || echo '$(srcdir)/'`ViewInfo.cpp

audacity-ViewInfo.obj: ViewInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-ViewInfo.obj -MD -MP -MF $(DEPDIR)/audacity-ViewInfo.Tpo -c -o audacity-ViewInfo.obj `if test -f 'ViewInfo.cpp'; then $(CYGPATH_W) 'ViewInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/ViewInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-ViewInfo.Tpo $(DEPDIR)/audacity-ViewInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ViewInfo.cpp' object='audacity-ViewInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-ViewInfo.obj `if test -f 'ViewInfo.cpp'; then $(CYGPATH_W) 'ViewInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/ViewInfo.cpp'; fi`

audacity-VoiceKey.o: VoiceKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-VoiceKey.o -MD -MP -MF $(DEPDIR)/audacity-VoiceKey.Tpo -c -o audacity-VoiceKey.o `test -f 'VoiceKey.cpp' || echo '$(srcdir)/'`VoiceKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-VoiceKey.Tpo $(DEPDIR)/audacity-VoiceKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='VoiceKey.cpp' object='audacity-VoiceKey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-VoiceKey.o `test -f 'VoiceKey.cpp' || echo '$(srcdir)/'`VoiceKey.cpp

audacity-VoiceKey.obj: VoiceKey.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-VoiceKey.obj -MD -MP -MF $(DEPDIR)/audacity-VoiceKey.Tpo -c -o audacity-VoiceKey.obj `if test -f 'VoiceKey.cpp'; then $(CYGPATH_W) 'VoiceKey.cpp'; else $(CYGPATH_W) '$(srcdir)/VoiceKey.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-VoiceKey.Tpo $(DEPDIR)/audacity-VoiceKey.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='VoiceKey.cpp' object='audacity-VoiceKey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-VoiceKey.obj `if test -f 'VoiceKey.cpp'; then $(CYGPATH_W) 'VoiceKey.cpp'; else $(CYGPATH_W) '$(srcdir)/VoiceKey.cpp'; fi`

audacity-WaveClip.o: WaveClip.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WaveClip.o -MD -MP -MF $(DEPDIR)/audacity-WaveClip.Tpo -c -o audacity-WaveClip.o `test -f 'WaveClip.cpp' || echo '$(srcdir)/'`WaveClip.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WaveClip.Tpo $(DEPDIR)/audacity-WaveClip.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WaveClip.cpp' object='audacity-WaveClip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WaveClip.o `test -f 'WaveClip.cpp' || echo '$(srcdir)/'`WaveClip.cpp

audacity-WaveClip.obj: WaveClip.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WaveClip.obj -MD -MP -MF $(DEPDIR)/audacity-WaveClip.Tpo -c -o audacity-WaveClip.obj `if test -f 'WaveClip.cpp'; then $(CYGPATH_W) 'WaveClip.cpp'; else $(CYGPATH_W) '$(srcdir)/WaveClip.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WaveClip.Tpo $(DEPDIR)/audacity-WaveClip.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WaveClip.cpp' object='audacity-WaveClip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WaveClip.obj `if test -f 'WaveClip.cpp'; then $(CYGPATH_W) 'WaveClip.cpp'; else $(CYGPATH_W) '$(srcdir)/WaveClip.cpp'; fi`

audacity-WaveTrack.o: WaveTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WaveTrack.o -MD -MP -MF $(DEPDIR)/audacity-WaveTrack.Tpo -c -o audacity-WaveTrack.o `test -f 'WaveTrack.cpp' || echo '$(srcdir)/'`WaveTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WaveTrack.Tpo $(DEPDIR)/audacity-WaveTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WaveTrack.cpp' object='audacity-WaveTrack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WaveTrack.o `test -f 'WaveTrack.cpp' || echo '$(srcdir)/'`WaveTrack.cpp

audacity-WaveTrack.obj: WaveTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WaveTrack.obj -MD -MP -MF $(DEPDIR)/audacity-WaveTrack.Tpo -c -o audacity-WaveTrack.obj `if test -f 'WaveTrack.cpp'; then $(CYGPATH_W) 'WaveTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/WaveTrack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WaveTrack.Tpo $(DEPDIR)/audacity-WaveTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WaveTrack.cpp' object='audacity-WaveTrack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WaveTrack.obj `if test -f 'WaveTrack.cpp'; then $(CYGPATH_W) 'WaveTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/WaveTrack.cpp'; fi`

audacity-WrappedType.o: WrappedType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WrappedType.o -MD -MP -MF $(DEPDIR)/audacity-WrappedType.Tpo -c -o audacity-WrappedType.o `test -f 'WrappedType.cpp' || echo '$(srcdir)/'`WrappedType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WrappedType.Tpo $(DEPDIR)/audacity-WrappedType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WrappedType.cpp' object='audacity-WrappedType.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WrappedType.o `test -f 'WrappedType.cpp' || echo '$(srcdir)/'`WrappedType.cpp

audacity-WrappedType.obj: WrappedType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-WrappedType.obj -MD -MP -MF $(DEPDIR)/audacity-WrappedType.Tpo -c -o audacity-WrappedType.obj `if test -f 'WrappedType.cpp'; then $(CYGPATH_W) 'WrappedType.cpp'; else $(CYGPATH_W) '$(srcdir)/WrappedType.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-WrappedType.Tpo $(DEPDIR)/audacity-WrappedType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='WrappedType.cpp' object='audacity-WrappedType.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-WrappedType.obj `if test -f 'WrappedType.cpp'; then $(CYGPATH_W) 'WrappedType.cpp'; else $(CYGPATH_W) '$(srcdir)/WrappedType.cpp'; fi`

commands/audacity-AppCommandEvent.o: commands/AppCommandEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-AppCommandEvent.o -MD -MP -MF commands/$(DEPDIR)/audacity-AppCommandEvent.Tpo -c -o commands/audacity-AppCommandEvent.o `test -f 'commands/AppCommandEvent.cpp' || echo '$(srcdir)/'`commands/AppCommandEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-AppCommandEvent.Tpo commands/$(DEPDIR)/audacity-AppCommandEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/AppCommandEvent.cpp' object='commands/audacity-AppCommandEvent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-AppCommandEvent.o `test -f 'commands/AppCommandEvent.cpp' || echo '$(srcdir)/'`commands/AppCommandEvent.cpp

commands/audacity-AppCommandEvent.obj: commands/AppCommandEvent.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-AppCommandEvent.obj -MD -MP -MF commands/$(DEPDIR)/audacity-AppCommandEvent.Tpo -c -o commands/audacity-AppCommandEvent.obj `if test -f 'commands/AppCommandEvent.cpp'; then $(CYGPATH_W) 'commands/AppCommandEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/AppCommandEvent.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-AppCommandEvent.Tpo commands/$(DEPDIR)/audacity-AppCommandEvent.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/AppCommandEvent.cpp' object='commands/audacity-AppCommandEvent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-AppCommandEvent.obj `if test -f 'commands/AppCommandEvent.cpp'; then $(CYGPATH_W) 'commands/AppCommandEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/AppCommandEvent.cpp'; fi`

commands/audacity-BatchEvalCommand.o: commands/BatchEvalCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-BatchEvalCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-BatchEvalCommand.Tpo -c -o commands/audacity-BatchEvalCommand.o `test -f 'commands/BatchEvalCommand.cpp' || echo '$(srcdir)/'`commands/BatchEvalCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-BatchEvalCommand.Tpo commands/$(DEPDIR)/audacity-BatchEvalCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/BatchEvalCommand.cpp' object='commands/audacity-BatchEvalCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-BatchEvalCommand.o `test -f 'commands/BatchEvalCommand.cpp' || echo '$(srcdir)/'`commands/BatchEvalCommand.cpp

commands/audacity-BatchEvalCommand.obj: commands/BatchEvalCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-BatchEvalCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-BatchEvalCommand.Tpo -c -o commands/audacity-BatchEvalCommand.obj `if test -f 'commands/BatchEvalCommand.cpp'; then $(CYGPATH_W) 'commands/BatchEvalCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/BatchEvalCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-BatchEvalCommand.Tpo commands/$(DEPDIR)/audacity-BatchEvalCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/BatchEvalCommand.cpp' object='commands/audacity-BatchEvalCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-BatchEvalCommand.obj `if test -f 'commands/BatchEvalCommand.cpp'; then $(CYGPATH_W) 'commands/BatchEvalCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/BatchEvalCommand.cpp'; fi`

commands/audacity-Command.o: commands/Command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-Command.o -MD -MP -MF commands/$(DEPDIR)/audacity-Command.Tpo -c -o commands/audacity-Command.o `test -f 'commands/Command.cpp' || echo '$(srcdir)/'`commands/Command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-Command.Tpo commands/$(DEPDIR)/audacity-Command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/Command.cpp' object='commands/audacity-Command.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-Command.o `test -f 'commands/Command.cpp' || echo '$(srcdir)/'`commands/Command.cpp

commands/audacity-Command.obj: commands/Command.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-Command.obj -MD -MP -MF commands/$(DEPDIR)/audacity-Command.Tpo -c -o commands/audacity-Command.obj `if test -f 'commands/Command.cpp'; then $(CYGPATH_W) 'commands/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/Command.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-Command.Tpo commands/$(DEPDIR)/audacity-Command.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/Command.cpp' object='commands/audacity-Command.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-Command.obj `if test -f 'commands/Command.cpp'; then $(CYGPATH_W) 'commands/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/Command.cpp'; fi`

commands/audacity-CommandBuilder.o: commands/CommandBuilder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandBuilder.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandBuilder.Tpo -c -o commands/audacity-CommandBuilder.o `test -f 'commands/CommandBuilder.cpp' || echo '$(srcdir)/'`commands/CommandBuilder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandBuilder.Tpo commands/$(DEPDIR)/audacity-CommandBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandBuilder.cpp' object='commands/audacity-CommandBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandBuilder.o `test -f 'commands/CommandBuilder.cpp' || echo '$(srcdir)/'`commands/CommandBuilder.cpp

commands/audacity-CommandBuilder.obj: commands/CommandBuilder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandBuilder.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandBuilder.Tpo -c -o commands/audacity-CommandBuilder.obj `if test -f 'commands/CommandBuilder.cpp'; then $(CYGPATH_W) 'commands/CommandBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandBuilder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandBuilder.Tpo commands/$(DEPDIR)/audacity-CommandBuilder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandBuilder.cpp' object='commands/audacity-CommandBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandBuilder.obj `if test -f 'commands/CommandBuilder.cpp'; then $(CYGPATH_W) 'commands/CommandBuilder.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandBuilder.cpp'; fi`

commands/audacity-CommandDirectory.o: commands/CommandDirectory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandDirectory.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandDirectory.Tpo -c -o commands/audacity-CommandDirectory.o `test -f 'commands/CommandDirectory.cpp' || echo '$(srcdir)/'`commands/CommandDirectory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandDirectory.Tpo commands/$(DEPDIR)/audacity-CommandDirectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandDirectory.cpp' object='commands/audacity-CommandDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandDirectory.o `test -f 'commands/CommandDirectory.cpp' || echo '$(srcdir)/'`commands/CommandDirectory.cpp

commands/audacity-CommandDirectory.obj: commands/CommandDirectory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandDirectory.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandDirectory.Tpo -c -o commands/audacity-CommandDirectory.obj `if test -f 'commands/CommandDirectory.cpp'; then $(CYGPATH_W) 'commands/CommandDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandDirectory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandDirectory.Tpo commands/$(DEPDIR)/audacity-CommandDirectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandDirectory.cpp' object='commands/audacity-CommandDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandDirectory.obj `if test -f 'commands/CommandDirectory.cpp'; then $(CYGPATH_W) 'commands/CommandDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandDirectory.cpp'; fi`

commands/audacity-CommandHandler.o: commands/CommandHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandHandler.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandHandler.Tpo -c -o commands/audacity-CommandHandler.o `test -f 'commands/CommandHandler.cpp' || echo '$(srcdir)/'`commands/CommandHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandHandler.Tpo commands/$(DEPDIR)/audacity-CommandHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandHandler.cpp' object='commands/audacity-CommandHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandHandler.o `test -f 'commands/CommandHandler.cpp' || echo '$(srcdir)/'`commands/CommandHandler.cpp

commands/audacity-CommandHandler.obj: commands/CommandHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandHandler.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandHandler.Tpo -c -o commands/audacity-CommandHandler.obj `if test -f 'commands/CommandHandler.cpp'; then $(CYGPATH_W) 'commands/CommandHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandHandler.Tpo commands/$(DEPDIR)/audacity-CommandHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandHandler.cpp' object='commands/audacity-CommandHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandHandler.obj `if test -f 'commands/CommandHandler.cpp'; then $(CYGPATH_W) 'commands/CommandHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandHandler.cpp'; fi`

commands/audacity-CommandManager.o: commands/CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandManager.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandManager.Tpo -c -o commands/audacity-CommandManager.o `test -f 'commands/CommandManager.cpp' || echo '$(srcdir)/'`commands/CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandManager.Tpo commands/$(DEPDIR)/audacity-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandManager.cpp' object='commands/audacity-CommandManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandManager.o `test -f 'commands/CommandManager.cpp' || echo '$(srcdir)/'`commands/CommandManager.cpp

commands/audacity-CommandManager.obj: commands/CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandManager.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandManager.Tpo -c -o commands/audacity-CommandManager.obj `if test -f 'commands/CommandManager.cpp'; then $(CYGPATH_W) 'commands/CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandManager.Tpo commands/$(DEPDIR)/audacity-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandManager.cpp' object='commands/audacity-CommandManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandManager.obj `if test -f 'commands/CommandManager.cpp'; then $(CYGPATH_W) 'commands/CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandManager.cpp'; fi`

commands/audacity-CommandSignature.o: commands/CommandSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandSignature.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandSignature.Tpo -c -o commands/audacity-CommandSignature.o `test -f 'commands/CommandSignature.cpp' || echo '$(srcdir)/'`commands/CommandSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandSignature.Tpo commands/$(DEPDIR)/audacity-CommandSignature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandSignature.cpp' object='commands/audacity-CommandSignature.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandSignature.o `test -f 'commands/CommandSignature.cpp' || echo '$(srcdir)/'`commands/CommandSignature.cpp

commands/audacity-CommandSignature.obj: commands/CommandSignature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandSignature.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandSignature.Tpo -c -o commands/audacity-CommandSignature.obj `if test -f 'commands/CommandSignature.cpp'; then $(CYGPATH_W) 'commands/CommandSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandSignature.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandSignature.Tpo commands/$(DEPDIR)/audacity-CommandSignature.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandSignature.cpp' object='commands/audacity-CommandSignature.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandSignature.obj `if test -f 'commands/CommandSignature.cpp'; then $(CYGPATH_W) 'commands/CommandSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandSignature.cpp'; fi`

commands/audacity-CommandType.o: commands/CommandType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandType.o -MD -MP -MF commands/$(DEPDIR)/audacity-CommandType.Tpo -c -o commands/audacity-CommandType.o `test -f 'commands/CommandType.cpp' || echo '$(srcdir)/'`commands/CommandType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandType.Tpo commands/$(DEPDIR)/audacity-CommandType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandType.cpp' object='commands/audacity-CommandType.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandType.o `test -f 'commands/CommandType.cpp' || echo '$(srcdir)/'`commands/CommandType.cpp

commands/audacity-CommandType.obj: commands/CommandType.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CommandType.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CommandType.Tpo -c -o commands/audacity-CommandType.obj `if test -f 'commands/CommandType.cpp'; then $(CYGPATH_W) 'commands/CommandType.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandType.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CommandType.Tpo commands/$(DEPDIR)/audacity-CommandType.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CommandType.cpp' object='commands/audacity-CommandType.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CommandType.obj `if test -f 'commands/CommandType.cpp'; then $(CYGPATH_W) 'commands/CommandType.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CommandType.cpp'; fi`

commands/audacity-CompareAudioCommand.o: commands/CompareAudioCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CompareAudioCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-CompareAudioCommand.Tpo -c -o commands/audacity-CompareAudioCommand.o `test -f 'commands/CompareAudioCommand.cpp' || echo '$(srcdir)/'`commands/CompareAudioCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CompareAudioCommand.Tpo commands/$(DEPDIR)/audacity-CompareAudioCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CompareAudioCommand.cpp' object='commands/audacity-CompareAudioCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CompareAudioCommand.o `test -f 'commands/CompareAudioCommand.cpp' || echo '$(srcdir)/'`commands/CompareAudioCommand.cpp

commands/audacity-CompareAudioCommand.obj: commands/CompareAudioCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-CompareAudioCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-CompareAudioCommand.Tpo -c -o commands/audacity-CompareAudioCommand.obj `if test -f 'commands/CompareAudioCommand.cpp'; then $(CYGPATH_W) 'commands/CompareAudioCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CompareAudioCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-CompareAudioCommand.Tpo commands/$(DEPDIR)/audacity-CompareAudioCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/CompareAudioCommand.cpp' object='commands/audacity-CompareAudioCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-CompareAudioCommand.obj `if test -f 'commands/CompareAudioCommand.cpp'; then $(CYGPATH_W) 'commands/CompareAudioCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/CompareAudioCommand.cpp'; fi`

commands/audacity-ExecMenuCommand.o: commands/ExecMenuCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ExecMenuCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-ExecMenuCommand.Tpo -c -o commands/audacity-ExecMenuCommand.o `test -f 'commands/ExecMenuCommand.cpp' || echo '$(srcdir)/'`commands/ExecMenuCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ExecMenuCommand.Tpo commands/$(DEPDIR)/audacity-ExecMenuCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ExecMenuCommand.cpp' object='commands/audacity-ExecMenuCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ExecMenuCommand.o `test -f 'commands/ExecMenuCommand.cpp' || echo '$(srcdir)/'`commands/ExecMenuCommand.cpp

commands/audacity-ExecMenuCommand.obj: commands/ExecMenuCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ExecMenuCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-ExecMenuCommand.Tpo -c -o commands/audacity-ExecMenuCommand.obj `if test -f 'commands/ExecMenuCommand.cpp'; then $(CYGPATH_W) 'commands/ExecMenuCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ExecMenuCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ExecMenuCommand.Tpo commands/$(DEPDIR)/audacity-ExecMenuCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ExecMenuCommand.cpp' object='commands/audacity-ExecMenuCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ExecMenuCommand.obj `if test -f 'commands/ExecMenuCommand.cpp'; then $(CYGPATH_W) 'commands/ExecMenuCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ExecMenuCommand.cpp'; fi`

commands/audacity-GetAllMenuCommands.o: commands/GetAllMenuCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetAllMenuCommands.o -MD -MP -MF commands/$(DEPDIR)/audacity-GetAllMenuCommands.Tpo -c -o commands/audacity-GetAllMenuCommands.o `test -f 'commands/GetAllMenuCommands.cpp' || echo '$(srcdir)/'`commands/GetAllMenuCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetAllMenuCommands.Tpo commands/$(DEPDIR)/audacity-GetAllMenuCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetAllMenuCommands.cpp' object='commands/audacity-GetAllMenuCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetAllMenuCommands.o `test -f 'commands/GetAllMenuCommands.cpp' || echo '$(srcdir)/'`commands/GetAllMenuCommands.cpp

commands/audacity-GetAllMenuCommands.obj: commands/GetAllMenuCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetAllMenuCommands.obj -MD -MP -MF commands/$(DEPDIR)/audacity-GetAllMenuCommands.Tpo -c -o commands/audacity-GetAllMenuCommands.obj `if test -f 'commands/GetAllMenuCommands.cpp'; then $(CYGPATH_W) 'commands/GetAllMenuCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetAllMenuCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetAllMenuCommands.Tpo commands/$(DEPDIR)/audacity-GetAllMenuCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetAllMenuCommands.cpp' object='commands/audacity-GetAllMenuCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetAllMenuCommands.obj `if test -f 'commands/GetAllMenuCommands.cpp'; then $(CYGPATH_W) 'commands/GetAllMenuCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetAllMenuCommands.cpp'; fi`

commands/audacity-GetProjectInfoCommand.o: commands/GetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetProjectInfoCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Tpo -c -o commands/audacity-GetProjectInfoCommand.o `test -f 'commands/GetProjectInfoCommand.cpp' || echo '$(srcdir)/'`commands/GetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Tpo commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetProjectInfoCommand.cpp' object='commands/audacity-GetProjectInfoCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetProjectInfoCommand.o `test -f 'commands/GetProjectInfoCommand.cpp' || echo '$(srcdir)/'`commands/GetProjectInfoCommand.cpp

commands/audacity-GetProjectInfoCommand.obj: commands/GetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetProjectInfoCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Tpo -c -o commands/audacity-GetProjectInfoCommand.obj `if test -f 'commands/GetProjectInfoCommand.cpp'; then $(CYGPATH_W) 'commands/GetProjectInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetProjectInfoCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Tpo commands/$(DEPDIR)/audacity-GetProjectInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetProjectInfoCommand.cpp' object='commands/audacity-GetProjectInfoCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetProjectInfoCommand.obj `if test -f 'commands/GetProjectInfoCommand.cpp'; then $(CYGPATH_W) 'commands/GetProjectInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetProjectInfoCommand.cpp'; fi`

commands/audacity-GetTrackInfoCommand.o: commands/GetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetTrackInfoCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Tpo -c -o commands/audacity-GetTrackInfoCommand.o `test -f 'commands/GetTrackInfoCommand.cpp' || echo '$(srcdir)/'`commands/GetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Tpo commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetTrackInfoCommand.cpp' object='commands/audacity-GetTrackInfoCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetTrackInfoCommand.o `test -f 'commands/GetTrackInfoCommand.cpp' || echo '$(srcdir)/'`commands/GetTrackInfoCommand.cpp

commands/audacity-GetTrackInfoCommand.obj: commands/GetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-GetTrackInfoCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Tpo -c -o commands/audacity-GetTrackInfoCommand.obj `if test -f 'commands/GetTrackInfoCommand.cpp'; then $(CYGPATH_W) 'commands/GetTrackInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetTrackInfoCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Tpo commands/$(DEPDIR)/audacity-GetTrackInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/GetTrackInfoCommand.cpp' object='commands/audacity-GetTrackInfoCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-GetTrackInfoCommand.obj `if test -f 'commands/GetTrackInfoCommand.cpp'; then $(CYGPATH_W) 'commands/GetTrackInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/GetTrackInfoCommand.cpp'; fi`

commands/audacity-HelpCommand.o: commands/HelpCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-HelpCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-HelpCommand.Tpo -c -o commands/audacity-HelpCommand.o `test -f 'commands/HelpCommand.cpp' || echo '$(srcdir)/'`commands/HelpCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-HelpCommand.Tpo commands/$(DEPDIR)/audacity-HelpCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/HelpCommand.cpp' object='commands/audacity-HelpCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-HelpCommand.o `test -f 'commands/HelpCommand.cpp' || echo '$(srcdir)/'`commands/HelpCommand.cpp

commands/audacity-HelpCommand.obj: commands/HelpCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-HelpCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-HelpCommand.Tpo -c -o commands/audacity-HelpCommand.obj `if test -f 'commands/HelpCommand.cpp'; then $(CYGPATH_W) 'commands/HelpCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/HelpCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-HelpCommand.Tpo commands/$(DEPDIR)/audacity-HelpCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/HelpCommand.cpp' object='commands/audacity-HelpCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-HelpCommand.obj `if test -f 'commands/HelpCommand.cpp'; then $(CYGPATH_W) 'commands/HelpCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/HelpCommand.cpp'; fi`

commands/audacity-ImportExportCommands.o: commands/ImportExportCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ImportExportCommands.o -MD -MP -MF commands/$(DEPDIR)/audacity-ImportExportCommands.Tpo -c -o commands/audacity-ImportExportCommands.o `test -f 'commands/ImportExportCommands.cpp' || echo '$(srcdir)/'`commands/ImportExportCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ImportExportCommands.Tpo commands/$(DEPDIR)/audacity-ImportExportCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ImportExportCommands.cpp' object='commands/audacity-ImportExportCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ImportExportCommands.o `test -f 'commands/ImportExportCommands.cpp' || echo '$(srcdir)/'`commands/ImportExportCommands.cpp

commands/audacity-ImportExportCommands.obj: commands/ImportExportCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ImportExportCommands.obj -MD -MP -MF commands/$(DEPDIR)/audacity-ImportExportCommands.Tpo -c -o commands/audacity-ImportExportCommands.obj `if test -f 'commands/ImportExportCommands.cpp'; then $(CYGPATH_W) 'commands/ImportExportCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ImportExportCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ImportExportCommands.Tpo commands/$(DEPDIR)/audacity-ImportExportCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ImportExportCommands.cpp' object='commands/audacity-ImportExportCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ImportExportCommands.obj `if test -f 'commands/ImportExportCommands.cpp'; then $(CYGPATH_W) 'commands/ImportExportCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ImportExportCommands.cpp'; fi`

commands/audacity-Keyboard.o: commands/Keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-Keyboard.o -MD -MP -MF commands/$(DEPDIR)/audacity-Keyboard.Tpo -c -o commands/audacity-Keyboard.o `test -f 'commands/Keyboard.cpp' || echo '$(srcdir)/'`commands/Keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-Keyboard.Tpo commands/$(DEPDIR)/audacity-Keyboard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/Keyboard.cpp' object='commands/audacity-Keyboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-Keyboard.o `test -f 'commands/Keyboard.cpp' || echo '$(srcdir)/'`commands/Keyboard.cpp

commands/audacity-Keyboard.obj: commands/Keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-Keyboard.obj -MD -MP -MF commands/$(DEPDIR)/audacity-Keyboard.Tpo -c -o commands/audacity-Keyboard.obj `if test -f 'commands/Keyboard.cpp'; then $(CYGPATH_W) 'commands/Keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/Keyboard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-Keyboard.Tpo commands/$(DEPDIR)/audacity-Keyboard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/Keyboard.cpp' object='commands/audacity-Keyboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-Keyboard.obj `if test -f 'commands/Keyboard.cpp'; then $(CYGPATH_W) 'commands/Keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/Keyboard.cpp'; fi`

commands/audacity-MessageCommand.o: commands/MessageCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-MessageCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-MessageCommand.Tpo -c -o commands/audacity-MessageCommand.o `test -f 'commands/MessageCommand.cpp' || echo '$(srcdir)/'`commands/MessageCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-MessageCommand.Tpo commands/$(DEPDIR)/audacity-MessageCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/MessageCommand.cpp' object='commands/audacity-MessageCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-MessageCommand.o `test -f 'commands/MessageCommand.cpp' || echo '$(srcdir)/'`commands/MessageCommand.cpp

commands/audacity-MessageCommand.obj: commands/MessageCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-MessageCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-MessageCommand.Tpo -c -o commands/audacity-MessageCommand.obj `if test -f 'commands/MessageCommand.cpp'; then $(CYGPATH_W) 'commands/MessageCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/MessageCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-MessageCommand.Tpo commands/$(DEPDIR)/audacity-MessageCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/MessageCommand.cpp' object='commands/audacity-MessageCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-MessageCommand.obj `if test -f 'commands/MessageCommand.cpp'; then $(CYGPATH_W) 'commands/MessageCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/MessageCommand.cpp'; fi`

commands/audacity-OpenSaveCommands.o: commands/OpenSaveCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-OpenSaveCommands.o -MD -MP -MF commands/$(DEPDIR)/audacity-OpenSaveCommands.Tpo -c -o commands/audacity-OpenSaveCommands.o `test -f 'commands/OpenSaveCommands.cpp' || echo '$(srcdir)/'`commands/OpenSaveCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-OpenSaveCommands.Tpo commands/$(DEPDIR)/audacity-OpenSaveCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/OpenSaveCommands.cpp' object='commands/audacity-OpenSaveCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-OpenSaveCommands.o `test -f 'commands/OpenSaveCommands.cpp' || echo '$(srcdir)/'`commands/OpenSaveCommands.cpp

commands/audacity-OpenSaveCommands.obj: commands/OpenSaveCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-OpenSaveCommands.obj -MD -MP -MF commands/$(DEPDIR)/audacity-OpenSaveCommands.Tpo -c -o commands/audacity-OpenSaveCommands.obj `if test -f 'commands/OpenSaveCommands.cpp'; then $(CYGPATH_W) 'commands/OpenSaveCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/OpenSaveCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-OpenSaveCommands.Tpo commands/$(DEPDIR)/audacity-OpenSaveCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/OpenSaveCommands.cpp' object='commands/audacity-OpenSaveCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-OpenSaveCommands.obj `if test -f 'commands/OpenSaveCommands.cpp'; then $(CYGPATH_W) 'commands/OpenSaveCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/OpenSaveCommands.cpp'; fi`

commands/audacity-PreferenceCommands.o: commands/PreferenceCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-PreferenceCommands.o -MD -MP -MF commands/$(DEPDIR)/audacity-PreferenceCommands.Tpo -c -o commands/audacity-PreferenceCommands.o `test -f 'commands/PreferenceCommands.cpp' || echo '$(srcdir)/'`commands/PreferenceCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-PreferenceCommands.Tpo commands/$(DEPDIR)/audacity-PreferenceCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/PreferenceCommands.cpp' object='commands/audacity-PreferenceCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-PreferenceCommands.o `test -f 'commands/PreferenceCommands.cpp' || echo '$(srcdir)/'`commands/PreferenceCommands.cpp

commands/audacity-PreferenceCommands.obj: commands/PreferenceCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-PreferenceCommands.obj -MD -MP -MF commands/$(DEPDIR)/audacity-PreferenceCommands.Tpo -c -o commands/audacity-PreferenceCommands.obj `if test -f 'commands/PreferenceCommands.cpp'; then $(CYGPATH_W) 'commands/PreferenceCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/PreferenceCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-PreferenceCommands.Tpo commands/$(DEPDIR)/audacity-PreferenceCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/PreferenceCommands.cpp' object='commands/audacity-PreferenceCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-PreferenceCommands.obj `if test -f 'commands/PreferenceCommands.cpp'; then $(CYGPATH_W) 'commands/PreferenceCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/PreferenceCommands.cpp'; fi`

commands/audacity-ResponseQueue.o: commands/ResponseQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ResponseQueue.o -MD -MP -MF commands/$(DEPDIR)/audacity-ResponseQueue.Tpo -c -o commands/audacity-ResponseQueue.o `test -f 'commands/ResponseQueue.cpp' || echo '$(srcdir)/'`commands/ResponseQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ResponseQueue.Tpo commands/$(DEPDIR)/audacity-ResponseQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ResponseQueue.cpp' object='commands/audacity-ResponseQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ResponseQueue.o `test -f 'commands/ResponseQueue.cpp' || echo '$(srcdir)/'`commands/ResponseQueue.cpp

commands/audacity-ResponseQueue.obj: commands/ResponseQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ResponseQueue.obj -MD -MP -MF commands/$(DEPDIR)/audacity-ResponseQueue.Tpo -c -o commands/audacity-ResponseQueue.obj `if test -f 'commands/ResponseQueue.cpp'; then $(CYGPATH_W) 'commands/ResponseQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ResponseQueue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ResponseQueue.Tpo commands/$(DEPDIR)/audacity-ResponseQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ResponseQueue.cpp' object='commands/audacity-ResponseQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ResponseQueue.obj `if test -f 'commands/ResponseQueue.cpp'; then $(CYGPATH_W) 'commands/ResponseQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ResponseQueue.cpp'; fi`

commands/audacity-ScreenshotCommand.o: commands/ScreenshotCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ScreenshotCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-ScreenshotCommand.Tpo -c -o commands/audacity-ScreenshotCommand.o `test -f 'commands/ScreenshotCommand.cpp' || echo '$(srcdir)/'`commands/ScreenshotCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ScreenshotCommand.Tpo commands/$(DEPDIR)/audacity-ScreenshotCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ScreenshotCommand.cpp' object='commands/audacity-ScreenshotCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ScreenshotCommand.o `test -f 'commands/ScreenshotCommand.cpp' || echo '$(srcdir)/'`commands/ScreenshotCommand.cpp

commands/audacity-ScreenshotCommand.obj: commands/ScreenshotCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ScreenshotCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-ScreenshotCommand.Tpo -c -o commands/audacity-ScreenshotCommand.obj `if test -f 'commands/ScreenshotCommand.cpp'; then $(CYGPATH_W) 'commands/ScreenshotCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ScreenshotCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ScreenshotCommand.Tpo commands/$(DEPDIR)/audacity-ScreenshotCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ScreenshotCommand.cpp' object='commands/audacity-ScreenshotCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ScreenshotCommand.obj `if test -f 'commands/ScreenshotCommand.cpp'; then $(CYGPATH_W) 'commands/ScreenshotCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ScreenshotCommand.cpp'; fi`

commands/audacity-ScriptCommandRelay.o: commands/ScriptCommandRelay.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ScriptCommandRelay.o -MD -MP -MF commands/$(DEPDIR)/audacity-ScriptCommandRelay.Tpo -c -o commands/audacity-ScriptCommandRelay.o `test -f 'commands/ScriptCommandRelay.cpp' || echo '$(srcdir)/'`commands/ScriptCommandRelay.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ScriptCommandRelay.Tpo commands/$(DEPDIR)/audacity-ScriptCommandRelay.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ScriptCommandRelay.cpp' object='commands/audacity-ScriptCommandRelay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ScriptCommandRelay.o `test -f 'commands/ScriptCommandRelay.cpp' || echo '$(srcdir)/'`commands/ScriptCommandRelay.cpp

commands/audacity-ScriptCommandRelay.obj: commands/ScriptCommandRelay.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-ScriptCommandRelay.obj -MD -MP -MF commands/$(DEPDIR)/audacity-ScriptCommandRelay.Tpo -c -o commands/audacity-ScriptCommandRelay.obj `if test -f 'commands/ScriptCommandRelay.cpp'; then $(CYGPATH_W) 'commands/ScriptCommandRelay.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ScriptCommandRelay.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-ScriptCommandRelay.Tpo commands/$(DEPDIR)/audacity-ScriptCommandRelay.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/ScriptCommandRelay.cpp' object='commands/audacity-ScriptCommandRelay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-ScriptCommandRelay.obj `if test -f 'commands/ScriptCommandRelay.cpp'; then $(CYGPATH_W) 'commands/ScriptCommandRelay.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/ScriptCommandRelay.cpp'; fi`

commands/audacity-SelectCommand.o: commands/SelectCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SelectCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-SelectCommand.Tpo -c -o commands/audacity-SelectCommand.o `test -f 'commands/SelectCommand.cpp' || echo '$(srcdir)/'`commands/SelectCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SelectCommand.Tpo commands/$(DEPDIR)/audacity-SelectCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SelectCommand.cpp' object='commands/audacity-SelectCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SelectCommand.o `test -f 'commands/SelectCommand.cpp' || echo '$(srcdir)/'`commands/SelectCommand.cpp

commands/audacity-SelectCommand.obj: commands/SelectCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SelectCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-SelectCommand.Tpo -c -o commands/audacity-SelectCommand.obj `if test -f 'commands/SelectCommand.cpp'; then $(CYGPATH_W) 'commands/SelectCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SelectCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SelectCommand.Tpo commands/$(DEPDIR)/audacity-SelectCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SelectCommand.cpp' object='commands/audacity-SelectCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SelectCommand.obj `if test -f 'commands/SelectCommand.cpp'; then $(CYGPATH_W) 'commands/SelectCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SelectCommand.cpp'; fi`

commands/audacity-SetProjectInfoCommand.o: commands/SetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SetProjectInfoCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Tpo -c -o commands/audacity-SetProjectInfoCommand.o `test -f 'commands/SetProjectInfoCommand.cpp' || echo '$(srcdir)/'`commands/SetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Tpo commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SetProjectInfoCommand.cpp' object='commands/audacity-SetProjectInfoCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SetProjectInfoCommand.o `test -f 'commands/SetProjectInfoCommand.cpp' || echo '$(srcdir)/'`commands/SetProjectInfoCommand.cpp

commands/audacity-SetProjectInfoCommand.obj: commands/SetProjectInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SetProjectInfoCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Tpo -c -o commands/audacity-SetProjectInfoCommand.obj `if test -f 'commands/SetProjectInfoCommand.cpp'; then $(CYGPATH_W) 'commands/SetProjectInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SetProjectInfoCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Tpo commands/$(DEPDIR)/audacity-SetProjectInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SetProjectInfoCommand.cpp' object='commands/audacity-SetProjectInfoCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SetProjectInfoCommand.obj `if test -f 'commands/SetProjectInfoCommand.cpp'; then $(CYGPATH_W) 'commands/SetProjectInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SetProjectInfoCommand.cpp'; fi`

commands/audacity-SetTrackInfoCommand.o: commands/SetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SetTrackInfoCommand.o -MD -MP -MF commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Tpo -c -o commands/audacity-SetTrackInfoCommand.o `test -f 'commands/SetTrackInfoCommand.cpp' || echo '$(srcdir)/'`commands/SetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Tpo commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SetTrackInfoCommand.cpp' object='commands/audacity-SetTrackInfoCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SetTrackInfoCommand.o `test -f 'commands/SetTrackInfoCommand.cpp' || echo '$(srcdir)/'`commands/SetTrackInfoCommand.cpp

commands/audacity-SetTrackInfoCommand.obj: commands/SetTrackInfoCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT commands/audacity-SetTrackInfoCommand.obj -MD -MP -MF commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Tpo -c -o commands/audacity-SetTrackInfoCommand.obj `if test -f 'commands/SetTrackInfoCommand.cpp'; then $(CYGPATH_W) 'commands/SetTrackInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SetTrackInfoCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Tpo commands/$(DEPDIR)/audacity-SetTrackInfoCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='commands/SetTrackInfoCommand.cpp' object='commands/audacity-SetTrackInfoCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o commands/audacity-SetTrackInfoCommand.obj `if test -f 'commands/SetTrackInfoCommand.cpp'; then $(CYGPATH_W) 'commands/SetTrackInfoCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/commands/SetTrackInfoCommand.cpp'; fi`

effects/audacity-Amplify.o: effects/Amplify.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Amplify.o -MD -MP -MF effects/$(DEPDIR)/audacity-Amplify.Tpo -c -o effects/audacity-Amplify.o `test -f 'effects/Amplify.cpp' || echo '$(srcdir)/'`effects/Amplify.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Amplify.Tpo effects/$(DEPDIR)/audacity-Amplify.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Amplify.cpp' object='effects/audacity-Amplify.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Amplify.o `test -f 'effects/Amplify.cpp' || echo '$(srcdir)/'`effects/Amplify.cpp

effects/audacity-Amplify.obj: effects/Amplify.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Amplify.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Amplify.Tpo -c -o effects/audacity-Amplify.obj `if test -f 'effects/Amplify.cpp'; then $(CYGPATH_W) 'effects/Amplify.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Amplify.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Amplify.Tpo effects/$(DEPDIR)/audacity-Amplify.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Amplify.cpp' object='effects/audacity-Amplify.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Amplify.obj `if test -f 'effects/Amplify.cpp'; then $(CYGPATH_W) 'effects/Amplify.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Amplify.cpp'; fi`

effects/audacity-AutoDuck.o: effects/AutoDuck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-AutoDuck.o -MD -MP -MF effects/$(DEPDIR)/audacity-AutoDuck.Tpo -c -o effects/audacity-AutoDuck.o `test -f 'effects/AutoDuck.cpp' || echo '$(srcdir)/'`effects/AutoDuck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-AutoDuck.Tpo effects/$(DEPDIR)/audacity-AutoDuck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/AutoDuck.cpp' object='effects/audacity-AutoDuck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-AutoDuck.o `test -f 'effects/AutoDuck.cpp' || echo '$(srcdir)/'`effects/AutoDuck.cpp

effects/audacity-AutoDuck.obj: effects/AutoDuck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-AutoDuck.obj -MD -MP -MF effects/$(DEPDIR)/audacity-AutoDuck.Tpo -c -o effects/audacity-AutoDuck.obj `if test -f 'effects/AutoDuck.cpp'; then $(CYGPATH_W) 'effects/AutoDuck.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/AutoDuck.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-AutoDuck.Tpo effects/$(DEPDIR)/audacity-AutoDuck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/AutoDuck.cpp' object='effects/audacity-AutoDuck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-AutoDuck.obj `if test -f 'effects/AutoDuck.cpp'; then $(CYGPATH_W) 'effects/AutoDuck.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/AutoDuck.cpp'; fi`

effects/audacity-BassTreble.o: effects/BassTreble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-BassTreble.o -MD -MP -MF effects/$(DEPDIR)/audacity-BassTreble.Tpo -c -o effects/audacity-BassTreble.o `test -f 'effects/BassTreble.cpp' || echo '$(srcdir)/'`effects/BassTreble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-BassTreble.Tpo effects/$(DEPDIR)/audacity-BassTreble.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/BassTreble.cpp' object='effects/audacity-BassTreble.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-BassTreble.o `test -f 'effects/BassTreble.cpp' || echo '$(srcdir)/'`effects/BassTreble.cpp

effects/audacity-BassTreble.obj: effects/BassTreble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-BassTreble.obj -MD -MP -MF effects/$(DEPDIR)/audacity-BassTreble.Tpo -c -o effects/audacity-BassTreble.obj `if test -f 'effects/BassTreble.cpp'; then $(CYGPATH_W) 'effects/BassTreble.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/BassTreble.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-BassTreble.Tpo effects/$(DEPDIR)/audacity-BassTreble.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/BassTreble.cpp' object='effects/audacity-BassTreble.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-BassTreble.obj `if test -f 'effects/BassTreble.cpp'; then $(CYGPATH_W) 'effects/BassTreble.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/BassTreble.cpp'; fi`

effects/audacity-Biquad.o: effects/Biquad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Biquad.o -MD -MP -MF effects/$(DEPDIR)/audacity-Biquad.Tpo -c -o effects/audacity-Biquad.o `test -f 'effects/Biquad.cpp' || echo '$(srcdir)/'`effects/Biquad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Biquad.Tpo effects/$(DEPDIR)/audacity-Biquad.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Biquad.cpp' object='effects/audacity-Biquad.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Biquad.o `test -f 'effects/Biquad.cpp' || echo '$(srcdir)/'`effects/Biquad.cpp

effects/audacity-Biquad.obj: effects/Biquad.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Biquad.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Biquad.Tpo -c -o effects/audacity-Biquad.obj `if test -f 'effects/Biquad.cpp'; then $(CYGPATH_W) 'effects/Biquad.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Biquad.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Biquad.Tpo effects/$(DEPDIR)/audacity-Biquad.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Biquad.cpp' object='effects/audacity-Biquad.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Biquad.obj `if test -f 'effects/Biquad.cpp'; then $(CYGPATH_W) 'effects/Biquad.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Biquad.cpp'; fi`

effects/audacity-ChangePitch.o: effects/ChangePitch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangePitch.o -MD -MP -MF effects/$(DEPDIR)/audacity-ChangePitch.Tpo -c -o effects/audacity-ChangePitch.o `test -f 'effects/ChangePitch.cpp' || echo '$(srcdir)/'`effects/ChangePitch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangePitch.Tpo effects/$(DEPDIR)/audacity-ChangePitch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangePitch.cpp' object='effects/audacity-ChangePitch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangePitch.o `test -f 'effects/ChangePitch.cpp' || echo '$(srcdir)/'`effects/ChangePitch.cpp

effects/audacity-ChangePitch.obj: effects/ChangePitch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangePitch.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ChangePitch.Tpo -c -o effects/audacity-ChangePitch.obj `if test -f 'effects/ChangePitch.cpp'; then $(CYGPATH_W) 'effects/ChangePitch.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangePitch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangePitch.Tpo effects/$(DEPDIR)/audacity-ChangePitch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangePitch.cpp' object='effects/audacity-ChangePitch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangePitch.obj `if test -f 'effects/ChangePitch.cpp'; then $(CYGPATH_W) 'effects/ChangePitch.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangePitch.cpp'; fi`

effects/audacity-ChangeSpeed.o: effects/ChangeSpeed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangeSpeed.o -MD -MP -MF effects/$(DEPDIR)/audacity-ChangeSpeed.Tpo -c -o effects/audacity-ChangeSpeed.o `test -f 'effects/ChangeSpeed.cpp' || echo '$(srcdir)/'`effects/ChangeSpeed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangeSpeed.Tpo effects/$(DEPDIR)/audacity-ChangeSpeed.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangeSpeed.cpp' object='effects/audacity-ChangeSpeed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangeSpeed.o `test -f 'effects/ChangeSpeed.cpp' || echo '$(srcdir)/'`effects/ChangeSpeed.cpp

effects/audacity-ChangeSpeed.obj: effects/ChangeSpeed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangeSpeed.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ChangeSpeed.Tpo -c -o effects/audacity-ChangeSpeed.obj `if test -f 'effects/ChangeSpeed.cpp'; then $(CYGPATH_W) 'effects/ChangeSpeed.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangeSpeed.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangeSpeed.Tpo effects/$(DEPDIR)/audacity-ChangeSpeed.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangeSpeed.cpp' object='effects/audacity-ChangeSpeed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangeSpeed.obj `if test -f 'effects/ChangeSpeed.cpp'; then $(CYGPATH_W) 'effects/ChangeSpeed.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangeSpeed.cpp'; fi`

effects/audacity-ChangeTempo.o: effects/ChangeTempo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangeTempo.o -MD -MP -MF effects/$(DEPDIR)/audacity-ChangeTempo.Tpo -c -o effects/audacity-ChangeTempo.o `test -f 'effects/ChangeTempo.cpp' || echo '$(srcdir)/'`effects/ChangeTempo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangeTempo.Tpo effects/$(DEPDIR)/audacity-ChangeTempo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangeTempo.cpp' object='effects/audacity-ChangeTempo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangeTempo.o `test -f 'effects/ChangeTempo.cpp' || echo '$(srcdir)/'`effects/ChangeTempo.cpp

effects/audacity-ChangeTempo.obj: effects/ChangeTempo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ChangeTempo.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ChangeTempo.Tpo -c -o effects/audacity-ChangeTempo.obj `if test -f 'effects/ChangeTempo.cpp'; then $(CYGPATH_W) 'effects/ChangeTempo.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangeTempo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ChangeTempo.Tpo effects/$(DEPDIR)/audacity-ChangeTempo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ChangeTempo.cpp' object='effects/audacity-ChangeTempo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ChangeTempo.obj `if test -f 'effects/ChangeTempo.cpp'; then $(CYGPATH_W) 'effects/ChangeTempo.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ChangeTempo.cpp'; fi`

effects/audacity-ClickRemoval.o: effects/ClickRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ClickRemoval.o -MD -MP -MF effects/$(DEPDIR)/audacity-ClickRemoval.Tpo -c -o effects/audacity-ClickRemoval.o `test -f 'effects/ClickRemoval.cpp' || echo '$(srcdir)/'`effects/ClickRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ClickRemoval.Tpo effects/$(DEPDIR)/audacity-ClickRemoval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ClickRemoval.cpp' object='effects/audacity-ClickRemoval.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ClickRemoval.o `test -f 'effects/ClickRemoval.cpp' || echo '$(srcdir)/'`effects/ClickRemoval.cpp

effects/audacity-ClickRemoval.obj: effects/ClickRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ClickRemoval.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ClickRemoval.Tpo -c -o effects/audacity-ClickRemoval.obj `if test -f 'effects/ClickRemoval.cpp'; then $(CYGPATH_W) 'effects/ClickRemoval.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ClickRemoval.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ClickRemoval.Tpo effects/$(DEPDIR)/audacity-ClickRemoval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ClickRemoval.cpp' object='effects/audacity-ClickRemoval.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ClickRemoval.obj `if test -f 'effects/ClickRemoval.cpp'; then $(CYGPATH_W) 'effects/ClickRemoval.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ClickRemoval.cpp'; fi`

effects/audacity-Compressor.o: effects/Compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Compressor.o -MD -MP -MF effects/$(DEPDIR)/audacity-Compressor.Tpo -c -o effects/audacity-Compressor.o `test -f 'effects/Compressor.cpp' || echo '$(srcdir)/'`effects/Compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Compressor.Tpo effects/$(DEPDIR)/audacity-Compressor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Compressor.cpp' object='effects/audacity-Compressor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Compressor.o `test -f 'effects/Compressor.cpp' || echo '$(srcdir)/'`effects/Compressor.cpp

effects/audacity-Compressor.obj: effects/Compressor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Compressor.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Compressor.Tpo -c -o effects/audacity-Compressor.obj `if test -f 'effects/Compressor.cpp'; then $(CYGPATH_W) 'effects/Compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Compressor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Compressor.Tpo effects/$(DEPDIR)/audacity-Compressor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Compressor.cpp' object='effects/audacity-Compressor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Compressor.obj `if test -f 'effects/Compressor.cpp'; then $(CYGPATH_W) 'effects/Compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Compressor.cpp'; fi`

effects/audacity-Contrast.o: effects/Contrast.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Contrast.o -MD -MP -MF effects/$(DEPDIR)/audacity-Contrast.Tpo -c -o effects/audacity-Contrast.o `test -f 'effects/Contrast.cpp' || echo '$(srcdir)/'`effects/Contrast.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Contrast.Tpo effects/$(DEPDIR)/audacity-Contrast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Contrast.cpp' object='effects/audacity-Contrast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Contrast.o `test -f 'effects/Contrast.cpp' || echo '$(srcdir)/'`effects/Contrast.cpp

effects/audacity-Contrast.obj: effects/Contrast.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Contrast.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Contrast.Tpo -c -o effects/audacity-Contrast.obj `if test -f 'effects/Contrast.cpp'; then $(CYGPATH_W) 'effects/Contrast.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Contrast.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Contrast.Tpo effects/$(DEPDIR)/audacity-Contrast.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Contrast.cpp' object='effects/audacity-Contrast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Contrast.obj `if test -f 'effects/Contrast.cpp'; then $(CYGPATH_W) 'effects/Contrast.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Contrast.cpp'; fi`

effects/audacity-DtmfGen.o: effects/DtmfGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-DtmfGen.o -MD -MP -MF effects/$(DEPDIR)/audacity-DtmfGen.Tpo -c -o effects/audacity-DtmfGen.o `test -f 'effects/DtmfGen.cpp' || echo '$(srcdir)/'`effects/DtmfGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-DtmfGen.Tpo effects/$(DEPDIR)/audacity-DtmfGen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/DtmfGen.cpp' object='effects/audacity-DtmfGen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-DtmfGen.o `test -f 'effects/DtmfGen.cpp' || echo '$(srcdir)/'`effects/DtmfGen.cpp

effects/audacity-DtmfGen.obj: effects/DtmfGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-DtmfGen.obj -MD -MP -MF effects/$(DEPDIR)/audacity-DtmfGen.Tpo -c -o effects/audacity-DtmfGen.obj `if test -f 'effects/DtmfGen.cpp'; then $(CYGPATH_W) 'effects/DtmfGen.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/DtmfGen.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-DtmfGen.Tpo effects/$(DEPDIR)/audacity-DtmfGen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/DtmfGen.cpp' object='effects/audacity-DtmfGen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-DtmfGen.obj `if test -f 'effects/DtmfGen.cpp'; then $(CYGPATH_W) 'effects/DtmfGen.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/DtmfGen.cpp'; fi`

effects/audacity-Echo.o: effects/Echo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Echo.o -MD -MP -MF effects/$(DEPDIR)/audacity-Echo.Tpo -c -o effects/audacity-Echo.o `test -f 'effects/Echo.cpp' || echo '$(srcdir)/'`effects/Echo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Echo.Tpo effects/$(DEPDIR)/audacity-Echo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Echo.cpp' object='effects/audacity-Echo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Echo.o `test -f 'effects/Echo.cpp' || echo '$(srcdir)/'`effects/Echo.cpp

effects/audacity-Echo.obj: effects/Echo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Echo.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Echo.Tpo -c -o effects/audacity-Echo.obj `if test -f 'effects/Echo.cpp'; then $(CYGPATH_W) 'effects/Echo.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Echo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Echo.Tpo effects/$(DEPDIR)/audacity-Echo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Echo.cpp' object='effects/audacity-Echo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Echo.obj `if test -f 'effects/Echo.cpp'; then $(CYGPATH_W) 'effects/Echo.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Echo.cpp'; fi`

effects/audacity-Effect.o: effects/Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Effect.o -MD -MP -MF effects/$(DEPDIR)/audacity-Effect.Tpo -c -o effects/audacity-Effect.o `test -f 'effects/Effect.cpp' || echo '$(srcdir)/'`effects/Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Effect.Tpo effects/$(DEPDIR)/audacity-Effect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Effect.cpp' object='effects/audacity-Effect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Effect.o `test -f 'effects/Effect.cpp' || echo '$(srcdir)/'`effects/Effect.cpp

effects/audacity-Effect.obj: effects/Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Effect.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Effect.Tpo -c -o effects/audacity-Effect.obj `if test -f 'effects/Effect.cpp'; then $(CYGPATH_W) 'effects/Effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Effect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Effect.Tpo effects/$(DEPDIR)/audacity-Effect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Effect.cpp' object='effects/audacity-Effect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Effect.obj `if test -f 'effects/Effect.cpp'; then $(CYGPATH_W) 'effects/Effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Effect.cpp'; fi`

effects/audacity-EffectManager.o: effects/EffectManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-EffectManager.o -MD -MP -MF effects/$(DEPDIR)/audacity-EffectManager.Tpo -c -o effects/audacity-EffectManager.o `test -f 'effects/EffectManager.cpp' || echo '$(srcdir)/'`effects/EffectManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-EffectManager.Tpo effects/$(DEPDIR)/audacity-EffectManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/EffectManager.cpp' object='effects/audacity-EffectManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-EffectManager.o `test -f 'effects/EffectManager.cpp' || echo '$(srcdir)/'`effects/EffectManager.cpp

effects/audacity-EffectManager.obj: effects/EffectManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-EffectManager.obj -MD -MP -MF effects/$(DEPDIR)/audacity-EffectManager.Tpo -c -o effects/audacity-EffectManager.obj `if test -f 'effects/EffectManager.cpp'; then $(CYGPATH_W) 'effects/EffectManager.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/EffectManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-EffectManager.Tpo effects/$(DEPDIR)/audacity-EffectManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/EffectManager.cpp' object='effects/audacity-EffectManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-EffectManager.obj `if test -f 'effects/EffectManager.cpp'; then $(CYGPATH_W) 'effects/EffectManager.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/EffectManager.cpp'; fi`

effects/audacity-EffectRack.o: effects/EffectRack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-EffectRack.o -MD -MP -MF effects/$(DEPDIR)/audacity-EffectRack.Tpo -c -o effects/audacity-EffectRack.o `test -f 'effects/EffectRack.cpp' || echo '$(srcdir)/'`effects/EffectRack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-EffectRack.Tpo effects/$(DEPDIR)/audacity-EffectRack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/EffectRack.cpp' object='effects/audacity-EffectRack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-EffectRack.o `test -f 'effects/EffectRack.cpp' || echo '$(srcdir)/'`effects/EffectRack.cpp

effects/audacity-EffectRack.obj: effects/EffectRack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-EffectRack.obj -MD -MP -MF effects/$(DEPDIR)/audacity-EffectRack.Tpo -c -o effects/audacity-EffectRack.obj `if test -f 'effects/EffectRack.cpp'; then $(CYGPATH_W) 'effects/EffectRack.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/EffectRack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-EffectRack.Tpo effects/$(DEPDIR)/audacity-EffectRack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/EffectRack.cpp' object='effects/audacity-EffectRack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-EffectRack.obj `if test -f 'effects/EffectRack.cpp'; then $(CYGPATH_W) 'effects/EffectRack.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/EffectRack.cpp'; fi`

effects/audacity-Equalization.o: effects/Equalization.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Equalization.o -MD -MP -MF effects/$(DEPDIR)/audacity-Equalization.Tpo -c -o effects/audacity-Equalization.o `test -f 'effects/Equalization.cpp' || echo '$(srcdir)/'`effects/Equalization.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Equalization.Tpo effects/$(DEPDIR)/audacity-Equalization.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Equalization.cpp' object='effects/audacity-Equalization.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Equalization.o `test -f 'effects/Equalization.cpp' || echo '$(srcdir)/'`effects/Equalization.cpp

effects/audacity-Equalization.obj: effects/Equalization.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Equalization.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Equalization.Tpo -c -o effects/audacity-Equalization.obj `if test -f 'effects/Equalization.cpp'; then $(CYGPATH_W) 'effects/Equalization.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Equalization.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Equalization.Tpo effects/$(DEPDIR)/audacity-Equalization.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Equalization.cpp' object='effects/audacity-Equalization.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Equalization.obj `if test -f 'effects/Equalization.cpp'; then $(CYGPATH_W) 'effects/Equalization.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Equalization.cpp'; fi`

effects/audacity-Equalization48x.o: effects/Equalization48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Equalization48x.o -MD -MP -MF effects/$(DEPDIR)/audacity-Equalization48x.Tpo -c -o effects/audacity-Equalization48x.o `test -f 'effects/Equalization48x.cpp' || echo '$(srcdir)/'`effects/Equalization48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Equalization48x.Tpo effects/$(DEPDIR)/audacity-Equalization48x.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Equalization48x.cpp' object='effects/audacity-Equalization48x.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Equalization48x.o `test -f 'effects/Equalization48x.cpp' || echo '$(srcdir)/'`effects/Equalization48x.cpp

effects/audacity-Equalization48x.obj: effects/Equalization48x.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Equalization48x.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Equalization48x.Tpo -c -o effects/audacity-Equalization48x.obj `if test -f 'effects/Equalization48x.cpp'; then $(CYGPATH_W) 'effects/Equalization48x.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Equalization48x.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Equalization48x.Tpo effects/$(DEPDIR)/audacity-Equalization48x.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Equalization48x.cpp' object='effects/audacity-Equalization48x.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Equalization48x.obj `if test -f 'effects/Equalization48x.cpp'; then $(CYGPATH_W) 'effects/Equalization48x.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Equalization48x.cpp'; fi`

effects/audacity-Fade.o: effects/Fade.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Fade.o -MD -MP -MF effects/$(DEPDIR)/audacity-Fade.Tpo -c -o effects/audacity-Fade.o `test -f 'effects/Fade.cpp' || echo '$(srcdir)/'`effects/Fade.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Fade.Tpo effects/$(DEPDIR)/audacity-Fade.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Fade.cpp' object='effects/audacity-Fade.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Fade.o `test -f 'effects/Fade.cpp' || echo '$(srcdir)/'`effects/Fade.cpp

effects/audacity-Fade.obj: effects/Fade.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Fade.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Fade.Tpo -c -o effects/audacity-Fade.obj `if test -f 'effects/Fade.cpp'; then $(CYGPATH_W) 'effects/Fade.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Fade.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Fade.Tpo effects/$(DEPDIR)/audacity-Fade.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Fade.cpp' object='effects/audacity-Fade.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Fade.obj `if test -f 'effects/Fade.cpp'; then $(CYGPATH_W) 'effects/Fade.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Fade.cpp'; fi`

effects/audacity-FindClipping.o: effects/FindClipping.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-FindClipping.o -MD -MP -MF effects/$(DEPDIR)/audacity-FindClipping.Tpo -c -o effects/audacity-FindClipping.o `test -f 'effects/FindClipping.cpp' || echo '$(srcdir)/'`effects/FindClipping.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-FindClipping.Tpo effects/$(DEPDIR)/audacity-FindClipping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/FindClipping.cpp' object='effects/audacity-FindClipping.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-FindClipping.o `test -f 'effects/FindClipping.cpp' || echo '$(srcdir)/'`effects/FindClipping.cpp

effects/audacity-FindClipping.obj: effects/FindClipping.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-FindClipping.obj -MD -MP -MF effects/$(DEPDIR)/audacity-FindClipping.Tpo -c -o effects/audacity-FindClipping.obj `if test -f 'effects/FindClipping.cpp'; then $(CYGPATH_W) 'effects/FindClipping.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/FindClipping.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-FindClipping.Tpo effects/$(DEPDIR)/audacity-FindClipping.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/FindClipping.cpp' object='effects/audacity-FindClipping.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-FindClipping.obj `if test -f 'effects/FindClipping.cpp'; then $(CYGPATH_W) 'effects/FindClipping.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/FindClipping.cpp'; fi`

effects/audacity-Generator.o: effects/Generator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Generator.o -MD -MP -MF effects/$(DEPDIR)/audacity-Generator.Tpo -c -o effects/audacity-Generator.o `test -f 'effects/Generator.cpp' || echo '$(srcdir)/'`effects/Generator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Generator.Tpo effects/$(DEPDIR)/audacity-Generator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Generator.cpp' object='effects/audacity-Generator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Generator.o `test -f 'effects/Generator.cpp' || echo '$(srcdir)/'`effects/Generator.cpp

effects/audacity-Generator.obj: effects/Generator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Generator.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Generator.Tpo -c -o effects/audacity-Generator.obj `if test -f 'effects/Generator.cpp'; then $(CYGPATH_W) 'effects/Generator.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Generator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Generator.Tpo effects/$(DEPDIR)/audacity-Generator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Generator.cpp' object='effects/audacity-Generator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Generator.obj `if test -f 'effects/Generator.cpp'; then $(CYGPATH_W) 'effects/Generator.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Generator.cpp'; fi`

effects/audacity-Invert.o: effects/Invert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Invert.o -MD -MP -MF effects/$(DEPDIR)/audacity-Invert.Tpo -c -o effects/audacity-Invert.o `test -f 'effects/Invert.cpp' || echo '$(srcdir)/'`effects/Invert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Invert.Tpo effects/$(DEPDIR)/audacity-Invert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Invert.cpp' object='effects/audacity-Invert.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Invert.o `test -f 'effects/Invert.cpp' || echo '$(srcdir)/'`effects/Invert.cpp

effects/audacity-Invert.obj: effects/Invert.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Invert.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Invert.Tpo -c -o effects/audacity-Invert.obj `if test -f 'effects/Invert.cpp'; then $(CYGPATH_W) 'effects/Invert.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Invert.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Invert.Tpo effects/$(DEPDIR)/audacity-Invert.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Invert.cpp' object='effects/audacity-Invert.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Invert.obj `if test -f 'effects/Invert.cpp'; then $(CYGPATH_W) 'effects/Invert.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Invert.cpp'; fi`

effects/audacity-Leveller.o: effects/Leveller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Leveller.o -MD -MP -MF effects/$(DEPDIR)/audacity-Leveller.Tpo -c -o effects/audacity-Leveller.o `test -f 'effects/Leveller.cpp' || echo '$(srcdir)/'`effects/Leveller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Leveller.Tpo effects/$(DEPDIR)/audacity-Leveller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Leveller.cpp' object='effects/audacity-Leveller.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Leveller.o `test -f 'effects/Leveller.cpp' || echo '$(srcdir)/'`effects/Leveller.cpp

effects/audacity-Leveller.obj: effects/Leveller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Leveller.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Leveller.Tpo -c -o effects/audacity-Leveller.obj `if test -f 'effects/Leveller.cpp'; then $(CYGPATH_W) 'effects/Leveller.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Leveller.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Leveller.Tpo effects/$(DEPDIR)/audacity-Leveller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Leveller.cpp' object='effects/audacity-Leveller.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Leveller.obj `if test -f 'effects/Leveller.cpp'; then $(CYGPATH_W) 'effects/Leveller.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Leveller.cpp'; fi`

effects/audacity-LoadEffects.o: effects/LoadEffects.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-LoadEffects.o -MD -MP -MF effects/$(DEPDIR)/audacity-LoadEffects.Tpo -c -o effects/audacity-LoadEffects.o `test -f 'effects/LoadEffects.cpp' || echo '$(srcdir)/'`effects/LoadEffects.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-LoadEffects.Tpo effects/$(DEPDIR)/audacity-LoadEffects.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/LoadEffects.cpp' object='effects/audacity-LoadEffects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-LoadEffects.o `test -f 'effects/LoadEffects.cpp' || echo '$(srcdir)/'`effects/LoadEffects.cpp

effects/audacity-LoadEffects.obj: effects/LoadEffects.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-LoadEffects.obj -MD -MP -MF effects/$(DEPDIR)/audacity-LoadEffects.Tpo -c -o effects/audacity-LoadEffects.obj `if test -f 'effects/LoadEffects.cpp'; then $(CYGPATH_W) 'effects/LoadEffects.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/LoadEffects.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-LoadEffects.Tpo effects/$(DEPDIR)/audacity-LoadEffects.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/LoadEffects.cpp' object='effects/audacity-LoadEffects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-LoadEffects.obj `if test -f 'effects/LoadEffects.cpp'; then $(CYGPATH_W) 'effects/LoadEffects.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/LoadEffects.cpp'; fi`

effects/audacity-Noise.o: effects/Noise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Noise.o -MD -MP -MF effects/$(DEPDIR)/audacity-Noise.Tpo -c -o effects/audacity-Noise.o `test -f 'effects/Noise.cpp' || echo '$(srcdir)/'`effects/Noise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Noise.Tpo effects/$(DEPDIR)/audacity-Noise.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Noise.cpp' object='effects/audacity-Noise.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Noise.o `test -f 'effects/Noise.cpp' || echo '$(srcdir)/'`effects/Noise.cpp

effects/audacity-Noise.obj: effects/Noise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Noise.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Noise.Tpo -c -o effects/audacity-Noise.obj `if test -f 'effects/Noise.cpp'; then $(CYGPATH_W) 'effects/Noise.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Noise.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Noise.Tpo effects/$(DEPDIR)/audacity-Noise.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Noise.cpp' object='effects/audacity-Noise.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Noise.obj `if test -f 'effects/Noise.cpp'; then $(CYGPATH_W) 'effects/Noise.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Noise.cpp'; fi`

effects/audacity-NoiseReduction.o: effects/NoiseReduction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-NoiseReduction.o -MD -MP -MF effects/$(DEPDIR)/audacity-NoiseReduction.Tpo -c -o effects/audacity-NoiseReduction.o `test -f 'effects/NoiseReduction.cpp' || echo '$(srcdir)/'`effects/NoiseReduction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-NoiseReduction.Tpo effects/$(DEPDIR)/audacity-NoiseReduction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/NoiseReduction.cpp' object='effects/audacity-NoiseReduction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-NoiseReduction.o `test -f 'effects/NoiseReduction.cpp' || echo '$(srcdir)/'`effects/NoiseReduction.cpp

effects/audacity-NoiseReduction.obj: effects/NoiseReduction.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-NoiseReduction.obj -MD -MP -MF effects/$(DEPDIR)/audacity-NoiseReduction.Tpo -c -o effects/audacity-NoiseReduction.obj `if test -f 'effects/NoiseReduction.cpp'; then $(CYGPATH_W) 'effects/NoiseReduction.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/NoiseReduction.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-NoiseReduction.Tpo effects/$(DEPDIR)/audacity-NoiseReduction.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/NoiseReduction.cpp' object='effects/audacity-NoiseReduction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-NoiseReduction.obj `if test -f 'effects/NoiseReduction.cpp'; then $(CYGPATH_W) 'effects/NoiseReduction.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/NoiseReduction.cpp'; fi`

effects/audacity-NoiseRemoval.o: effects/NoiseRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-NoiseRemoval.o -MD -MP -MF effects/$(DEPDIR)/audacity-NoiseRemoval.Tpo -c -o effects/audacity-NoiseRemoval.o `test -f 'effects/NoiseRemoval.cpp' || echo '$(srcdir)/'`effects/NoiseRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-NoiseRemoval.Tpo effects/$(DEPDIR)/audacity-NoiseRemoval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/NoiseRemoval.cpp' object='effects/audacity-NoiseRemoval.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-NoiseRemoval.o `test -f 'effects/NoiseRemoval.cpp' || echo '$(srcdir)/'`effects/NoiseRemoval.cpp

effects/audacity-NoiseRemoval.obj: effects/NoiseRemoval.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-NoiseRemoval.obj -MD -MP -MF effects/$(DEPDIR)/audacity-NoiseRemoval.Tpo -c -o effects/audacity-NoiseRemoval.obj `if test -f 'effects/NoiseRemoval.cpp'; then $(CYGPATH_W) 'effects/NoiseRemoval.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/NoiseRemoval.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-NoiseRemoval.Tpo effects/$(DEPDIR)/audacity-NoiseRemoval.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/NoiseRemoval.cpp' object='effects/audacity-NoiseRemoval.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-NoiseRemoval.obj `if test -f 'effects/NoiseRemoval.cpp'; then $(CYGPATH_W) 'effects/NoiseRemoval.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/NoiseRemoval.cpp'; fi`

effects/audacity-Normalize.o: effects/Normalize.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Normalize.o -MD -MP -MF effects/$(DEPDIR)/audacity-Normalize.Tpo -c -o effects/audacity-Normalize.o `test -f 'effects/Normalize.cpp' || echo '$(srcdir)/'`effects/Normalize.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Normalize.Tpo effects/$(DEPDIR)/audacity-Normalize.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Normalize.cpp' object='effects/audacity-Normalize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Normalize.o `test -f 'effects/Normalize.cpp' || echo '$(srcdir)/'`effects/Normalize.cpp

effects/audacity-Normalize.obj: effects/Normalize.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Normalize.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Normalize.Tpo -c -o effects/audacity-Normalize.obj `if test -f 'effects/Normalize.cpp'; then $(CYGPATH_W) 'effects/Normalize.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Normalize.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Normalize.Tpo effects/$(DEPDIR)/audacity-Normalize.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Normalize.cpp' object='effects/audacity-Normalize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Normalize.obj `if test -f 'effects/Normalize.cpp'; then $(CYGPATH_W) 'effects/Normalize.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Normalize.cpp'; fi`

effects/audacity-Paulstretch.o: effects/Paulstretch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Paulstretch.o -MD -MP -MF effects/$(DEPDIR)/audacity-Paulstretch.Tpo -c -o effects/audacity-Paulstretch.o `test -f 'effects/Paulstretch.cpp' || echo '$(srcdir)/'`effects/Paulstretch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Paulstretch.Tpo effects/$(DEPDIR)/audacity-Paulstretch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Paulstretch.cpp' object='effects/audacity-Paulstretch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Paulstretch.o `test -f 'effects/Paulstretch.cpp' || echo '$(srcdir)/'`effects/Paulstretch.cpp

effects/audacity-Paulstretch.obj: effects/Paulstretch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Paulstretch.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Paulstretch.Tpo -c -o effects/audacity-Paulstretch.obj `if test -f 'effects/Paulstretch.cpp'; then $(CYGPATH_W) 'effects/Paulstretch.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Paulstretch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Paulstretch.Tpo effects/$(DEPDIR)/audacity-Paulstretch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Paulstretch.cpp' object='effects/audacity-Paulstretch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Paulstretch.obj `if test -f 'effects/Paulstretch.cpp'; then $(CYGPATH_W) 'effects/Paulstretch.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Paulstretch.cpp'; fi`

effects/audacity-Phaser.o: effects/Phaser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Phaser.o -MD -MP -MF effects/$(DEPDIR)/audacity-Phaser.Tpo -c -o effects/audacity-Phaser.o `test -f 'effects/Phaser.cpp' || echo '$(srcdir)/'`effects/Phaser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Phaser.Tpo effects/$(DEPDIR)/audacity-Phaser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Phaser.cpp' object='effects/audacity-Phaser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Phaser.o `test -f 'effects/Phaser.cpp' || echo '$(srcdir)/'`effects/Phaser.cpp

effects/audacity-Phaser.obj: effects/Phaser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Phaser.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Phaser.Tpo -c -o effects/audacity-Phaser.obj `if test -f 'effects/Phaser.cpp'; then $(CYGPATH_W) 'effects/Phaser.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Phaser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Phaser.Tpo effects/$(DEPDIR)/audacity-Phaser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Phaser.cpp' object='effects/audacity-Phaser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Phaser.obj `if test -f 'effects/Phaser.cpp'; then $(CYGPATH_W) 'effects/Phaser.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Phaser.cpp'; fi`

effects/audacity-Repair.o: effects/Repair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Repair.o -MD -MP -MF effects/$(DEPDIR)/audacity-Repair.Tpo -c -o effects/audacity-Repair.o `test -f 'effects/Repair.cpp' || echo '$(srcdir)/'`effects/Repair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Repair.Tpo effects/$(DEPDIR)/audacity-Repair.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Repair.cpp' object='effects/audacity-Repair.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Repair.o `test -f 'effects/Repair.cpp' || echo '$(srcdir)/'`effects/Repair.cpp

effects/audacity-Repair.obj: effects/Repair.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Repair.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Repair.Tpo -c -o effects/audacity-Repair.obj `if test -f 'effects/Repair.cpp'; then $(CYGPATH_W) 'effects/Repair.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Repair.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Repair.Tpo effects/$(DEPDIR)/audacity-Repair.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Repair.cpp' object='effects/audacity-Repair.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Repair.obj `if test -f 'effects/Repair.cpp'; then $(CYGPATH_W) 'effects/Repair.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Repair.cpp'; fi`

effects/audacity-Repeat.o: effects/Repeat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Repeat.o -MD -MP -MF effects/$(DEPDIR)/audacity-Repeat.Tpo -c -o effects/audacity-Repeat.o `test -f 'effects/Repeat.cpp' || echo '$(srcdir)/'`effects/Repeat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Repeat.Tpo effects/$(DEPDIR)/audacity-Repeat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Repeat.cpp' object='effects/audacity-Repeat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Repeat.o `test -f 'effects/Repeat.cpp' || echo '$(srcdir)/'`effects/Repeat.cpp

effects/audacity-Repeat.obj: effects/Repeat.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Repeat.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Repeat.Tpo -c -o effects/audacity-Repeat.obj `if test -f 'effects/Repeat.cpp'; then $(CYGPATH_W) 'effects/Repeat.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Repeat.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Repeat.Tpo effects/$(DEPDIR)/audacity-Repeat.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Repeat.cpp' object='effects/audacity-Repeat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Repeat.obj `if test -f 'effects/Repeat.cpp'; then $(CYGPATH_W) 'effects/Repeat.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Repeat.cpp'; fi`

effects/audacity-Reverb.o: effects/Reverb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Reverb.o -MD -MP -MF effects/$(DEPDIR)/audacity-Reverb.Tpo -c -o effects/audacity-Reverb.o `test -f 'effects/Reverb.cpp' || echo '$(srcdir)/'`effects/Reverb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Reverb.Tpo effects/$(DEPDIR)/audacity-Reverb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Reverb.cpp' object='effects/audacity-Reverb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Reverb.o `test -f 'effects/Reverb.cpp' || echo '$(srcdir)/'`effects/Reverb.cpp

effects/audacity-Reverb.obj: effects/Reverb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Reverb.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Reverb.Tpo -c -o effects/audacity-Reverb.obj `if test -f 'effects/Reverb.cpp'; then $(CYGPATH_W) 'effects/Reverb.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Reverb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Reverb.Tpo effects/$(DEPDIR)/audacity-Reverb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Reverb.cpp' object='effects/audacity-Reverb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Reverb.obj `if test -f 'effects/Reverb.cpp'; then $(CYGPATH_W) 'effects/Reverb.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Reverb.cpp'; fi`

effects/audacity-Reverse.o: effects/Reverse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Reverse.o -MD -MP -MF effects/$(DEPDIR)/audacity-Reverse.Tpo -c -o effects/audacity-Reverse.o `test -f 'effects/Reverse.cpp' || echo '$(srcdir)/'`effects/Reverse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Reverse.Tpo effects/$(DEPDIR)/audacity-Reverse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Reverse.cpp' object='effects/audacity-Reverse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Reverse.o `test -f 'effects/Reverse.cpp' || echo '$(srcdir)/'`effects/Reverse.cpp

effects/audacity-Reverse.obj: effects/Reverse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Reverse.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Reverse.Tpo -c -o effects/audacity-Reverse.obj `if test -f 'effects/Reverse.cpp'; then $(CYGPATH_W) 'effects/Reverse.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Reverse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Reverse.Tpo effects/$(DEPDIR)/audacity-Reverse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Reverse.cpp' object='effects/audacity-Reverse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Reverse.obj `if test -f 'effects/Reverse.cpp'; then $(CYGPATH_W) 'effects/Reverse.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Reverse.cpp'; fi`

effects/audacity-SBSMSEffect.o: effects/SBSMSEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SBSMSEffect.o -MD -MP -MF effects/$(DEPDIR)/audacity-SBSMSEffect.Tpo -c -o effects/audacity-SBSMSEffect.o `test -f 'effects/SBSMSEffect.cpp' || echo '$(srcdir)/'`effects/SBSMSEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SBSMSEffect.Tpo effects/$(DEPDIR)/audacity-SBSMSEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SBSMSEffect.cpp' object='effects/audacity-SBSMSEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SBSMSEffect.o `test -f 'effects/SBSMSEffect.cpp' || echo '$(srcdir)/'`effects/SBSMSEffect.cpp

effects/audacity-SBSMSEffect.obj: effects/SBSMSEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SBSMSEffect.obj -MD -MP -MF effects/$(DEPDIR)/audacity-SBSMSEffect.Tpo -c -o effects/audacity-SBSMSEffect.obj `if test -f 'effects/SBSMSEffect.cpp'; then $(CYGPATH_W) 'effects/SBSMSEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SBSMSEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SBSMSEffect.Tpo effects/$(DEPDIR)/audacity-SBSMSEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SBSMSEffect.cpp' object='effects/audacity-SBSMSEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SBSMSEffect.obj `if test -f 'effects/SBSMSEffect.cpp'; then $(CYGPATH_W) 'effects/SBSMSEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SBSMSEffect.cpp'; fi`

effects/audacity-ScienFilter.o: effects/ScienFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ScienFilter.o -MD -MP -MF effects/$(DEPDIR)/audacity-ScienFilter.Tpo -c -o effects/audacity-ScienFilter.o `test -f 'effects/ScienFilter.cpp' || echo '$(srcdir)/'`effects/ScienFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ScienFilter.Tpo effects/$(DEPDIR)/audacity-ScienFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ScienFilter.cpp' object='effects/audacity-ScienFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ScienFilter.o `test -f 'effects/ScienFilter.cpp' || echo '$(srcdir)/'`effects/ScienFilter.cpp

effects/audacity-ScienFilter.obj: effects/ScienFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ScienFilter.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ScienFilter.Tpo -c -o effects/audacity-ScienFilter.obj `if test -f 'effects/ScienFilter.cpp'; then $(CYGPATH_W) 'effects/ScienFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ScienFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ScienFilter.Tpo effects/$(DEPDIR)/audacity-ScienFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ScienFilter.cpp' object='effects/audacity-ScienFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ScienFilter.obj `if test -f 'effects/ScienFilter.cpp'; then $(CYGPATH_W) 'effects/ScienFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ScienFilter.cpp'; fi`

effects/audacity-Silence.o: effects/Silence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Silence.o -MD -MP -MF effects/$(DEPDIR)/audacity-Silence.Tpo -c -o effects/audacity-Silence.o `test -f 'effects/Silence.cpp' || echo '$(srcdir)/'`effects/Silence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Silence.Tpo effects/$(DEPDIR)/audacity-Silence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Silence.cpp' object='effects/audacity-Silence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Silence.o `test -f 'effects/Silence.cpp' || echo '$(srcdir)/'`effects/Silence.cpp

effects/audacity-Silence.obj: effects/Silence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Silence.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Silence.Tpo -c -o effects/audacity-Silence.obj `if test -f 'effects/Silence.cpp'; then $(CYGPATH_W) 'effects/Silence.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Silence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Silence.Tpo effects/$(DEPDIR)/audacity-Silence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Silence.cpp' object='effects/audacity-Silence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Silence.obj `if test -f 'effects/Silence.cpp'; then $(CYGPATH_W) 'effects/Silence.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Silence.cpp'; fi`

effects/audacity-SimpleMono.o: effects/SimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SimpleMono.o -MD -MP -MF effects/$(DEPDIR)/audacity-SimpleMono.Tpo -c -o effects/audacity-SimpleMono.o `test -f 'effects/SimpleMono.cpp' || echo '$(srcdir)/'`effects/SimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SimpleMono.Tpo effects/$(DEPDIR)/audacity-SimpleMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SimpleMono.cpp' object='effects/audacity-SimpleMono.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SimpleMono.o `test -f 'effects/SimpleMono.cpp' || echo '$(srcdir)/'`effects/SimpleMono.cpp

effects/audacity-SimpleMono.obj: effects/SimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SimpleMono.obj -MD -MP -MF effects/$(DEPDIR)/audacity-SimpleMono.Tpo -c -o effects/audacity-SimpleMono.obj `if test -f 'effects/SimpleMono.cpp'; then $(CYGPATH_W) 'effects/SimpleMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SimpleMono.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SimpleMono.Tpo effects/$(DEPDIR)/audacity-SimpleMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SimpleMono.cpp' object='effects/audacity-SimpleMono.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SimpleMono.obj `if test -f 'effects/SimpleMono.cpp'; then $(CYGPATH_W) 'effects/SimpleMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SimpleMono.cpp'; fi`

effects/audacity-SoundTouchEffect.o: effects/SoundTouchEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SoundTouchEffect.o -MD -MP -MF effects/$(DEPDIR)/audacity-SoundTouchEffect.Tpo -c -o effects/audacity-SoundTouchEffect.o `test -f 'effects/SoundTouchEffect.cpp' || echo '$(srcdir)/'`effects/SoundTouchEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SoundTouchEffect.Tpo effects/$(DEPDIR)/audacity-SoundTouchEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SoundTouchEffect.cpp' object='effects/audacity-SoundTouchEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SoundTouchEffect.o `test -f 'effects/SoundTouchEffect.cpp' || echo '$(srcdir)/'`effects/SoundTouchEffect.cpp

effects/audacity-SoundTouchEffect.obj: effects/SoundTouchEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-SoundTouchEffect.obj -MD -MP -MF effects/$(DEPDIR)/audacity-SoundTouchEffect.Tpo -c -o effects/audacity-SoundTouchEffect.obj `if test -f 'effects/SoundTouchEffect.cpp'; then $(CYGPATH_W) 'effects/SoundTouchEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SoundTouchEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-SoundTouchEffect.Tpo effects/$(DEPDIR)/audacity-SoundTouchEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/SoundTouchEffect.cpp' object='effects/audacity-SoundTouchEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-SoundTouchEffect.obj `if test -f 'effects/SoundTouchEffect.cpp'; then $(CYGPATH_W) 'effects/SoundTouchEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/SoundTouchEffect.cpp'; fi`

effects/audacity-StereoToMono.o: effects/StereoToMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-StereoToMono.o -MD -MP -MF effects/$(DEPDIR)/audacity-StereoToMono.Tpo -c -o effects/audacity-StereoToMono.o `test -f 'effects/StereoToMono.cpp' || echo '$(srcdir)/'`effects/StereoToMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-StereoToMono.Tpo effects/$(DEPDIR)/audacity-StereoToMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/StereoToMono.cpp' object='effects/audacity-StereoToMono.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-StereoToMono.o `test -f 'effects/StereoToMono.cpp' || echo '$(srcdir)/'`effects/StereoToMono.cpp

effects/audacity-StereoToMono.obj: effects/StereoToMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-StereoToMono.obj -MD -MP -MF effects/$(DEPDIR)/audacity-StereoToMono.Tpo -c -o effects/audacity-StereoToMono.obj `if test -f 'effects/StereoToMono.cpp'; then $(CYGPATH_W) 'effects/StereoToMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/StereoToMono.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-StereoToMono.Tpo effects/$(DEPDIR)/audacity-StereoToMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/StereoToMono.cpp' object='effects/audacity-StereoToMono.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-StereoToMono.obj `if test -f 'effects/StereoToMono.cpp'; then $(CYGPATH_W) 'effects/StereoToMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/StereoToMono.cpp'; fi`

effects/audacity-TimeScale.o: effects/TimeScale.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TimeScale.o -MD -MP -MF effects/$(DEPDIR)/audacity-TimeScale.Tpo -c -o effects/audacity-TimeScale.o `test -f 'effects/TimeScale.cpp' || echo '$(srcdir)/'`effects/TimeScale.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TimeScale.Tpo effects/$(DEPDIR)/audacity-TimeScale.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TimeScale.cpp' object='effects/audacity-TimeScale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TimeScale.o `test -f 'effects/TimeScale.cpp' || echo '$(srcdir)/'`effects/TimeScale.cpp

effects/audacity-TimeScale.obj: effects/TimeScale.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TimeScale.obj -MD -MP -MF effects/$(DEPDIR)/audacity-TimeScale.Tpo -c -o effects/audacity-TimeScale.obj `if test -f 'effects/TimeScale.cpp'; then $(CYGPATH_W) 'effects/TimeScale.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TimeScale.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TimeScale.Tpo effects/$(DEPDIR)/audacity-TimeScale.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TimeScale.cpp' object='effects/audacity-TimeScale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TimeScale.obj `if test -f 'effects/TimeScale.cpp'; then $(CYGPATH_W) 'effects/TimeScale.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TimeScale.cpp'; fi`

effects/audacity-TimeWarper.o: effects/TimeWarper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TimeWarper.o -MD -MP -MF effects/$(DEPDIR)/audacity-TimeWarper.Tpo -c -o effects/audacity-TimeWarper.o `test -f 'effects/TimeWarper.cpp' || echo '$(srcdir)/'`effects/TimeWarper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TimeWarper.Tpo effects/$(DEPDIR)/audacity-TimeWarper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TimeWarper.cpp' object='effects/audacity-TimeWarper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TimeWarper.o `test -f 'effects/TimeWarper.cpp' || echo '$(srcdir)/'`effects/TimeWarper.cpp

effects/audacity-TimeWarper.obj: effects/TimeWarper.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TimeWarper.obj -MD -MP -MF effects/$(DEPDIR)/audacity-TimeWarper.Tpo -c -o effects/audacity-TimeWarper.obj `if test -f 'effects/TimeWarper.cpp'; then $(CYGPATH_W) 'effects/TimeWarper.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TimeWarper.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TimeWarper.Tpo effects/$(DEPDIR)/audacity-TimeWarper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TimeWarper.cpp' object='effects/audacity-TimeWarper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TimeWarper.obj `if test -f 'effects/TimeWarper.cpp'; then $(CYGPATH_W) 'effects/TimeWarper.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TimeWarper.cpp'; fi`

effects/audacity-ToneGen.o: effects/ToneGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ToneGen.o -MD -MP -MF effects/$(DEPDIR)/audacity-ToneGen.Tpo -c -o effects/audacity-ToneGen.o `test -f 'effects/ToneGen.cpp' || echo '$(srcdir)/'`effects/ToneGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ToneGen.Tpo effects/$(DEPDIR)/audacity-ToneGen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ToneGen.cpp' object='effects/audacity-ToneGen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ToneGen.o `test -f 'effects/ToneGen.cpp' || echo '$(srcdir)/'`effects/ToneGen.cpp

effects/audacity-ToneGen.obj: effects/ToneGen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-ToneGen.obj -MD -MP -MF effects/$(DEPDIR)/audacity-ToneGen.Tpo -c -o effects/audacity-ToneGen.obj `if test -f 'effects/ToneGen.cpp'; then $(CYGPATH_W) 'effects/ToneGen.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ToneGen.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-ToneGen.Tpo effects/$(DEPDIR)/audacity-ToneGen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ToneGen.cpp' object='effects/audacity-ToneGen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-ToneGen.obj `if test -f 'effects/ToneGen.cpp'; then $(CYGPATH_W) 'effects/ToneGen.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ToneGen.cpp'; fi`

effects/audacity-TruncSilence.o: effects/TruncSilence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TruncSilence.o -MD -MP -MF effects/$(DEPDIR)/audacity-TruncSilence.Tpo -c -o effects/audacity-TruncSilence.o `test -f 'effects/TruncSilence.cpp' || echo '$(srcdir)/'`effects/TruncSilence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TruncSilence.Tpo effects/$(DEPDIR)/audacity-TruncSilence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TruncSilence.cpp' object='effects/audacity-TruncSilence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TruncSilence.o `test -f 'effects/TruncSilence.cpp' || echo '$(srcdir)/'`effects/TruncSilence.cpp

effects/audacity-TruncSilence.obj: effects/TruncSilence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TruncSilence.obj -MD -MP -MF effects/$(DEPDIR)/audacity-TruncSilence.Tpo -c -o effects/audacity-TruncSilence.obj `if test -f 'effects/TruncSilence.cpp'; then $(CYGPATH_W) 'effects/TruncSilence.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TruncSilence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TruncSilence.Tpo effects/$(DEPDIR)/audacity-TruncSilence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TruncSilence.cpp' object='effects/audacity-TruncSilence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TruncSilence.obj `if test -f 'effects/TruncSilence.cpp'; then $(CYGPATH_W) 'effects/TruncSilence.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TruncSilence.cpp'; fi`

effects/audacity-TwoPassSimpleMono.o: effects/TwoPassSimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TwoPassSimpleMono.o -MD -MP -MF effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Tpo -c -o effects/audacity-TwoPassSimpleMono.o `test -f 'effects/TwoPassSimpleMono.cpp' || echo '$(srcdir)/'`effects/TwoPassSimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Tpo effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TwoPassSimpleMono.cpp' object='effects/audacity-TwoPassSimpleMono.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TwoPassSimpleMono.o `test -f 'effects/TwoPassSimpleMono.cpp' || echo '$(srcdir)/'`effects/TwoPassSimpleMono.cpp

effects/audacity-TwoPassSimpleMono.obj: effects/TwoPassSimpleMono.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-TwoPassSimpleMono.obj -MD -MP -MF effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Tpo -c -o effects/audacity-TwoPassSimpleMono.obj `if test -f 'effects/TwoPassSimpleMono.cpp'; then $(CYGPATH_W) 'effects/TwoPassSimpleMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TwoPassSimpleMono.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Tpo effects/$(DEPDIR)/audacity-TwoPassSimpleMono.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/TwoPassSimpleMono.cpp' object='effects/audacity-TwoPassSimpleMono.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-TwoPassSimpleMono.obj `if test -f 'effects/TwoPassSimpleMono.cpp'; then $(CYGPATH_W) 'effects/TwoPassSimpleMono.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/TwoPassSimpleMono.cpp'; fi`

effects/audacity-Wahwah.o: effects/Wahwah.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Wahwah.o -MD -MP -MF effects/$(DEPDIR)/audacity-Wahwah.Tpo -c -o effects/audacity-Wahwah.o `test -f 'effects/Wahwah.cpp' || echo '$(srcdir)/'`effects/Wahwah.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Wahwah.Tpo effects/$(DEPDIR)/audacity-Wahwah.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Wahwah.cpp' object='effects/audacity-Wahwah.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Wahwah.o `test -f 'effects/Wahwah.cpp' || echo '$(srcdir)/'`effects/Wahwah.cpp

effects/audacity-Wahwah.obj: effects/Wahwah.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audacity-Wahwah.obj -MD -MP -MF effects/$(DEPDIR)/audacity-Wahwah.Tpo -c -o effects/audacity-Wahwah.obj `if test -f 'effects/Wahwah.cpp'; then $(CYGPATH_W) 'effects/Wahwah.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Wahwah.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/$(DEPDIR)/audacity-Wahwah.Tpo effects/$(DEPDIR)/audacity-Wahwah.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/Wahwah.cpp' object='effects/audacity-Wahwah.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audacity-Wahwah.obj `if test -f 'effects/Wahwah.cpp'; then $(CYGPATH_W) 'effects/Wahwah.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/Wahwah.cpp'; fi`

export/audacity-Export.o: export/Export.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-Export.o -MD -MP -MF export/$(DEPDIR)/audacity-Export.Tpo -c -o export/audacity-Export.o `test -f 'export/Export.cpp' || echo '$(srcdir)/'`export/Export.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-Export.Tpo export/$(DEPDIR)/audacity-Export.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/Export.cpp' object='export/audacity-Export.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-Export.o `test -f 'export/Export.cpp' || echo '$(srcdir)/'`export/Export.cpp

export/audacity-Export.obj: export/Export.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-Export.obj -MD -MP -MF export/$(DEPDIR)/audacity-Export.Tpo -c -o export/audacity-Export.obj `if test -f 'export/Export.cpp'; then $(CYGPATH_W) 'export/Export.cpp'; else $(CYGPATH_W) '$(srcdir)/export/Export.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-Export.Tpo export/$(DEPDIR)/audacity-Export.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/Export.cpp' object='export/audacity-Export.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-Export.obj `if test -f 'export/Export.cpp'; then $(CYGPATH_W) 'export/Export.cpp'; else $(CYGPATH_W) '$(srcdir)/export/Export.cpp'; fi`

export/audacity-ExportCL.o: export/ExportCL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportCL.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportCL.Tpo -c -o export/audacity-ExportCL.o `test -f 'export/ExportCL.cpp' || echo '$(srcdir)/'`export/ExportCL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportCL.Tpo export/$(DEPDIR)/audacity-ExportCL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportCL.cpp' object='export/audacity-ExportCL.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportCL.o `test -f 'export/ExportCL.cpp' || echo '$(srcdir)/'`export/ExportCL.cpp

export/audacity-ExportCL.obj: export/ExportCL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportCL.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportCL.Tpo -c -o export/audacity-ExportCL.obj `if test -f 'export/ExportCL.cpp'; then $(CYGPATH_W) 'export/ExportCL.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportCL.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportCL.Tpo export/$(DEPDIR)/audacity-ExportCL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportCL.cpp' object='export/audacity-ExportCL.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportCL.obj `if test -f 'export/ExportCL.cpp'; then $(CYGPATH_W) 'export/ExportCL.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportCL.cpp'; fi`

export/audacity-ExportFLAC.o: export/ExportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFLAC.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportFLAC.Tpo -c -o export/audacity-ExportFLAC.o `test -f 'export/ExportFLAC.cpp' || echo '$(srcdir)/'`export/ExportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFLAC.Tpo export/$(DEPDIR)/audacity-ExportFLAC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFLAC.cpp' object='export/audacity-ExportFLAC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFLAC.o `test -f 'export/ExportFLAC.cpp' || echo '$(srcdir)/'`export/ExportFLAC.cpp

export/audacity-ExportFLAC.obj: export/ExportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFLAC.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportFLAC.Tpo -c -o export/audacity-ExportFLAC.obj `if test -f 'export/ExportFLAC.cpp'; then $(CYGPATH_W) 'export/ExportFLAC.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFLAC.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFLAC.Tpo export/$(DEPDIR)/audacity-ExportFLAC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFLAC.cpp' object='export/audacity-ExportFLAC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFLAC.obj `if test -f 'export/ExportFLAC.cpp'; then $(CYGPATH_W) 'export/ExportFLAC.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFLAC.cpp'; fi`

export/audacity-ExportMP2.o: export/ExportMP2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMP2.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportMP2.Tpo -c -o export/audacity-ExportMP2.o `test -f 'export/ExportMP2.cpp' || echo '$(srcdir)/'`export/ExportMP2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMP2.Tpo export/$(DEPDIR)/audacity-ExportMP2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMP2.cpp' object='export/audacity-ExportMP2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMP2.o `test -f 'export/ExportMP2.cpp' || echo '$(srcdir)/'`export/ExportMP2.cpp

export/audacity-ExportMP2.obj: export/ExportMP2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMP2.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportMP2.Tpo -c -o export/audacity-ExportMP2.obj `if test -f 'export/ExportMP2.cpp'; then $(CYGPATH_W) 'export/ExportMP2.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMP2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMP2.Tpo export/$(DEPDIR)/audacity-ExportMP2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMP2.cpp' object='export/audacity-ExportMP2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMP2.obj `if test -f 'export/ExportMP2.cpp'; then $(CYGPATH_W) 'export/ExportMP2.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMP2.cpp'; fi`

export/audacity-ExportMP3.o: export/ExportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMP3.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportMP3.Tpo -c -o export/audacity-ExportMP3.o `test -f 'export/ExportMP3.cpp' || echo '$(srcdir)/'`export/ExportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMP3.Tpo export/$(DEPDIR)/audacity-ExportMP3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMP3.cpp' object='export/audacity-ExportMP3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMP3.o `test -f 'export/ExportMP3.cpp' || echo '$(srcdir)/'`export/ExportMP3.cpp

export/audacity-ExportMP3.obj: export/ExportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMP3.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportMP3.Tpo -c -o export/audacity-ExportMP3.obj `if test -f 'export/ExportMP3.cpp'; then $(CYGPATH_W) 'export/ExportMP3.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMP3.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMP3.Tpo export/$(DEPDIR)/audacity-ExportMP3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMP3.cpp' object='export/audacity-ExportMP3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMP3.obj `if test -f 'export/ExportMP3.cpp'; then $(CYGPATH_W) 'export/ExportMP3.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMP3.cpp'; fi`

export/audacity-ExportMultiple.o: export/ExportMultiple.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMultiple.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportMultiple.Tpo -c -o export/audacity-ExportMultiple.o `test -f 'export/ExportMultiple.cpp' || echo '$(srcdir)/'`export/ExportMultiple.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMultiple.Tpo export/$(DEPDIR)/audacity-ExportMultiple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMultiple.cpp' object='export/audacity-ExportMultiple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMultiple.o `test -f 'export/ExportMultiple.cpp' || echo '$(srcdir)/'`export/ExportMultiple.cpp

export/audacity-ExportMultiple.obj: export/ExportMultiple.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportMultiple.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportMultiple.Tpo -c -o export/audacity-ExportMultiple.obj `if test -f 'export/ExportMultiple.cpp'; then $(CYGPATH_W) 'export/ExportMultiple.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMultiple.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportMultiple.Tpo export/$(DEPDIR)/audacity-ExportMultiple.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportMultiple.cpp' object='export/audacity-ExportMultiple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportMultiple.obj `if test -f 'export/ExportMultiple.cpp'; then $(CYGPATH_W) 'export/ExportMultiple.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportMultiple.cpp'; fi`

export/audacity-ExportOGG.o: export/ExportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportOGG.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportOGG.Tpo -c -o export/audacity-ExportOGG.o `test -f 'export/ExportOGG.cpp' || echo '$(srcdir)/'`export/ExportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportOGG.Tpo export/$(DEPDIR)/audacity-ExportOGG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportOGG.cpp' object='export/audacity-ExportOGG.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportOGG.o `test -f 'export/ExportOGG.cpp' || echo '$(srcdir)/'`export/ExportOGG.cpp

export/audacity-ExportOGG.obj: export/ExportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportOGG.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportOGG.Tpo -c -o export/audacity-ExportOGG.obj `if test -f 'export/ExportOGG.cpp'; then $(CYGPATH_W) 'export/ExportOGG.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportOGG.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportOGG.Tpo export/$(DEPDIR)/audacity-ExportOGG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportOGG.cpp' object='export/audacity-ExportOGG.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportOGG.obj `if test -f 'export/ExportOGG.cpp'; then $(CYGPATH_W) 'export/ExportOGG.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportOGG.cpp'; fi`

export/audacity-ExportPCM.o: export/ExportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportPCM.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportPCM.Tpo -c -o export/audacity-ExportPCM.o `test -f 'export/ExportPCM.cpp' || echo '$(srcdir)/'`export/ExportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportPCM.Tpo export/$(DEPDIR)/audacity-ExportPCM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportPCM.cpp' object='export/audacity-ExportPCM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportPCM.o `test -f 'export/ExportPCM.cpp' || echo '$(srcdir)/'`export/ExportPCM.cpp

export/audacity-ExportPCM.obj: export/ExportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportPCM.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportPCM.Tpo -c -o export/audacity-ExportPCM.obj `if test -f 'export/ExportPCM.cpp'; then $(CYGPATH_W) 'export/ExportPCM.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportPCM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportPCM.Tpo export/$(DEPDIR)/audacity-ExportPCM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportPCM.cpp' object='export/audacity-ExportPCM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportPCM.obj `if test -f 'export/ExportPCM.cpp'; then $(CYGPATH_W) 'export/ExportPCM.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportPCM.cpp'; fi`

import/audacity-Import.o: import/Import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-Import.o -MD -MP -MF import/$(DEPDIR)/audacity-Import.Tpo -c -o import/audacity-Import.o `test -f 'import/Import.cpp' || echo '$(srcdir)/'`import/Import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-Import.Tpo import/$(DEPDIR)/audacity-Import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/Import.cpp' object='import/audacity-Import.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-Import.o `test -f 'import/Import.cpp' || echo '$(srcdir)/'`import/Import.cpp

import/audacity-Import.obj: import/Import.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-Import.obj -MD -MP -MF import/$(DEPDIR)/audacity-Import.Tpo -c -o import/audacity-Import.obj `if test -f 'import/Import.cpp'; then $(CYGPATH_W) 'import/Import.cpp'; else $(CYGPATH_W) '$(srcdir)/import/Import.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-Import.Tpo import/$(DEPDIR)/audacity-Import.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/Import.cpp' object='import/audacity-Import.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-Import.obj `if test -f 'import/Import.cpp'; then $(CYGPATH_W) 'import/Import.cpp'; else $(CYGPATH_W) '$(srcdir)/import/Import.cpp'; fi`

import/audacity-ImportFLAC.o: import/ImportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportFLAC.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportFLAC.Tpo -c -o import/audacity-ImportFLAC.o `test -f 'import/ImportFLAC.cpp' || echo '$(srcdir)/'`import/ImportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportFLAC.Tpo import/$(DEPDIR)/audacity-ImportFLAC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportFLAC.cpp' object='import/audacity-ImportFLAC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportFLAC.o `test -f 'import/ImportFLAC.cpp' || echo '$(srcdir)/'`import/ImportFLAC.cpp

import/audacity-ImportFLAC.obj: import/ImportFLAC.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportFLAC.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportFLAC.Tpo -c -o import/audacity-ImportFLAC.obj `if test -f 'import/ImportFLAC.cpp'; then $(CYGPATH_W) 'import/ImportFLAC.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportFLAC.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportFLAC.Tpo import/$(DEPDIR)/audacity-ImportFLAC.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportFLAC.cpp' object='import/audacity-ImportFLAC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportFLAC.obj `if test -f 'import/ImportFLAC.cpp'; then $(CYGPATH_W) 'import/ImportFLAC.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportFLAC.cpp'; fi`

import/audacity-ImportLOF.o: import/ImportLOF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportLOF.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportLOF.Tpo -c -o import/audacity-ImportLOF.o `test -f 'import/ImportLOF.cpp' || echo '$(srcdir)/'`import/ImportLOF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportLOF.Tpo import/$(DEPDIR)/audacity-ImportLOF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportLOF.cpp' object='import/audacity-ImportLOF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportLOF.o `test -f 'import/ImportLOF.cpp' || echo '$(srcdir)/'`import/ImportLOF.cpp

import/audacity-ImportLOF.obj: import/ImportLOF.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportLOF.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportLOF.Tpo -c -o import/audacity-ImportLOF.obj `if test -f 'import/ImportLOF.cpp'; then $(CYGPATH_W) 'import/ImportLOF.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportLOF.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportLOF.Tpo import/$(DEPDIR)/audacity-ImportLOF.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportLOF.cpp' object='import/audacity-ImportLOF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportLOF.obj `if test -f 'import/ImportLOF.cpp'; then $(CYGPATH_W) 'import/ImportLOF.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportLOF.cpp'; fi`

import/audacity-ImportMP3.o: import/ImportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportMP3.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportMP3.Tpo -c -o import/audacity-ImportMP3.o `test -f 'import/ImportMP3.cpp' || echo '$(srcdir)/'`import/ImportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportMP3.Tpo import/$(DEPDIR)/audacity-ImportMP3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportMP3.cpp' object='import/audacity-ImportMP3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportMP3.o `test -f 'import/ImportMP3.cpp' || echo '$(srcdir)/'`import/ImportMP3.cpp

import/audacity-ImportMP3.obj: import/ImportMP3.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportMP3.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportMP3.Tpo -c -o import/audacity-ImportMP3.obj `if test -f 'import/ImportMP3.cpp'; then $(CYGPATH_W) 'import/ImportMP3.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportMP3.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportMP3.Tpo import/$(DEPDIR)/audacity-ImportMP3.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportMP3.cpp' object='import/audacity-ImportMP3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportMP3.obj `if test -f 'import/ImportMP3.cpp'; then $(CYGPATH_W) 'import/ImportMP3.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportMP3.cpp'; fi`

import/audacity-ImportOGG.o: import/ImportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportOGG.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportOGG.Tpo -c -o import/audacity-ImportOGG.o `test -f 'import/ImportOGG.cpp' || echo '$(srcdir)/'`import/ImportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportOGG.Tpo import/$(DEPDIR)/audacity-ImportOGG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportOGG.cpp' object='import/audacity-ImportOGG.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportOGG.o `test -f 'import/ImportOGG.cpp' || echo '$(srcdir)/'`import/ImportOGG.cpp

import/audacity-ImportOGG.obj: import/ImportOGG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportOGG.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportOGG.Tpo -c -o import/audacity-ImportOGG.obj `if test -f 'import/ImportOGG.cpp'; then $(CYGPATH_W) 'import/ImportOGG.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportOGG.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportOGG.Tpo import/$(DEPDIR)/audacity-ImportOGG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportOGG.cpp' object='import/audacity-ImportOGG.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportOGG.obj `if test -f 'import/ImportOGG.cpp'; then $(CYGPATH_W) 'import/ImportOGG.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportOGG.cpp'; fi`

import/audacity-ImportPCM.o: import/ImportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportPCM.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportPCM.Tpo -c -o import/audacity-ImportPCM.o `test -f 'import/ImportPCM.cpp' || echo '$(srcdir)/'`import/ImportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportPCM.Tpo import/$(DEPDIR)/audacity-ImportPCM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportPCM.cpp' object='import/audacity-ImportPCM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportPCM.o `test -f 'import/ImportPCM.cpp' || echo '$(srcdir)/'`import/ImportPCM.cpp

import/audacity-ImportPCM.obj: import/ImportPCM.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportPCM.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportPCM.Tpo -c -o import/audacity-ImportPCM.obj `if test -f 'import/ImportPCM.cpp'; then $(CYGPATH_W) 'import/ImportPCM.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportPCM.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportPCM.Tpo import/$(DEPDIR)/audacity-ImportPCM.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportPCM.cpp' object='import/audacity-ImportPCM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportPCM.obj `if test -f 'import/ImportPCM.cpp'; then $(CYGPATH_W) 'import/ImportPCM.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportPCM.cpp'; fi`

import/audacity-ImportRaw.o: import/ImportRaw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportRaw.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportRaw.Tpo -c -o import/audacity-ImportRaw.o `test -f 'import/ImportRaw.cpp' || echo '$(srcdir)/'`import/ImportRaw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportRaw.Tpo import/$(DEPDIR)/audacity-ImportRaw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportRaw.cpp' object='import/audacity-ImportRaw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportRaw.o `test -f 'import/ImportRaw.cpp' || echo '$(srcdir)/'`import/ImportRaw.cpp

import/audacity-ImportRaw.obj: import/ImportRaw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportRaw.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportRaw.Tpo -c -o import/audacity-ImportRaw.obj `if test -f 'import/ImportRaw.cpp'; then $(CYGPATH_W) 'import/ImportRaw.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportRaw.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportRaw.Tpo import/$(DEPDIR)/audacity-ImportRaw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportRaw.cpp' object='import/audacity-ImportRaw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportRaw.obj `if test -f 'import/ImportRaw.cpp'; then $(CYGPATH_W) 'import/ImportRaw.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportRaw.cpp'; fi`

import/audacity-RawAudioGuess.o: import/RawAudioGuess.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-RawAudioGuess.o -MD -MP -MF import/$(DEPDIR)/audacity-RawAudioGuess.Tpo -c -o import/audacity-RawAudioGuess.o `test -f 'import/RawAudioGuess.cpp' || echo '$(srcdir)/'`import/RawAudioGuess.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-RawAudioGuess.Tpo import/$(DEPDIR)/audacity-RawAudioGuess.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/RawAudioGuess.cpp' object='import/audacity-RawAudioGuess.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-RawAudioGuess.o `test -f 'import/RawAudioGuess.cpp' || echo '$(srcdir)/'`import/RawAudioGuess.cpp

import/audacity-RawAudioGuess.obj: import/RawAudioGuess.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-RawAudioGuess.obj -MD -MP -MF import/$(DEPDIR)/audacity-RawAudioGuess.Tpo -c -o import/audacity-RawAudioGuess.obj `if test -f 'import/RawAudioGuess.cpp'; then $(CYGPATH_W) 'import/RawAudioGuess.cpp'; else $(CYGPATH_W) '$(srcdir)/import/RawAudioGuess.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-RawAudioGuess.Tpo import/$(DEPDIR)/audacity-RawAudioGuess.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/RawAudioGuess.cpp' object='import/audacity-RawAudioGuess.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-RawAudioGuess.obj `if test -f 'import/RawAudioGuess.cpp'; then $(CYGPATH_W) 'import/RawAudioGuess.cpp'; else $(CYGPATH_W) '$(srcdir)/import/RawAudioGuess.cpp'; fi`

import/audacity-FormatClassifier.o: import/FormatClassifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-FormatClassifier.o -MD -MP -MF import/$(DEPDIR)/audacity-FormatClassifier.Tpo -c -o import/audacity-FormatClassifier.o `test -f 'import/FormatClassifier.cpp' || echo '$(srcdir)/'`import/FormatClassifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-FormatClassifier.Tpo import/$(DEPDIR)/audacity-FormatClassifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/FormatClassifier.cpp' object='import/audacity-FormatClassifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-FormatClassifier.o `test -f 'import/FormatClassifier.cpp' || echo '$(srcdir)/'`import/FormatClassifier.cpp

import/audacity-FormatClassifier.obj: import/FormatClassifier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-FormatClassifier.obj -MD -MP -MF import/$(DEPDIR)/audacity-FormatClassifier.Tpo -c -o import/audacity-FormatClassifier.obj `if test -f 'import/FormatClassifier.cpp'; then $(CYGPATH_W) 'import/FormatClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/import/FormatClassifier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-FormatClassifier.Tpo import/$(DEPDIR)/audacity-FormatClassifier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/FormatClassifier.cpp' object='import/audacity-FormatClassifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-FormatClassifier.obj `if test -f 'import/FormatClassifier.cpp'; then $(CYGPATH_W) 'import/FormatClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/import/FormatClassifier.cpp'; fi`

import/audacity-MultiFormatReader.o: import/MultiFormatReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-MultiFormatReader.o -MD -MP -MF import/$(DEPDIR)/audacity-MultiFormatReader.Tpo -c -o import/audacity-MultiFormatReader.o `test -f 'import/MultiFormatReader.cpp' || echo '$(srcdir)/'`import/MultiFormatReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-MultiFormatReader.Tpo import/$(DEPDIR)/audacity-MultiFormatReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/MultiFormatReader.cpp' object='import/audacity-MultiFormatReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-MultiFormatReader.o `test -f 'import/MultiFormatReader.cpp' || echo '$(srcdir)/'`import/MultiFormatReader.cpp

import/audacity-MultiFormatReader.obj: import/MultiFormatReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-MultiFormatReader.obj -MD -MP -MF import/$(DEPDIR)/audacity-MultiFormatReader.Tpo -c -o import/audacity-MultiFormatReader.obj `if test -f 'import/MultiFormatReader.cpp'; then $(CYGPATH_W) 'import/MultiFormatReader.cpp'; else $(CYGPATH_W) '$(srcdir)/import/MultiFormatReader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-MultiFormatReader.Tpo import/$(DEPDIR)/audacity-MultiFormatReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/MultiFormatReader.cpp' object='import/audacity-MultiFormatReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-MultiFormatReader.obj `if test -f 'import/MultiFormatReader.cpp'; then $(CYGPATH_W) 'import/MultiFormatReader.cpp'; else $(CYGPATH_W) '$(srcdir)/import/MultiFormatReader.cpp'; fi`

import/audacity-SpecPowerMeter.o: import/SpecPowerMeter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-SpecPowerMeter.o -MD -MP -MF import/$(DEPDIR)/audacity-SpecPowerMeter.Tpo -c -o import/audacity-SpecPowerMeter.o `test -f 'import/SpecPowerMeter.cpp' || echo '$(srcdir)/'`import/SpecPowerMeter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-SpecPowerMeter.Tpo import/$(DEPDIR)/audacity-SpecPowerMeter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/SpecPowerMeter.cpp' object='import/audacity-SpecPowerMeter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-SpecPowerMeter.o `test -f 'import/SpecPowerMeter.cpp' || echo '$(srcdir)/'`import/SpecPowerMeter.cpp

import/audacity-SpecPowerMeter.obj: import/SpecPowerMeter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-SpecPowerMeter.obj -MD -MP -MF import/$(DEPDIR)/audacity-SpecPowerMeter.Tpo -c -o import/audacity-SpecPowerMeter.obj `if test -f 'import/SpecPowerMeter.cpp'; then $(CYGPATH_W) 'import/SpecPowerMeter.cpp'; else $(CYGPATH_W) '$(srcdir)/import/SpecPowerMeter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-SpecPowerMeter.Tpo import/$(DEPDIR)/audacity-SpecPowerMeter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/SpecPowerMeter.cpp' object='import/audacity-SpecPowerMeter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-SpecPowerMeter.obj `if test -f 'import/SpecPowerMeter.cpp'; then $(CYGPATH_W) 'import/SpecPowerMeter.cpp'; else $(CYGPATH_W) '$(srcdir)/import/SpecPowerMeter.cpp'; fi`

ondemand/audacity-ODComputeSummaryTask.o: ondemand/ODComputeSummaryTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODComputeSummaryTask.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Tpo -c -o ondemand/audacity-ODComputeSummaryTask.o `test -f 'ondemand/ODComputeSummaryTask.cpp' || echo '$(srcdir)/'`ondemand/ODComputeSummaryTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Tpo ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODComputeSummaryTask.cpp' object='ondemand/audacity-ODComputeSummaryTask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODComputeSummaryTask.o `test -f 'ondemand/ODComputeSummaryTask.cpp' || echo '$(srcdir)/'`ondemand/ODComputeSummaryTask.cpp

ondemand/audacity-ODComputeSummaryTask.obj: ondemand/ODComputeSummaryTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODComputeSummaryTask.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Tpo -c -o ondemand/audacity-ODComputeSummaryTask.obj `if test -f 'ondemand/ODComputeSummaryTask.cpp'; then $(CYGPATH_W) 'ondemand/ODComputeSummaryTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODComputeSummaryTask.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Tpo ondemand/$(DEPDIR)/audacity-ODComputeSummaryTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODComputeSummaryTask.cpp' object='ondemand/audacity-ODComputeSummaryTask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODComputeSummaryTask.obj `if test -f 'ondemand/ODComputeSummaryTask.cpp'; then $(CYGPATH_W) 'ondemand/ODComputeSummaryTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODComputeSummaryTask.cpp'; fi`

ondemand/audacity-ODDecodeFFmpegTask.o: ondemand/ODDecodeFFmpegTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeFFmpegTask.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Tpo -c -o ondemand/audacity-ODDecodeFFmpegTask.o `test -f 'ondemand/ODDecodeFFmpegTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeFFmpegTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeFFmpegTask.cpp' object='ondemand/audacity-ODDecodeFFmpegTask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeFFmpegTask.o `test -f 'ondemand/ODDecodeFFmpegTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeFFmpegTask.cpp

ondemand/audacity-ODDecodeFFmpegTask.obj: ondemand/ODDecodeFFmpegTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeFFmpegTask.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Tpo -c -o ondemand/audacity-ODDecodeFFmpegTask.obj `if test -f 'ondemand/ODDecodeFFmpegTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeFFmpegTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeFFmpegTask.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeFFmpegTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeFFmpegTask.cpp' object='ondemand/audacity-ODDecodeFFmpegTask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeFFmpegTask.obj `if test -f 'ondemand/ODDecodeFFmpegTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeFFmpegTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeFFmpegTask.cpp'; fi`

ondemand/audacity-ODDecodeTask.o: ondemand/ODDecodeTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeTask.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeTask.Tpo -c -o ondemand/audacity-ODDecodeTask.o `test -f 'ondemand/ODDecodeTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeTask.cpp' object='ondemand/audacity-ODDecodeTask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeTask.o `test -f 'ondemand/ODDecodeTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeTask.cpp

ondemand/audacity-ODDecodeTask.obj: ondemand/ODDecodeTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeTask.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeTask.Tpo -c -o ondemand/audacity-ODDecodeTask.obj `if test -f 'ondemand/ODDecodeTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeTask.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeTask.cpp' object='ondemand/audacity-ODDecodeTask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeTask.obj `if test -f 'ondemand/ODDecodeTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeTask.cpp'; fi`

ondemand/audacity-ODManager.o: ondemand/ODManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODManager.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODManager.Tpo -c -o ondemand/audacity-ODManager.o `test -f 'ondemand/ODManager.cpp' || echo '$(srcdir)/'`ondemand/ODManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODManager.Tpo ondemand/$(DEPDIR)/audacity-ODManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODManager.cpp' object='ondemand/audacity-ODManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODManager.o `test -f 'ondemand/ODManager.cpp' || echo '$(srcdir)/'`ondemand/ODManager.cpp

ondemand/audacity-ODManager.obj: ondemand/ODManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODManager.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODManager.Tpo -c -o ondemand/audacity-ODManager.obj `if test -f 'ondemand/ODManager.cpp'; then $(CYGPATH_W) 'ondemand/ODManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODManager.Tpo ondemand/$(DEPDIR)/audacity-ODManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODManager.cpp' object='ondemand/audacity-ODManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODManager.obj `if test -f 'ondemand/ODManager.cpp'; then $(CYGPATH_W) 'ondemand/ODManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODManager.cpp'; fi`

ondemand/audacity-ODTask.o: ondemand/ODTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODTask.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODTask.Tpo -c -o ondemand/audacity-ODTask.o `test -f 'ondemand/ODTask.cpp' || echo '$(srcdir)/'`ondemand/ODTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODTask.Tpo ondemand/$(DEPDIR)/audacity-ODTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODTask.cpp' object='ondemand/audacity-ODTask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODTask.o `test -f 'ondemand/ODTask.cpp' || echo '$(srcdir)/'`ondemand/ODTask.cpp

ondemand/audacity-ODTask.obj: ondemand/ODTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODTask.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODTask.Tpo -c -o ondemand/audacity-ODTask.obj `if test -f 'ondemand/ODTask.cpp'; then $(CYGPATH_W) 'ondemand/ODTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODTask.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODTask.Tpo ondemand/$(DEPDIR)/audacity-ODTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODTask.cpp' object='ondemand/audacity-ODTask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODTask.obj `if test -f 'ondemand/ODTask.cpp'; then $(CYGPATH_W) 'ondemand/ODTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODTask.cpp'; fi`

ondemand/audacity-ODTaskThread.o: ondemand/ODTaskThread.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODTaskThread.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODTaskThread.Tpo -c -o ondemand/audacity-ODTaskThread.o `test -f 'ondemand/ODTaskThread.cpp' || echo '$(srcdir)/'`ondemand/ODTaskThread.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODTaskThread.Tpo ondemand/$(DEPDIR)/audacity-ODTaskThread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODTaskThread.cpp' object='ondemand/audacity-ODTaskThread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODTaskThread.o `test -f 'ondemand/ODTaskThread.cpp' || echo '$(srcdir)/'`ondemand/ODTaskThread.cpp

ondemand/audacity-ODTaskThread.obj: ondemand/ODTaskThread.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODTaskThread.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODTaskThread.Tpo -c -o ondemand/audacity-ODTaskThread.obj `if test -f 'ondemand/ODTaskThread.cpp'; then $(CYGPATH_W) 'ondemand/ODTaskThread.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODTaskThread.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODTaskThread.Tpo ondemand/$(DEPDIR)/audacity-ODTaskThread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODTaskThread.cpp' object='ondemand/audacity-ODTaskThread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODTaskThread.obj `if test -f 'ondemand/ODTaskThread.cpp'; then $(CYGPATH_W) 'ondemand/ODTaskThread.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODTaskThread.cpp'; fi`

ondemand/audacity-ODWaveTrackTaskQueue.o: ondemand/ODWaveTrackTaskQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODWaveTrackTaskQueue.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Tpo -c -o ondemand/audacity-ODWaveTrackTaskQueue.o `test -f 'ondemand/ODWaveTrackTaskQueue.cpp' || echo '$(srcdir)/'`ondemand/ODWaveTrackTaskQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Tpo ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODWaveTrackTaskQueue.cpp' object='ondemand/audacity-ODWaveTrackTaskQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODWaveTrackTaskQueue.o `test -f 'ondemand/ODWaveTrackTaskQueue.cpp' || echo '$(srcdir)/'`ondemand/ODWaveTrackTaskQueue.cpp

ondemand/audacity-ODWaveTrackTaskQueue.obj: ondemand/ODWaveTrackTaskQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODWaveTrackTaskQueue.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Tpo -c -o ondemand/audacity-ODWaveTrackTaskQueue.obj `if test -f 'ondemand/ODWaveTrackTaskQueue.cpp'; then $(CYGPATH_W) 'ondemand/ODWaveTrackTaskQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODWaveTrackTaskQueue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Tpo ondemand/$(DEPDIR)/audacity-ODWaveTrackTaskQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODWaveTrackTaskQueue.cpp' object='ondemand/audacity-ODWaveTrackTaskQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODWaveTrackTaskQueue.obj `if test -f 'ondemand/ODWaveTrackTaskQueue.cpp'; then $(CYGPATH_W) 'ondemand/ODWaveTrackTaskQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODWaveTrackTaskQueue.cpp'; fi`

prefs/audacity-BatchPrefs.o: prefs/BatchPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-BatchPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-BatchPrefs.Tpo -c -o prefs/audacity-BatchPrefs.o `test -f 'prefs/BatchPrefs.cpp' || echo '$(srcdir)/'`prefs/BatchPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-BatchPrefs.Tpo prefs/$(DEPDIR)/audacity-BatchPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/BatchPrefs.cpp' object='prefs/audacity-BatchPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-BatchPrefs.o `test -f 'prefs/BatchPrefs.cpp' || echo '$(srcdir)/'`prefs/BatchPrefs.cpp

prefs/audacity-BatchPrefs.obj: prefs/BatchPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-BatchPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-BatchPrefs.Tpo -c -o prefs/audacity-BatchPrefs.obj `if test -f 'prefs/BatchPrefs.cpp'; then $(CYGPATH_W) 'prefs/BatchPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/BatchPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-BatchPrefs.Tpo prefs/$(DEPDIR)/audacity-BatchPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/BatchPrefs.cpp' object='prefs/audacity-BatchPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-BatchPrefs.obj `if test -f 'prefs/BatchPrefs.cpp'; then $(CYGPATH_W) 'prefs/BatchPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/BatchPrefs.cpp'; fi`

prefs/audacity-DevicePrefs.o: prefs/DevicePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-DevicePrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-DevicePrefs.Tpo -c -o prefs/audacity-DevicePrefs.o `test -f 'prefs/DevicePrefs.cpp' || echo '$(srcdir)/'`prefs/DevicePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-DevicePrefs.Tpo prefs/$(DEPDIR)/audacity-DevicePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/DevicePrefs.cpp' object='prefs/audacity-DevicePrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-DevicePrefs.o `test -f 'prefs/DevicePrefs.cpp' || echo '$(srcdir)/'`prefs/DevicePrefs.cpp

prefs/audacity-DevicePrefs.obj: prefs/DevicePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-DevicePrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-DevicePrefs.Tpo -c -o prefs/audacity-DevicePrefs.obj `if test -f 'prefs/DevicePrefs.cpp'; then $(CYGPATH_W) 'prefs/DevicePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/DevicePrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-DevicePrefs.Tpo prefs/$(DEPDIR)/audacity-DevicePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/DevicePrefs.cpp' object='prefs/audacity-DevicePrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-DevicePrefs.obj `if test -f 'prefs/DevicePrefs.cpp'; then $(CYGPATH_W) 'prefs/DevicePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/DevicePrefs.cpp'; fi`

prefs/audacity-DirectoriesPrefs.o: prefs/DirectoriesPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-DirectoriesPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Tpo -c -o prefs/audacity-DirectoriesPrefs.o `test -f 'prefs/DirectoriesPrefs.cpp' || echo '$(srcdir)/'`prefs/DirectoriesPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Tpo prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/DirectoriesPrefs.cpp' object='prefs/audacity-DirectoriesPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-DirectoriesPrefs.o `test -f 'prefs/DirectoriesPrefs.cpp' || echo '$(srcdir)/'`prefs/DirectoriesPrefs.cpp

prefs/audacity-DirectoriesPrefs.obj: prefs/DirectoriesPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-DirectoriesPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Tpo -c -o prefs/audacity-DirectoriesPrefs.obj `if test -f 'prefs/DirectoriesPrefs.cpp'; then $(CYGPATH_W) 'prefs/DirectoriesPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/DirectoriesPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Tpo prefs/$(DEPDIR)/audacity-DirectoriesPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/DirectoriesPrefs.cpp' object='prefs/audacity-DirectoriesPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-DirectoriesPrefs.obj `if test -f 'prefs/DirectoriesPrefs.cpp'; then $(CYGPATH_W) 'prefs/DirectoriesPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/DirectoriesPrefs.cpp'; fi`

prefs/audacity-EffectsPrefs.o: prefs/EffectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-EffectsPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-EffectsPrefs.Tpo -c -o prefs/audacity-EffectsPrefs.o `test -f 'prefs/EffectsPrefs.cpp' || echo '$(srcdir)/'`prefs/EffectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-EffectsPrefs.Tpo prefs/$(DEPDIR)/audacity-EffectsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/EffectsPrefs.cpp' object='prefs/audacity-EffectsPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-EffectsPrefs.o `test -f 'prefs/EffectsPrefs.cpp' || echo '$(srcdir)/'`prefs/EffectsPrefs.cpp

prefs/audacity-EffectsPrefs.obj: prefs/EffectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-EffectsPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-EffectsPrefs.Tpo -c -o prefs/audacity-EffectsPrefs.obj `if test -f 'prefs/EffectsPrefs.cpp'; then $(CYGPATH_W) 'prefs/EffectsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/EffectsPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-EffectsPrefs.Tpo prefs/$(DEPDIR)/audacity-EffectsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/EffectsPrefs.cpp' object='prefs/audacity-EffectsPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-EffectsPrefs.obj `if test -f 'prefs/EffectsPrefs.cpp'; then $(CYGPATH_W) 'prefs/EffectsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/EffectsPrefs.cpp'; fi`

prefs/audacity-ExtImportPrefs.o: prefs/ExtImportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ExtImportPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-ExtImportPrefs.Tpo -c -o prefs/audacity-ExtImportPrefs.o `test -f 'prefs/ExtImportPrefs.cpp' || echo '$(srcdir)/'`prefs/ExtImportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ExtImportPrefs.Tpo prefs/$(DEPDIR)/audacity-ExtImportPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ExtImportPrefs.cpp' object='prefs/audacity-ExtImportPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ExtImportPrefs.o `test -f 'prefs/ExtImportPrefs.cpp' || echo '$(srcdir)/'`prefs/ExtImportPrefs.cpp

prefs/audacity-ExtImportPrefs.obj: prefs/ExtImportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ExtImportPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-ExtImportPrefs.Tpo -c -o prefs/audacity-ExtImportPrefs.obj `if test -f 'prefs/ExtImportPrefs.cpp'; then $(CYGPATH_W) 'prefs/ExtImportPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ExtImportPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ExtImportPrefs.Tpo prefs/$(DEPDIR)/audacity-ExtImportPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ExtImportPrefs.cpp' object='prefs/audacity-ExtImportPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ExtImportPrefs.obj `if test -f 'prefs/ExtImportPrefs.cpp'; then $(CYGPATH_W) 'prefs/ExtImportPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ExtImportPrefs.cpp'; fi`

prefs/audacity-GUIPrefs.o: prefs/GUIPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-GUIPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-GUIPrefs.Tpo -c -o prefs/audacity-GUIPrefs.o `test -f 'prefs/GUIPrefs.cpp' || echo '$(srcdir)/'`prefs/GUIPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-GUIPrefs.Tpo prefs/$(DEPDIR)/audacity-GUIPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/GUIPrefs.cpp' object='prefs/audacity-GUIPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-GUIPrefs.o `test -f 'prefs/GUIPrefs.cpp' || echo '$(srcdir)/'`prefs/GUIPrefs.cpp

prefs/audacity-GUIPrefs.obj: prefs/GUIPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-GUIPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-GUIPrefs.Tpo -c -o prefs/audacity-GUIPrefs.obj `if test -f 'prefs/GUIPrefs.cpp'; then $(CYGPATH_W) 'prefs/GUIPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/GUIPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-GUIPrefs.Tpo prefs/$(DEPDIR)/audacity-GUIPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/GUIPrefs.cpp' object='prefs/audacity-GUIPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-GUIPrefs.obj `if test -f 'prefs/GUIPrefs.cpp'; then $(CYGPATH_W) 'prefs/GUIPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/GUIPrefs.cpp'; fi`

prefs/audacity-ImportExportPrefs.o: prefs/ImportExportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ImportExportPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-ImportExportPrefs.Tpo -c -o prefs/audacity-ImportExportPrefs.o `test -f 'prefs/ImportExportPrefs.cpp' || echo '$(srcdir)/'`prefs/ImportExportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ImportExportPrefs.Tpo prefs/$(DEPDIR)/audacity-ImportExportPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ImportExportPrefs.cpp' object='prefs/audacity-ImportExportPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ImportExportPrefs.o `test -f 'prefs/ImportExportPrefs.cpp' || echo '$(srcdir)/'`prefs/ImportExportPrefs.cpp

prefs/audacity-ImportExportPrefs.obj: prefs/ImportExportPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ImportExportPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-ImportExportPrefs.Tpo -c -o prefs/audacity-ImportExportPrefs.obj `if test -f 'prefs/ImportExportPrefs.cpp'; then $(CYGPATH_W) 'prefs/ImportExportPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ImportExportPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ImportExportPrefs.Tpo prefs/$(DEPDIR)/audacity-ImportExportPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ImportExportPrefs.cpp' object='prefs/audacity-ImportExportPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ImportExportPrefs.obj `if test -f 'prefs/ImportExportPrefs.cpp'; then $(CYGPATH_W) 'prefs/ImportExportPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ImportExportPrefs.cpp'; fi`

prefs/audacity-KeyConfigPrefs.o: prefs/KeyConfigPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-KeyConfigPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Tpo -c -o prefs/audacity-KeyConfigPrefs.o `test -f 'prefs/KeyConfigPrefs.cpp' || echo '$(srcdir)/'`prefs/KeyConfigPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Tpo prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/KeyConfigPrefs.cpp' object='prefs/audacity-KeyConfigPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-KeyConfigPrefs.o `test -f 'prefs/KeyConfigPrefs.cpp' || echo '$(srcdir)/'`prefs/KeyConfigPrefs.cpp

prefs/audacity-KeyConfigPrefs.obj: prefs/KeyConfigPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-KeyConfigPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Tpo -c -o prefs/audacity-KeyConfigPrefs.obj `if test -f 'prefs/KeyConfigPrefs.cpp'; then $(CYGPATH_W) 'prefs/KeyConfigPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/KeyConfigPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Tpo prefs/$(DEPDIR)/audacity-KeyConfigPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/KeyConfigPrefs.cpp' object='prefs/audacity-KeyConfigPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-KeyConfigPrefs.obj `if test -f 'prefs/KeyConfigPrefs.cpp'; then $(CYGPATH_W) 'prefs/KeyConfigPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/KeyConfigPrefs.cpp'; fi`

prefs/audacity-LibraryPrefs.o: prefs/LibraryPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-LibraryPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-LibraryPrefs.Tpo -c -o prefs/audacity-LibraryPrefs.o `test -f 'prefs/LibraryPrefs.cpp' || echo '$(srcdir)/'`prefs/LibraryPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-LibraryPrefs.Tpo prefs/$(DEPDIR)/audacity-LibraryPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/LibraryPrefs.cpp' object='prefs/audacity-LibraryPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-LibraryPrefs.o `test -f 'prefs/LibraryPrefs.cpp' || echo '$(srcdir)/'`prefs/LibraryPrefs.cpp

prefs/audacity-LibraryPrefs.obj: prefs/LibraryPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-LibraryPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-LibraryPrefs.Tpo -c -o prefs/audacity-LibraryPrefs.obj `if test -f 'prefs/LibraryPrefs.cpp'; then $(CYGPATH_W) 'prefs/LibraryPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/LibraryPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-LibraryPrefs.Tpo prefs/$(DEPDIR)/audacity-LibraryPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/LibraryPrefs.cpp' object='prefs/audacity-LibraryPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-LibraryPrefs.obj `if test -f 'prefs/LibraryPrefs.cpp'; then $(CYGPATH_W) 'prefs/LibraryPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/LibraryPrefs.cpp'; fi`

prefs/audacity-MidiIOPrefs.o: prefs/MidiIOPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-MidiIOPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-MidiIOPrefs.Tpo -c -o prefs/audacity-MidiIOPrefs.o `test -f 'prefs/MidiIOPrefs.cpp' || echo '$(srcdir)/'`prefs/MidiIOPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-MidiIOPrefs.Tpo prefs/$(DEPDIR)/audacity-MidiIOPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/MidiIOPrefs.cpp' object='prefs/audacity-MidiIOPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-MidiIOPrefs.o `test -f 'prefs/MidiIOPrefs.cpp' || echo '$(srcdir)/'`prefs/MidiIOPrefs.cpp

prefs/audacity-MidiIOPrefs.obj: prefs/MidiIOPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-MidiIOPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-MidiIOPrefs.Tpo -c -o prefs/audacity-MidiIOPrefs.obj `if test -f 'prefs/MidiIOPrefs.cpp'; then $(CYGPATH_W) 'prefs/MidiIOPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/MidiIOPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-MidiIOPrefs.Tpo prefs/$(DEPDIR)/audacity-MidiIOPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/MidiIOPrefs.cpp' object='prefs/audacity-MidiIOPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-MidiIOPrefs.obj `if test -f 'prefs/MidiIOPrefs.cpp'; then $(CYGPATH_W) 'prefs/MidiIOPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/MidiIOPrefs.cpp'; fi`

prefs/audacity-ModulePrefs.o: prefs/ModulePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ModulePrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-ModulePrefs.Tpo -c -o prefs/audacity-ModulePrefs.o `test -f 'prefs/ModulePrefs.cpp' || echo '$(srcdir)/'`prefs/ModulePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ModulePrefs.Tpo prefs/$(DEPDIR)/audacity-ModulePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ModulePrefs.cpp' object='prefs/audacity-ModulePrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ModulePrefs.o `test -f 'prefs/ModulePrefs.cpp' || echo '$(srcdir)/'`prefs/ModulePrefs.cpp

prefs/audacity-ModulePrefs.obj: prefs/ModulePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ModulePrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-ModulePrefs.Tpo -c -o prefs/audacity-ModulePrefs.obj `if test -f 'prefs/ModulePrefs.cpp'; then $(CYGPATH_W) 'prefs/ModulePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ModulePrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ModulePrefs.Tpo prefs/$(DEPDIR)/audacity-ModulePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ModulePrefs.cpp' object='prefs/audacity-ModulePrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ModulePrefs.obj `if test -f 'prefs/ModulePrefs.cpp'; then $(CYGPATH_W) 'prefs/ModulePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ModulePrefs.cpp'; fi`

prefs/audacity-MousePrefs.o: prefs/MousePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-MousePrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-MousePrefs.Tpo -c -o prefs/audacity-MousePrefs.o `test -f 'prefs/MousePrefs.cpp' || echo '$(srcdir)/'`prefs/MousePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-MousePrefs.Tpo prefs/$(DEPDIR)/audacity-MousePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/MousePrefs.cpp' object='prefs/audacity-MousePrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-MousePrefs.o `test -f 'prefs/MousePrefs.cpp' || echo '$(srcdir)/'`prefs/MousePrefs.cpp

prefs/audacity-MousePrefs.obj: prefs/MousePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-MousePrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-MousePrefs.Tpo -c -o prefs/audacity-MousePrefs.obj `if test -f 'prefs/MousePrefs.cpp'; then $(CYGPATH_W) 'prefs/MousePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/MousePrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-MousePrefs.Tpo prefs/$(DEPDIR)/audacity-MousePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/MousePrefs.cpp' object='prefs/audacity-MousePrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-MousePrefs.obj `if test -f 'prefs/MousePrefs.cpp'; then $(CYGPATH_W) 'prefs/MousePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/MousePrefs.cpp'; fi`

prefs/audacity-PlaybackPrefs.o: prefs/PlaybackPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-PlaybackPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-PlaybackPrefs.Tpo -c -o prefs/audacity-PlaybackPrefs.o `test -f 'prefs/PlaybackPrefs.cpp' || echo '$(srcdir)/'`prefs/PlaybackPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-PlaybackPrefs.Tpo prefs/$(DEPDIR)/audacity-PlaybackPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/PlaybackPrefs.cpp' object='prefs/audacity-PlaybackPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-PlaybackPrefs.o `test -f 'prefs/PlaybackPrefs.cpp' || echo '$(srcdir)/'`prefs/PlaybackPrefs.cpp

prefs/audacity-PlaybackPrefs.obj: prefs/PlaybackPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-PlaybackPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-PlaybackPrefs.Tpo -c -o prefs/audacity-PlaybackPrefs.obj `if test -f 'prefs/PlaybackPrefs.cpp'; then $(CYGPATH_W) 'prefs/PlaybackPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/PlaybackPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-PlaybackPrefs.Tpo prefs/$(DEPDIR)/audacity-PlaybackPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/PlaybackPrefs.cpp' object='prefs/audacity-PlaybackPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-PlaybackPrefs.obj `if test -f 'prefs/PlaybackPrefs.cpp'; then $(CYGPATH_W) 'prefs/PlaybackPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/PlaybackPrefs.cpp'; fi`

prefs/audacity-PrefsDialog.o: prefs/PrefsDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-PrefsDialog.o -MD -MP -MF prefs/$(DEPDIR)/audacity-PrefsDialog.Tpo -c -o prefs/audacity-PrefsDialog.o `test -f 'prefs/PrefsDialog.cpp' || echo '$(srcdir)/'`prefs/PrefsDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-PrefsDialog.Tpo prefs/$(DEPDIR)/audacity-PrefsDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/PrefsDialog.cpp' object='prefs/audacity-PrefsDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-PrefsDialog.o `test -f 'prefs/PrefsDialog.cpp' || echo '$(srcdir)/'`prefs/PrefsDialog.cpp

prefs/audacity-PrefsDialog.obj: prefs/PrefsDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-PrefsDialog.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-PrefsDialog.Tpo -c -o prefs/audacity-PrefsDialog.obj `if test -f 'prefs/PrefsDialog.cpp'; then $(CYGPATH_W) 'prefs/PrefsDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/PrefsDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-PrefsDialog.Tpo prefs/$(DEPDIR)/audacity-PrefsDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/PrefsDialog.cpp' object='prefs/audacity-PrefsDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-PrefsDialog.obj `if test -f 'prefs/PrefsDialog.cpp'; then $(CYGPATH_W) 'prefs/PrefsDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/PrefsDialog.cpp'; fi`

prefs/audacity-ProjectsPrefs.o: prefs/ProjectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ProjectsPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-ProjectsPrefs.Tpo -c -o prefs/audacity-ProjectsPrefs.o `test -f 'prefs/ProjectsPrefs.cpp' || echo '$(srcdir)/'`prefs/ProjectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ProjectsPrefs.Tpo prefs/$(DEPDIR)/audacity-ProjectsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ProjectsPrefs.cpp' object='prefs/audacity-ProjectsPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ProjectsPrefs.o `test -f 'prefs/ProjectsPrefs.cpp' || echo '$(srcdir)/'`prefs/ProjectsPrefs.cpp

prefs/audacity-ProjectsPrefs.obj: prefs/ProjectsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ProjectsPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-ProjectsPrefs.Tpo -c -o prefs/audacity-ProjectsPrefs.obj `if test -f 'prefs/ProjectsPrefs.cpp'; then $(CYGPATH_W) 'prefs/ProjectsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ProjectsPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ProjectsPrefs.Tpo prefs/$(DEPDIR)/audacity-ProjectsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ProjectsPrefs.cpp' object='prefs/audacity-ProjectsPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ProjectsPrefs.obj `if test -f 'prefs/ProjectsPrefs.cpp'; then $(CYGPATH_W) 'prefs/ProjectsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ProjectsPrefs.cpp'; fi`

prefs/audacity-QualityPrefs.o: prefs/QualityPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-QualityPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-QualityPrefs.Tpo -c -o prefs/audacity-QualityPrefs.o `test -f 'prefs/QualityPrefs.cpp' || echo '$(srcdir)/'`prefs/QualityPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-QualityPrefs.Tpo prefs/$(DEPDIR)/audacity-QualityPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/QualityPrefs.cpp' object='prefs/audacity-QualityPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-QualityPrefs.o `test -f 'prefs/QualityPrefs.cpp' || echo '$(srcdir)/'`prefs/QualityPrefs.cpp

prefs/audacity-QualityPrefs.obj: prefs/QualityPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-QualityPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-QualityPrefs.Tpo -c -o prefs/audacity-QualityPrefs.obj `if test -f 'prefs/QualityPrefs.cpp'; then $(CYGPATH_W) 'prefs/QualityPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/QualityPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-QualityPrefs.Tpo prefs/$(DEPDIR)/audacity-QualityPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/QualityPrefs.cpp' object='prefs/audacity-QualityPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-QualityPrefs.obj `if test -f 'prefs/QualityPrefs.cpp'; then $(CYGPATH_W) 'prefs/QualityPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/QualityPrefs.cpp'; fi`

prefs/audacity-RecordingPrefs.o: prefs/RecordingPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-RecordingPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-RecordingPrefs.Tpo -c -o prefs/audacity-RecordingPrefs.o `test -f 'prefs/RecordingPrefs.cpp' || echo '$(srcdir)/'`prefs/RecordingPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-RecordingPrefs.Tpo prefs/$(DEPDIR)/audacity-RecordingPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/RecordingPrefs.cpp' object='prefs/audacity-RecordingPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-RecordingPrefs.o `test -f 'prefs/RecordingPrefs.cpp' || echo '$(srcdir)/'`prefs/RecordingPrefs.cpp

prefs/audacity-RecordingPrefs.obj: prefs/RecordingPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-RecordingPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-RecordingPrefs.Tpo -c -o prefs/audacity-RecordingPrefs.obj `if test -f 'prefs/RecordingPrefs.cpp'; then $(CYGPATH_W) 'prefs/RecordingPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/RecordingPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-RecordingPrefs.Tpo prefs/$(DEPDIR)/audacity-RecordingPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/RecordingPrefs.cpp' object='prefs/audacity-RecordingPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-RecordingPrefs.obj `if test -f 'prefs/RecordingPrefs.cpp'; then $(CYGPATH_W) 'prefs/RecordingPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/RecordingPrefs.cpp'; fi`

prefs/audacity-SpectrumPrefs.o: prefs/SpectrumPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-SpectrumPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-SpectrumPrefs.Tpo -c -o prefs/audacity-SpectrumPrefs.o `test -f 'prefs/SpectrumPrefs.cpp' || echo '$(srcdir)/'`prefs/SpectrumPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-SpectrumPrefs.Tpo prefs/$(DEPDIR)/audacity-SpectrumPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/SpectrumPrefs.cpp' object='prefs/audacity-SpectrumPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-SpectrumPrefs.o `test -f 'prefs/SpectrumPrefs.cpp' || echo '$(srcdir)/'`prefs/SpectrumPrefs.cpp

prefs/audacity-SpectrumPrefs.obj: prefs/SpectrumPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-SpectrumPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-SpectrumPrefs.Tpo -c -o prefs/audacity-SpectrumPrefs.obj `if test -f 'prefs/SpectrumPrefs.cpp'; then $(CYGPATH_W) 'prefs/SpectrumPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/SpectrumPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-SpectrumPrefs.Tpo prefs/$(DEPDIR)/audacity-SpectrumPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/SpectrumPrefs.cpp' object='prefs/audacity-SpectrumPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-SpectrumPrefs.obj `if test -f 'prefs/SpectrumPrefs.cpp'; then $(CYGPATH_W) 'prefs/SpectrumPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/SpectrumPrefs.cpp'; fi`

prefs/audacity-ThemePrefs.o: prefs/ThemePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ThemePrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-ThemePrefs.Tpo -c -o prefs/audacity-ThemePrefs.o `test -f 'prefs/ThemePrefs.cpp' || echo '$(srcdir)/'`prefs/ThemePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ThemePrefs.Tpo prefs/$(DEPDIR)/audacity-ThemePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ThemePrefs.cpp' object='prefs/audacity-ThemePrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ThemePrefs.o `test -f 'prefs/ThemePrefs.cpp' || echo '$(srcdir)/'`prefs/ThemePrefs.cpp

prefs/audacity-ThemePrefs.obj: prefs/ThemePrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-ThemePrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-ThemePrefs.Tpo -c -o prefs/audacity-ThemePrefs.obj `if test -f 'prefs/ThemePrefs.cpp'; then $(CYGPATH_W) 'prefs/ThemePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ThemePrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-ThemePrefs.Tpo prefs/$(DEPDIR)/audacity-ThemePrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/ThemePrefs.cpp' object='prefs/audacity-ThemePrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-ThemePrefs.obj `if test -f 'prefs/ThemePrefs.cpp'; then $(CYGPATH_W) 'prefs/ThemePrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/ThemePrefs.cpp'; fi`

prefs/audacity-TracksPrefs.o: prefs/TracksPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-TracksPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-TracksPrefs.Tpo -c -o prefs/audacity-TracksPrefs.o `test -f 'prefs/TracksPrefs.cpp' || echo '$(srcdir)/'`prefs/TracksPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-TracksPrefs.Tpo prefs/$(DEPDIR)/audacity-TracksPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/TracksPrefs.cpp' object='prefs/audacity-TracksPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-TracksPrefs.o `test -f 'prefs/TracksPrefs.cpp' || echo '$(srcdir)/'`prefs/TracksPrefs.cpp

prefs/audacity-TracksPrefs.obj: prefs/TracksPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-TracksPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-TracksPrefs.Tpo -c -o prefs/audacity-TracksPrefs.obj `if test -f 'prefs/TracksPrefs.cpp'; then $(CYGPATH_W) 'prefs/TracksPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/TracksPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-TracksPrefs.Tpo prefs/$(DEPDIR)/audacity-TracksPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/TracksPrefs.cpp' object='prefs/audacity-TracksPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-TracksPrefs.obj `if test -f 'prefs/TracksPrefs.cpp'; then $(CYGPATH_W) 'prefs/TracksPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/TracksPrefs.cpp'; fi`

prefs/audacity-WarningsPrefs.o: prefs/WarningsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-WarningsPrefs.o -MD -MP -MF prefs/$(DEPDIR)/audacity-WarningsPrefs.Tpo -c -o prefs/audacity-WarningsPrefs.o `test -f 'prefs/WarningsPrefs.cpp' || echo '$(srcdir)/'`prefs/WarningsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-WarningsPrefs.Tpo prefs/$(DEPDIR)/audacity-WarningsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/WarningsPrefs.cpp' object='prefs/audacity-WarningsPrefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-WarningsPrefs.o `test -f 'prefs/WarningsPrefs.cpp' || echo '$(srcdir)/'`prefs/WarningsPrefs.cpp

prefs/audacity-WarningsPrefs.obj: prefs/WarningsPrefs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT prefs/audacity-WarningsPrefs.obj -MD -MP -MF prefs/$(DEPDIR)/audacity-WarningsPrefs.Tpo -c -o prefs/audacity-WarningsPrefs.obj `if test -f 'prefs/WarningsPrefs.cpp'; then $(CYGPATH_W) 'prefs/WarningsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/WarningsPrefs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) prefs/$(DEPDIR)/audacity-WarningsPrefs.Tpo prefs/$(DEPDIR)/audacity-WarningsPrefs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='prefs/WarningsPrefs.cpp' object='prefs/audacity-WarningsPrefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o prefs/audacity-WarningsPrefs.obj `if test -f 'prefs/WarningsPrefs.cpp'; then $(CYGPATH_W) 'prefs/WarningsPrefs.cpp'; else $(CYGPATH_W) '$(srcdir)/prefs/WarningsPrefs.cpp'; fi`

toolbars/audacity-ControlToolBar.o: toolbars/ControlToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ControlToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-ControlToolBar.Tpo -c -o toolbars/audacity-ControlToolBar.o `test -f 'toolbars/ControlToolBar.cpp' || echo '$(srcdir)/'`toolbars/ControlToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ControlToolBar.Tpo toolbars/$(DEPDIR)/audacity-ControlToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ControlToolBar.cpp' object='toolbars/audacity-ControlToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ControlToolBar.o `test -f 'toolbars/ControlToolBar.cpp' || echo '$(srcdir)/'`toolbars/ControlToolBar.cpp

toolbars/audacity-ControlToolBar.obj: toolbars/ControlToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ControlToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-ControlToolBar.Tpo -c -o toolbars/audacity-ControlToolBar.obj `if test -f 'toolbars/ControlToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ControlToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ControlToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ControlToolBar.Tpo toolbars/$(DEPDIR)/audacity-ControlToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ControlToolBar.cpp' object='toolbars/audacity-ControlToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ControlToolBar.obj `if test -f 'toolbars/ControlToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ControlToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ControlToolBar.cpp'; fi`

toolbars/audacity-DeviceToolBar.o: toolbars/DeviceToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-DeviceToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-DeviceToolBar.Tpo -c -o toolbars/audacity-DeviceToolBar.o `test -f 'toolbars/DeviceToolBar.cpp' || echo '$(srcdir)/'`toolbars/DeviceToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-DeviceToolBar.Tpo toolbars/$(DEPDIR)/audacity-DeviceToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/DeviceToolBar.cpp' object='toolbars/audacity-DeviceToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-DeviceToolBar.o `test -f 'toolbars/DeviceToolBar.cpp' || echo '$(srcdir)/'`toolbars/DeviceToolBar.cpp

toolbars/audacity-DeviceToolBar.obj: toolbars/DeviceToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-DeviceToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-DeviceToolBar.Tpo -c -o toolbars/audacity-DeviceToolBar.obj `if test -f 'toolbars/DeviceToolBar.cpp'; then $(CYGPATH_W) 'toolbars/DeviceToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/DeviceToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-DeviceToolBar.Tpo toolbars/$(DEPDIR)/audacity-DeviceToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/DeviceToolBar.cpp' object='toolbars/audacity-DeviceToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-DeviceToolBar.obj `if test -f 'toolbars/DeviceToolBar.cpp'; then $(CYGPATH_W) 'toolbars/DeviceToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/DeviceToolBar.cpp'; fi`

toolbars/audacity-EditToolBar.o: toolbars/EditToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-EditToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-EditToolBar.Tpo -c -o toolbars/audacity-EditToolBar.o `test -f 'toolbars/EditToolBar.cpp' || echo '$(srcdir)/'`toolbars/EditToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-EditToolBar.Tpo toolbars/$(DEPDIR)/audacity-EditToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/EditToolBar.cpp' object='toolbars/audacity-EditToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-EditToolBar.o `test -f 'toolbars/EditToolBar.cpp' || echo '$(srcdir)/'`toolbars/EditToolBar.cpp

toolbars/audacity-EditToolBar.obj: toolbars/EditToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-EditToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-EditToolBar.Tpo -c -o toolbars/audacity-EditToolBar.obj `if test -f 'toolbars/EditToolBar.cpp'; then $(CYGPATH_W) 'toolbars/EditToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/EditToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-EditToolBar.Tpo toolbars/$(DEPDIR)/audacity-EditToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/EditToolBar.cpp' object='toolbars/audacity-EditToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-EditToolBar.obj `if test -f 'toolbars/EditToolBar.cpp'; then $(CYGPATH_W) 'toolbars/EditToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/EditToolBar.cpp'; fi`

toolbars/audacity-MeterToolBar.o: toolbars/MeterToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-MeterToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-MeterToolBar.Tpo -c -o toolbars/audacity-MeterToolBar.o `test -f 'toolbars/MeterToolBar.cpp' || echo '$(srcdir)/'`toolbars/MeterToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-MeterToolBar.Tpo toolbars/$(DEPDIR)/audacity-MeterToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/MeterToolBar.cpp' object='toolbars/audacity-MeterToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-MeterToolBar.o `test -f 'toolbars/MeterToolBar.cpp' || echo '$(srcdir)/'`toolbars/MeterToolBar.cpp

toolbars/audacity-MeterToolBar.obj: toolbars/MeterToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-MeterToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-MeterToolBar.Tpo -c -o toolbars/audacity-MeterToolBar.obj `if test -f 'toolbars/MeterToolBar.cpp'; then $(CYGPATH_W) 'toolbars/MeterToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/MeterToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-MeterToolBar.Tpo toolbars/$(DEPDIR)/audacity-MeterToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/MeterToolBar.cpp' object='toolbars/audacity-MeterToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-MeterToolBar.obj `if test -f 'toolbars/MeterToolBar.cpp'; then $(CYGPATH_W) 'toolbars/MeterToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/MeterToolBar.cpp'; fi`

toolbars/audacity-MixerToolBar.o: toolbars/MixerToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-MixerToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-MixerToolBar.Tpo -c -o toolbars/audacity-MixerToolBar.o `test -f 'toolbars/MixerToolBar.cpp' || echo '$(srcdir)/'`toolbars/MixerToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-MixerToolBar.Tpo toolbars/$(DEPDIR)/audacity-MixerToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/MixerToolBar.cpp' object='toolbars/audacity-MixerToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-MixerToolBar.o `test -f 'toolbars/MixerToolBar.cpp' || echo '$(srcdir)/'`toolbars/MixerToolBar.cpp

toolbars/audacity-MixerToolBar.obj: toolbars/MixerToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-MixerToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-MixerToolBar.Tpo -c -o toolbars/audacity-MixerToolBar.obj `if test -f 'toolbars/MixerToolBar.cpp'; then $(CYGPATH_W) 'toolbars/MixerToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/MixerToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-MixerToolBar.Tpo toolbars/$(DEPDIR)/audacity-MixerToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/MixerToolBar.cpp' object='toolbars/audacity-MixerToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-MixerToolBar.obj `if test -f 'toolbars/MixerToolBar.cpp'; then $(CYGPATH_W) 'toolbars/MixerToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/MixerToolBar.cpp'; fi`

toolbars/audacity-SelectionBar.o: toolbars/SelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-SelectionBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-SelectionBar.Tpo -c -o toolbars/audacity-SelectionBar.o `test -f 'toolbars/SelectionBar.cpp' || echo '$(srcdir)/'`toolbars/SelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-SelectionBar.Tpo toolbars/$(DEPDIR)/audacity-SelectionBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/SelectionBar.cpp' object='toolbars/audacity-SelectionBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-SelectionBar.o `test -f 'toolbars/SelectionBar.cpp' || echo '$(srcdir)/'`toolbars/SelectionBar.cpp

toolbars/audacity-SelectionBar.obj: toolbars/SelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-SelectionBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-SelectionBar.Tpo -c -o toolbars/audacity-SelectionBar.obj `if test -f 'toolbars/SelectionBar.cpp'; then $(CYGPATH_W) 'toolbars/SelectionBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/SelectionBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-SelectionBar.Tpo toolbars/$(DEPDIR)/audacity-SelectionBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/SelectionBar.cpp' object='toolbars/audacity-SelectionBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-SelectionBar.obj `if test -f 'toolbars/SelectionBar.cpp'; then $(CYGPATH_W) 'toolbars/SelectionBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/SelectionBar.cpp'; fi`

toolbars/audacity-SpectralSelectionBar.o: toolbars/SpectralSelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-SpectralSelectionBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Tpo -c -o toolbars/audacity-SpectralSelectionBar.o `test -f 'toolbars/SpectralSelectionBar.cpp' || echo '$(srcdir)/'`toolbars/SpectralSelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Tpo toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/SpectralSelectionBar.cpp' object='toolbars/audacity-SpectralSelectionBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-SpectralSelectionBar.o `test -f 'toolbars/SpectralSelectionBar.cpp' || echo '$(srcdir)/'`toolbars/SpectralSelectionBar.cpp

toolbars/audacity-SpectralSelectionBar.obj: toolbars/SpectralSelectionBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-SpectralSelectionBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Tpo -c -o toolbars/audacity-SpectralSelectionBar.obj `if test -f 'toolbars/SpectralSelectionBar.cpp'; then $(CYGPATH_W) 'toolbars/SpectralSelectionBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/SpectralSelectionBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Tpo toolbars/$(DEPDIR)/audacity-SpectralSelectionBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/SpectralSelectionBar.cpp' object='toolbars/audacity-SpectralSelectionBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-SpectralSelectionBar.obj `if test -f 'toolbars/SpectralSelectionBar.cpp'; then $(CYGPATH_W) 'toolbars/SpectralSelectionBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/SpectralSelectionBar.cpp'; fi`

toolbars/audacity-ToolBar.o: toolbars/ToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolBar.Tpo -c -o toolbars/audacity-ToolBar.o `test -f 'toolbars/ToolBar.cpp' || echo '$(srcdir)/'`toolbars/ToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolBar.Tpo toolbars/$(DEPDIR)/audacity-ToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolBar.cpp' object='toolbars/audacity-ToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolBar.o `test -f 'toolbars/ToolBar.cpp' || echo '$(srcdir)/'`toolbars/ToolBar.cpp

toolbars/audacity-ToolBar.obj: toolbars/ToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolBar.Tpo -c -o toolbars/audacity-ToolBar.obj `if test -f 'toolbars/ToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolBar.Tpo toolbars/$(DEPDIR)/audacity-ToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolBar.cpp' object='toolbars/audacity-ToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolBar.obj `if test -f 'toolbars/ToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolBar.cpp'; fi`

toolbars/audacity-ToolDock.o: toolbars/ToolDock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolDock.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolDock.Tpo -c -o toolbars/audacity-ToolDock.o `test -f 'toolbars/ToolDock.cpp' || echo '$(srcdir)/'`toolbars/ToolDock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolDock.Tpo toolbars/$(DEPDIR)/audacity-ToolDock.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolDock.cpp' object='toolbars/audacity-ToolDock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolDock.o `test -f 'toolbars/ToolDock.cpp' || echo '$(srcdir)/'`toolbars/ToolDock.cpp

toolbars/audacity-ToolDock.obj: toolbars/ToolDock.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolDock.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolDock.Tpo -c -o toolbars/audacity-ToolDock.obj `if test -f 'toolbars/ToolDock.cpp'; then $(CYGPATH_W) 'toolbars/ToolDock.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolDock.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolDock.Tpo toolbars/$(DEPDIR)/audacity-ToolDock.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolDock.cpp' object='toolbars/audacity-ToolDock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolDock.obj `if test -f 'toolbars/ToolDock.cpp'; then $(CYGPATH_W) 'toolbars/ToolDock.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolDock.cpp'; fi`

toolbars/audacity-ToolManager.o: toolbars/ToolManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolManager.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolManager.Tpo -c -o toolbars/audacity-ToolManager.o `test -f 'toolbars/ToolManager.cpp' || echo '$(srcdir)/'`toolbars/ToolManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolManager.Tpo toolbars/$(DEPDIR)/audacity-ToolManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolManager.cpp' object='toolbars/audacity-ToolManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolManager.o `test -f 'toolbars/ToolManager.cpp' || echo '$(srcdir)/'`toolbars/ToolManager.cpp

toolbars/audacity-ToolManager.obj: toolbars/ToolManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolManager.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolManager.Tpo -c -o toolbars/audacity-ToolManager.obj `if test -f 'toolbars/ToolManager.cpp'; then $(CYGPATH_W) 'toolbars/ToolManager.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolManager.Tpo toolbars/$(DEPDIR)/audacity-ToolManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolManager.cpp' object='toolbars/audacity-ToolManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolManager.obj `if test -f 'toolbars/ToolManager.cpp'; then $(CYGPATH_W) 'toolbars/ToolManager.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolManager.cpp'; fi`

toolbars/audacity-ToolsToolBar.o: toolbars/ToolsToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolsToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolsToolBar.Tpo -c -o toolbars/audacity-ToolsToolBar.o `test -f 'toolbars/ToolsToolBar.cpp' || echo '$(srcdir)/'`toolbars/ToolsToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolsToolBar.Tpo toolbars/$(DEPDIR)/audacity-ToolsToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolsToolBar.cpp' object='toolbars/audacity-ToolsToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolsToolBar.o `test -f 'toolbars/ToolsToolBar.cpp' || echo '$(srcdir)/'`toolbars/ToolsToolBar.cpp

toolbars/audacity-ToolsToolBar.obj: toolbars/ToolsToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-ToolsToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-ToolsToolBar.Tpo -c -o toolbars/audacity-ToolsToolBar.obj `if test -f 'toolbars/ToolsToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ToolsToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolsToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-ToolsToolBar.Tpo toolbars/$(DEPDIR)/audacity-ToolsToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/ToolsToolBar.cpp' object='toolbars/audacity-ToolsToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-ToolsToolBar.obj `if test -f 'toolbars/ToolsToolBar.cpp'; then $(CYGPATH_W) 'toolbars/ToolsToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/ToolsToolBar.cpp'; fi`

toolbars/audacity-TranscriptionToolBar.o: toolbars/TranscriptionToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-TranscriptionToolBar.o -MD -MP -MF toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Tpo -c -o toolbars/audacity-TranscriptionToolBar.o `test -f 'toolbars/TranscriptionToolBar.cpp' || echo '$(srcdir)/'`toolbars/TranscriptionToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Tpo toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/TranscriptionToolBar.cpp' object='toolbars/audacity-TranscriptionToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-TranscriptionToolBar.o `test -f 'toolbars/TranscriptionToolBar.cpp' || echo '$(srcdir)/'`toolbars/TranscriptionToolBar.cpp

toolbars/audacity-TranscriptionToolBar.obj: toolbars/TranscriptionToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT toolbars/audacity-TranscriptionToolBar.obj -MD -MP -MF toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Tpo -c -o toolbars/audacity-TranscriptionToolBar.obj `if test -f 'toolbars/TranscriptionToolBar.cpp'; then $(CYGPATH_W) 'toolbars/TranscriptionToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/TranscriptionToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Tpo toolbars/$(DEPDIR)/audacity-TranscriptionToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='toolbars/TranscriptionToolBar.cpp' object='toolbars/audacity-TranscriptionToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o toolbars/audacity-TranscriptionToolBar.obj `if test -f 'toolbars/TranscriptionToolBar.cpp'; then $(CYGPATH_W) 'toolbars/TranscriptionToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/toolbars/TranscriptionToolBar.cpp'; fi`

widgets/audacity-AButton.o: widgets/AButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-AButton.o -MD -MP -MF widgets/$(DEPDIR)/audacity-AButton.Tpo -c -o widgets/audacity-AButton.o `test -f 'widgets/AButton.cpp' || echo '$(srcdir)/'`widgets/AButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-AButton.Tpo widgets/$(DEPDIR)/audacity-AButton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/AButton.cpp' object='widgets/audacity-AButton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-AButton.o `test -f 'widgets/AButton.cpp' || echo '$(srcdir)/'`widgets/AButton.cpp

widgets/audacity-AButton.obj: widgets/AButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-AButton.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-AButton.Tpo -c -o widgets/audacity-AButton.obj `if test -f 'widgets/AButton.cpp'; then $(CYGPATH_W) 'widgets/AButton.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/AButton.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-AButton.Tpo widgets/$(DEPDIR)/audacity-AButton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/AButton.cpp' object='widgets/audacity-AButton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-AButton.obj `if test -f 'widgets/AButton.cpp'; then $(CYGPATH_W) 'widgets/AButton.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/AButton.cpp'; fi`

widgets/audacity-ASlider.o: widgets/ASlider.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ASlider.o -MD -MP -MF widgets/$(DEPDIR)/audacity-ASlider.Tpo -c -o widgets/audacity-ASlider.o `test -f 'widgets/ASlider.cpp' || echo '$(srcdir)/'`widgets/ASlider.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ASlider.Tpo widgets/$(DEPDIR)/audacity-ASlider.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ASlider.cpp' object='widgets/audacity-ASlider.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ASlider.o `test -f 'widgets/ASlider.cpp' || echo '$(srcdir)/'`widgets/ASlider.cpp

widgets/audacity-ASlider.obj: widgets/ASlider.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ASlider.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-ASlider.Tpo -c -o widgets/audacity-ASlider.obj `if test -f 'widgets/ASlider.cpp'; then $(CYGPATH_W) 'widgets/ASlider.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ASlider.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ASlider.Tpo widgets/$(DEPDIR)/audacity-ASlider.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ASlider.cpp' object='widgets/audacity-ASlider.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ASlider.obj `if test -f 'widgets/ASlider.cpp'; then $(CYGPATH_W) 'widgets/ASlider.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ASlider.cpp'; fi`

widgets/audacity-AttachableScrollBar.o: widgets/AttachableScrollBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-AttachableScrollBar.o -MD -MP -MF widgets/$(DEPDIR)/audacity-AttachableScrollBar.Tpo -c -o widgets/audacity-AttachableScrollBar.o `test -f 'widgets/AttachableScrollBar.cpp' || echo '$(srcdir)/'`widgets/AttachableScrollBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-AttachableScrollBar.Tpo widgets/$(DEPDIR)/audacity-AttachableScrollBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/AttachableScrollBar.cpp' object='widgets/audacity-AttachableScrollBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-AttachableScrollBar.o `test -f 'widgets/AttachableScrollBar.cpp' || echo '$(srcdir)/'`widgets/AttachableScrollBar.cpp

widgets/audacity-AttachableScrollBar.obj: widgets/AttachableScrollBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-AttachableScrollBar.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-AttachableScrollBar.Tpo -c -o widgets/audacity-AttachableScrollBar.obj `if test -f 'widgets/AttachableScrollBar.cpp'; then $(CYGPATH_W) 'widgets/AttachableScrollBar.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/AttachableScrollBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-AttachableScrollBar.Tpo widgets/$(DEPDIR)/audacity-AttachableScrollBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/AttachableScrollBar.cpp' object='widgets/audacity-AttachableScrollBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-AttachableScrollBar.obj `if test -f 'widgets/AttachableScrollBar.cpp'; then $(CYGPATH_W) 'widgets/AttachableScrollBar.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/AttachableScrollBar.cpp'; fi`

widgets/audacity-ErrorDialog.o: widgets/ErrorDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ErrorDialog.o -MD -MP -MF widgets/$(DEPDIR)/audacity-ErrorDialog.Tpo -c -o widgets/audacity-ErrorDialog.o `test -f 'widgets/ErrorDialog.cpp' || echo '$(srcdir)/'`widgets/ErrorDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ErrorDialog.Tpo widgets/$(DEPDIR)/audacity-ErrorDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ErrorDialog.cpp' object='widgets/audacity-ErrorDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ErrorDialog.o `test -f 'widgets/ErrorDialog.cpp' || echo '$(srcdir)/'`widgets/ErrorDialog.cpp

widgets/audacity-ErrorDialog.obj: widgets/ErrorDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ErrorDialog.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-ErrorDialog.Tpo -c -o widgets/audacity-ErrorDialog.obj `if test -f 'widgets/ErrorDialog.cpp'; then $(CYGPATH_W) 'widgets/ErrorDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ErrorDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ErrorDialog.Tpo widgets/$(DEPDIR)/audacity-ErrorDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ErrorDialog.cpp' object='widgets/audacity-ErrorDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ErrorDialog.obj `if test -f 'widgets/ErrorDialog.cpp'; then $(CYGPATH_W) 'widgets/ErrorDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ErrorDialog.cpp'; fi`

widgets/audacity-ExpandingToolBar.o: widgets/ExpandingToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ExpandingToolBar.o -MD -MP -MF widgets/$(DEPDIR)/audacity-ExpandingToolBar.Tpo -c -o widgets/audacity-ExpandingToolBar.o `test -f 'widgets/ExpandingToolBar.cpp' || echo '$(srcdir)/'`widgets/ExpandingToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ExpandingToolBar.Tpo widgets/$(DEPDIR)/audacity-ExpandingToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ExpandingToolBar.cpp' object='widgets/audacity-ExpandingToolBar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ExpandingToolBar.o `test -f 'widgets/ExpandingToolBar.cpp' || echo '$(srcdir)/'`widgets/ExpandingToolBar.cpp

widgets/audacity-ExpandingToolBar.obj: widgets/ExpandingToolBar.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ExpandingToolBar.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-ExpandingToolBar.Tpo -c -o widgets/audacity-ExpandingToolBar.obj `if test -f 'widgets/ExpandingToolBar.cpp'; then $(CYGPATH_W) 'widgets/ExpandingToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ExpandingToolBar.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ExpandingToolBar.Tpo widgets/$(DEPDIR)/audacity-ExpandingToolBar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ExpandingToolBar.cpp' object='widgets/audacity-ExpandingToolBar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ExpandingToolBar.obj `if test -f 'widgets/ExpandingToolBar.cpp'; then $(CYGPATH_W) 'widgets/ExpandingToolBar.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ExpandingToolBar.cpp'; fi`

widgets/audacity-FileHistory.o: widgets/FileHistory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-FileHistory.o -MD -MP -MF widgets/$(DEPDIR)/audacity-FileHistory.Tpo -c -o widgets/audacity-FileHistory.o `test -f 'widgets/FileHistory.cpp' || echo '$(srcdir)/'`widgets/FileHistory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-FileHistory.Tpo widgets/$(DEPDIR)/audacity-FileHistory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/FileHistory.cpp' object='widgets/audacity-FileHistory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-FileHistory.o `test -f 'widgets/FileHistory.cpp' || echo '$(srcdir)/'`widgets/FileHistory.cpp

widgets/audacity-FileHistory.obj: widgets/FileHistory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-FileHistory.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-FileHistory.Tpo -c -o widgets/audacity-FileHistory.obj `if test -f 'widgets/FileHistory.cpp'; then $(CYGPATH_W) 'widgets/FileHistory.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/FileHistory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-FileHistory.Tpo widgets/$(DEPDIR)/audacity-FileHistory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/FileHistory.cpp' object='widgets/audacity-FileHistory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-FileHistory.obj `if test -f 'widgets/FileHistory.cpp'; then $(CYGPATH_W) 'widgets/FileHistory.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/FileHistory.cpp'; fi`

widgets/audacity-Grabber.o: widgets/Grabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Grabber.o -MD -MP -MF widgets/$(DEPDIR)/audacity-Grabber.Tpo -c -o widgets/audacity-Grabber.o `test -f 'widgets/Grabber.cpp' || echo '$(srcdir)/'`widgets/Grabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Grabber.Tpo widgets/$(DEPDIR)/audacity-Grabber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Grabber.cpp' object='widgets/audacity-Grabber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Grabber.o `test -f 'widgets/Grabber.cpp' || echo '$(srcdir)/'`widgets/Grabber.cpp

widgets/audacity-Grabber.obj: widgets/Grabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Grabber.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-Grabber.Tpo -c -o widgets/audacity-Grabber.obj `if test -f 'widgets/Grabber.cpp'; then $(CYGPATH_W) 'widgets/Grabber.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Grabber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Grabber.Tpo widgets/$(DEPDIR)/audacity-Grabber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Grabber.cpp' object='widgets/audacity-Grabber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Grabber.obj `if test -f 'widgets/Grabber.cpp'; then $(CYGPATH_W) 'widgets/Grabber.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Grabber.cpp'; fi`

widgets/audacity-Grid.o: widgets/Grid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Grid.o -MD -MP -MF widgets/$(DEPDIR)/audacity-Grid.Tpo -c -o widgets/audacity-Grid.o `test -f 'widgets/Grid.cpp' || echo '$(srcdir)/'`widgets/Grid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Grid.Tpo widgets/$(DEPDIR)/audacity-Grid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Grid.cpp' object='widgets/audacity-Grid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Grid.o `test -f 'widgets/Grid.cpp' || echo '$(srcdir)/'`widgets/Grid.cpp

widgets/audacity-Grid.obj: widgets/Grid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Grid.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-Grid.Tpo -c -o widgets/audacity-Grid.obj `if test -f 'widgets/Grid.cpp'; then $(CYGPATH_W) 'widgets/Grid.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Grid.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Grid.Tpo widgets/$(DEPDIR)/audacity-Grid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Grid.cpp' object='widgets/audacity-Grid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Grid.obj `if test -f 'widgets/Grid.cpp'; then $(CYGPATH_W) 'widgets/Grid.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Grid.cpp'; fi`

widgets/audacity-HelpSystem.o: widgets/HelpSystem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-HelpSystem.o -MD -MP -MF widgets/$(DEPDIR)/audacity-HelpSystem.Tpo -c -o widgets/audacity-HelpSystem.o `test -f 'widgets/HelpSystem.cpp' || echo '$(srcdir)/'`widgets/HelpSystem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-HelpSystem.Tpo widgets/$(DEPDIR)/audacity-HelpSystem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/HelpSystem.cpp' object='widgets/audacity-HelpSystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-HelpSystem.o `test -f 'widgets/HelpSystem.cpp' || echo '$(srcdir)/'`widgets/HelpSystem.cpp

widgets/audacity-HelpSystem.obj: widgets/HelpSystem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-HelpSystem.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-HelpSystem.Tpo -c -o widgets/audacity-HelpSystem.obj `if test -f 'widgets/HelpSystem.cpp'; then $(CYGPATH_W) 'widgets/HelpSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/HelpSystem.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-HelpSystem.Tpo widgets/$(DEPDIR)/audacity-HelpSystem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/HelpSystem.cpp' object='widgets/audacity-HelpSystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-HelpSystem.obj `if test -f 'widgets/HelpSystem.cpp'; then $(CYGPATH_W) 'widgets/HelpSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/HelpSystem.cpp'; fi`

widgets/audacity-HtmlWindow.o: widgets/HtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-HtmlWindow.o -MD -MP -MF widgets/$(DEPDIR)/audacity-HtmlWindow.Tpo -c -o widgets/audacity-HtmlWindow.o `test -f 'widgets/HtmlWindow.cpp' || echo '$(srcdir)/'`widgets/HtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-HtmlWindow.Tpo widgets/$(DEPDIR)/audacity-HtmlWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/HtmlWindow.cpp' object='widgets/audacity-HtmlWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-HtmlWindow.o `test -f 'widgets/HtmlWindow.cpp' || echo '$(srcdir)/'`widgets/HtmlWindow.cpp

widgets/audacity-HtmlWindow.obj: widgets/HtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-HtmlWindow.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-HtmlWindow.Tpo -c -o widgets/audacity-HtmlWindow.obj `if test -f 'widgets/HtmlWindow.cpp'; then $(CYGPATH_W) 'widgets/HtmlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/HtmlWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-HtmlWindow.Tpo widgets/$(DEPDIR)/audacity-HtmlWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/HtmlWindow.cpp' object='widgets/audacity-HtmlWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-HtmlWindow.obj `if test -f 'widgets/HtmlWindow.cpp'; then $(CYGPATH_W) 'widgets/HtmlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/HtmlWindow.cpp'; fi`

widgets/audacity-ImageRoll.o: widgets/ImageRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ImageRoll.o -MD -MP -MF widgets/$(DEPDIR)/audacity-ImageRoll.Tpo -c -o widgets/audacity-ImageRoll.o `test -f 'widgets/ImageRoll.cpp' || echo '$(srcdir)/'`widgets/ImageRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ImageRoll.Tpo widgets/$(DEPDIR)/audacity-ImageRoll.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ImageRoll.cpp' object='widgets/audacity-ImageRoll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ImageRoll.o `test -f 'widgets/ImageRoll.cpp' || echo '$(srcdir)/'`widgets/ImageRoll.cpp

widgets/audacity-ImageRoll.obj: widgets/ImageRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ImageRoll.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-ImageRoll.Tpo -c -o widgets/audacity-ImageRoll.obj `if test -f 'widgets/ImageRoll.cpp'; then $(CYGPATH_W) 'widgets/ImageRoll.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ImageRoll.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ImageRoll.Tpo widgets/$(DEPDIR)/audacity-ImageRoll.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ImageRoll.cpp' object='widgets/audacity-ImageRoll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ImageRoll.obj `if test -f 'widgets/ImageRoll.cpp'; then $(CYGPATH_W) 'widgets/ImageRoll.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ImageRoll.cpp'; fi`

widgets/audacity-KeyView.o: widgets/KeyView.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-KeyView.o -MD -MP -MF widgets/$(DEPDIR)/audacity-KeyView.Tpo -c -o widgets/audacity-KeyView.o `test -f 'widgets/KeyView.cpp' || echo '$(srcdir)/'`widgets/KeyView.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-KeyView.Tpo widgets/$(DEPDIR)/audacity-KeyView.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/KeyView.cpp' object='widgets/audacity-KeyView.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-KeyView.o `test -f 'widgets/KeyView.cpp' || echo '$(srcdir)/'`widgets/KeyView.cpp

widgets/audacity-KeyView.obj: widgets/KeyView.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-KeyView.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-KeyView.Tpo -c -o widgets/audacity-KeyView.obj `if test -f 'widgets/KeyView.cpp'; then $(CYGPATH_W) 'widgets/KeyView.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/KeyView.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-KeyView.Tpo widgets/$(DEPDIR)/audacity-KeyView.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/KeyView.cpp' object='widgets/audacity-KeyView.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-KeyView.obj `if test -f 'widgets/KeyView.cpp'; then $(CYGPATH_W) 'widgets/KeyView.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/KeyView.cpp'; fi`

widgets/audacity-LinkingHtmlWindow.o: widgets/LinkingHtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-LinkingHtmlWindow.o -MD -MP -MF widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Tpo -c -o widgets/audacity-LinkingHtmlWindow.o `test -f 'widgets/LinkingHtmlWindow.cpp' || echo '$(srcdir)/'`widgets/LinkingHtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Tpo widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/LinkingHtmlWindow.cpp' object='widgets/audacity-LinkingHtmlWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-LinkingHtmlWindow.o `test -f 'widgets/LinkingHtmlWindow.cpp' || echo '$(srcdir)/'`widgets/LinkingHtmlWindow.cpp

widgets/audacity-LinkingHtmlWindow.obj: widgets/LinkingHtmlWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-LinkingHtmlWindow.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Tpo -c -o widgets/audacity-LinkingHtmlWindow.obj `if test -f 'widgets/LinkingHtmlWindow.cpp'; then $(CYGPATH_W) 'widgets/LinkingHtmlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/LinkingHtmlWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Tpo widgets/$(DEPDIR)/audacity-LinkingHtmlWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/LinkingHtmlWindow.cpp' object='widgets/audacity-LinkingHtmlWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-LinkingHtmlWindow.obj `if test -f 'widgets/LinkingHtmlWindow.cpp'; then $(CYGPATH_W) 'widgets/LinkingHtmlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/LinkingHtmlWindow.cpp'; fi`

widgets/audacity-Meter.o: widgets/Meter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Meter.o -MD -MP -MF widgets/$(DEPDIR)/audacity-Meter.Tpo -c -o widgets/audacity-Meter.o `test -f 'widgets/Meter.cpp' || echo '$(srcdir)/'`widgets/Meter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Meter.Tpo widgets/$(DEPDIR)/audacity-Meter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Meter.cpp' object='widgets/audacity-Meter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Meter.o `test -f 'widgets/Meter.cpp' || echo '$(srcdir)/'`widgets/Meter.cpp

widgets/audacity-Meter.obj: widgets/Meter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Meter.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-Meter.Tpo -c -o widgets/audacity-Meter.obj `if test -f 'widgets/Meter.cpp'; then $(CYGPATH_W) 'widgets/Meter.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Meter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Meter.Tpo widgets/$(DEPDIR)/audacity-Meter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Meter.cpp' object='widgets/audacity-Meter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Meter.obj `if test -f 'widgets/Meter.cpp'; then $(CYGPATH_W) 'widgets/Meter.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Meter.cpp'; fi`

widgets/audacity-MultiDialog.o: widgets/MultiDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-MultiDialog.o -MD -MP -MF widgets/$(DEPDIR)/audacity-MultiDialog.Tpo -c -o widgets/audacity-MultiDialog.o `test -f 'widgets/MultiDialog.cpp' || echo '$(srcdir)/'`widgets/MultiDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-MultiDialog.Tpo widgets/$(DEPDIR)/audacity-MultiDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/MultiDialog.cpp' object='widgets/audacity-MultiDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-MultiDialog.o `test -f 'widgets/MultiDialog.cpp' || echo '$(srcdir)/'`widgets/MultiDialog.cpp

widgets/audacity-MultiDialog.obj: widgets/MultiDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-MultiDialog.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-MultiDialog.Tpo -c -o widgets/audacity-MultiDialog.obj `if test -f 'widgets/MultiDialog.cpp'; then $(CYGPATH_W) 'widgets/MultiDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/MultiDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-MultiDialog.Tpo widgets/$(DEPDIR)/audacity-MultiDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/MultiDialog.cpp' object='widgets/audacity-MultiDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-MultiDialog.obj `if test -f 'widgets/MultiDialog.cpp'; then $(CYGPATH_W) 'widgets/MultiDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/MultiDialog.cpp'; fi`

widgets/audacity-NumericTextCtrl.o: widgets/NumericTextCtrl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-NumericTextCtrl.o -MD -MP -MF widgets/$(DEPDIR)/audacity-NumericTextCtrl.Tpo -c -o widgets/audacity-NumericTextCtrl.o `test -f 'widgets/NumericTextCtrl.cpp' || echo '$(srcdir)/'`widgets/NumericTextCtrl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-NumericTextCtrl.Tpo widgets/$(DEPDIR)/audacity-NumericTextCtrl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/NumericTextCtrl.cpp' object='widgets/audacity-NumericTextCtrl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-NumericTextCtrl.o `test -f 'widgets/NumericTextCtrl.cpp' || echo '$(srcdir)/'`widgets/NumericTextCtrl.cpp

widgets/audacity-NumericTextCtrl.obj: widgets/NumericTextCtrl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-NumericTextCtrl.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-NumericTextCtrl.Tpo -c -o widgets/audacity-NumericTextCtrl.obj `if test -f 'widgets/NumericTextCtrl.cpp'; then $(CYGPATH_W) 'widgets/NumericTextCtrl.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/NumericTextCtrl.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-NumericTextCtrl.Tpo widgets/$(DEPDIR)/audacity-NumericTextCtrl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/NumericTextCtrl.cpp' object='widgets/audacity-NumericTextCtrl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-NumericTextCtrl.obj `if test -f 'widgets/NumericTextCtrl.cpp'; then $(CYGPATH_W) 'widgets/NumericTextCtrl.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/NumericTextCtrl.cpp'; fi`

widgets/audacity-numformatter.o: widgets/numformatter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-numformatter.o -MD -MP -MF widgets/$(DEPDIR)/audacity-numformatter.Tpo -c -o widgets/audacity-numformatter.o `test -f 'widgets/numformatter.cpp' || echo '$(srcdir)/'`widgets/numformatter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-numformatter.Tpo widgets/$(DEPDIR)/audacity-numformatter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/numformatter.cpp' object='widgets/audacity-numformatter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-numformatter.o `test -f 'widgets/numformatter.cpp' || echo '$(srcdir)/'`widgets/numformatter.cpp

widgets/audacity-numformatter.obj: widgets/numformatter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-numformatter.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-numformatter.Tpo -c -o widgets/audacity-numformatter.obj `if test -f 'widgets/numformatter.cpp'; then $(CYGPATH_W) 'widgets/numformatter.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/numformatter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-numformatter.Tpo widgets/$(DEPDIR)/audacity-numformatter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/numformatter.cpp' object='widgets/audacity-numformatter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-numformatter.obj `if test -f 'widgets/numformatter.cpp'; then $(CYGPATH_W) 'widgets/numformatter.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/numformatter.cpp'; fi`

widgets/audacity-ProgressDialog.o: widgets/ProgressDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ProgressDialog.o -MD -MP -MF widgets/$(DEPDIR)/audacity-ProgressDialog.Tpo -c -o widgets/audacity-ProgressDialog.o `test -f 'widgets/ProgressDialog.cpp' || echo '$(srcdir)/'`widgets/ProgressDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ProgressDialog.Tpo widgets/$(DEPDIR)/audacity-ProgressDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ProgressDialog.cpp' object='widgets/audacity-ProgressDialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ProgressDialog.o `test -f 'widgets/ProgressDialog.cpp' || echo '$(srcdir)/'`widgets/ProgressDialog.cpp

widgets/audacity-ProgressDialog.obj: widgets/ProgressDialog.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-ProgressDialog.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-ProgressDialog.Tpo -c -o widgets/audacity-ProgressDialog.obj `if test -f 'widgets/ProgressDialog.cpp'; then $(CYGPATH_W) 'widgets/ProgressDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ProgressDialog.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-ProgressDialog.Tpo widgets/$(DEPDIR)/audacity-ProgressDialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/ProgressDialog.cpp' object='widgets/audacity-ProgressDialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-ProgressDialog.obj `if test -f 'widgets/ProgressDialog.cpp'; then $(CYGPATH_W) 'widgets/ProgressDialog.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/ProgressDialog.cpp'; fi`

widgets/audacity-Ruler.o: widgets/Ruler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Ruler.o -MD -MP -MF widgets/$(DEPDIR)/audacity-Ruler.Tpo -c -o widgets/audacity-Ruler.o `test -f 'widgets/Ruler.cpp' || echo '$(srcdir)/'`widgets/Ruler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Ruler.Tpo widgets/$(DEPDIR)/audacity-Ruler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Ruler.cpp' object='widgets/audacity-Ruler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Ruler.o `test -f 'widgets/Ruler.cpp' || echo '$(srcdir)/'`widgets/Ruler.cpp

widgets/audacity-Ruler.obj: widgets/Ruler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Ruler.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-Ruler.Tpo -c -o widgets/audacity-Ruler.obj `if test -f 'widgets/Ruler.cpp'; then $(CYGPATH_W) 'widgets/Ruler.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Ruler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Ruler.Tpo widgets/$(DEPDIR)/audacity-Ruler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Ruler.cpp' object='widgets/audacity-Ruler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Ruler.obj `if test -f 'widgets/Ruler.cpp'; then $(CYGPATH_W) 'widgets/Ruler.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Ruler.cpp'; fi`

widgets/audacity-valnum.o: widgets/valnum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-valnum.o -MD -MP -MF widgets/$(DEPDIR)/audacity-valnum.Tpo -c -o widgets/audacity-valnum.o `test -f 'widgets/valnum.cpp' || echo '$(srcdir)/'`widgets/valnum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-valnum.Tpo widgets/$(DEPDIR)/audacity-valnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/valnum.cpp' object='widgets/audacity-valnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-valnum.o `test -f 'widgets/valnum.cpp' || echo '$(srcdir)/'`widgets/valnum.cpp

widgets/audacity-valnum.obj: widgets/valnum.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-valnum.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-valnum.Tpo -c -o widgets/audacity-valnum.obj `if test -f 'widgets/valnum.cpp'; then $(CYGPATH_W) 'widgets/valnum.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/valnum.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-valnum.Tpo widgets/$(DEPDIR)/audacity-valnum.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/valnum.cpp' object='widgets/audacity-valnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-valnum.obj `if test -f 'widgets/valnum.cpp'; then $(CYGPATH_W) 'widgets/valnum.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/valnum.cpp'; fi`

widgets/audacity-Warning.o: widgets/Warning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Warning.o -MD -MP -MF widgets/$(DEPDIR)/audacity-Warning.Tpo -c -o widgets/audacity-Warning.o `test -f 'widgets/Warning.cpp' || echo '$(srcdir)/'`widgets/Warning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Warning.Tpo widgets/$(DEPDIR)/audacity-Warning.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Warning.cpp' object='widgets/audacity-Warning.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Warning.o `test -f 'widgets/Warning.cpp' || echo '$(srcdir)/'`widgets/Warning.cpp

widgets/audacity-Warning.obj: widgets/Warning.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT widgets/audacity-Warning.obj -MD -MP -MF widgets/$(DEPDIR)/audacity-Warning.Tpo -c -o widgets/audacity-Warning.obj `if test -f 'widgets/Warning.cpp'; then $(CYGPATH_W) 'widgets/Warning.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Warning.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) widgets/$(DEPDIR)/audacity-Warning.Tpo widgets/$(DEPDIR)/audacity-Warning.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='widgets/Warning.cpp' object='widgets/audacity-Warning.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o widgets/audacity-Warning.obj `if test -f 'widgets/Warning.cpp'; then $(CYGPATH_W) 'widgets/Warning.cpp'; else $(CYGPATH_W) '$(srcdir)/widgets/Warning.cpp'; fi`

xml/audacity-XMLFileReader.o: xml/XMLFileReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLFileReader.o -MD -MP -MF xml/$(DEPDIR)/audacity-XMLFileReader.Tpo -c -o xml/audacity-XMLFileReader.o `test -f 'xml/XMLFileReader.cpp' || echo '$(srcdir)/'`xml/XMLFileReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLFileReader.Tpo xml/$(DEPDIR)/audacity-XMLFileReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLFileReader.cpp' object='xml/audacity-XMLFileReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLFileReader.o `test -f 'xml/XMLFileReader.cpp' || echo '$(srcdir)/'`xml/XMLFileReader.cpp

xml/audacity-XMLFileReader.obj: xml/XMLFileReader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLFileReader.obj -MD -MP -MF xml/$(DEPDIR)/audacity-XMLFileReader.Tpo -c -o xml/audacity-XMLFileReader.obj `if test -f 'xml/XMLFileReader.cpp'; then $(CYGPATH_W) 'xml/XMLFileReader.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLFileReader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLFileReader.Tpo xml/$(DEPDIR)/audacity-XMLFileReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLFileReader.cpp' object='xml/audacity-XMLFileReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLFileReader.obj `if test -f 'xml/XMLFileReader.cpp'; then $(CYGPATH_W) 'xml/XMLFileReader.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLFileReader.cpp'; fi`

xml/audacity-XMLWriter.o: xml/XMLWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLWriter.o -MD -MP -MF xml/$(DEPDIR)/audacity-XMLWriter.Tpo -c -o xml/audacity-XMLWriter.o `test -f 'xml/XMLWriter.cpp' || echo '$(srcdir)/'`xml/XMLWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLWriter.Tpo xml/$(DEPDIR)/audacity-XMLWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLWriter.cpp' object='xml/audacity-XMLWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLWriter.o `test -f 'xml/XMLWriter.cpp' || echo '$(srcdir)/'`xml/XMLWriter.cpp

xml/audacity-XMLWriter.obj: xml/XMLWriter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT xml/audacity-XMLWriter.obj -MD -MP -MF xml/$(DEPDIR)/audacity-XMLWriter.Tpo -c -o xml/audacity-XMLWriter.obj `if test -f 'xml/XMLWriter.cpp'; then $(CYGPATH_W) 'xml/XMLWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLWriter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) xml/$(DEPDIR)/audacity-XMLWriter.Tpo xml/$(DEPDIR)/audacity-XMLWriter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='xml/XMLWriter.cpp' object='xml/audacity-XMLWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o xml/audacity-XMLWriter.obj `if test -f 'xml/XMLWriter.cpp'; then $(CYGPATH_W) 'xml/XMLWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/xml/XMLWriter.cpp'; fi`

effects/audiounits/audacity-AudioUnitEffect.o: effects/audiounits/AudioUnitEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audiounits/audacity-AudioUnitEffect.o -MD -MP -MF effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Tpo -c -o effects/audiounits/audacity-AudioUnitEffect.o `test -f 'effects/audiounits/AudioUnitEffect.cpp' || echo '$(srcdir)/'`effects/audiounits/AudioUnitEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Tpo effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/audiounits/AudioUnitEffect.cpp' object='effects/audiounits/audacity-AudioUnitEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audiounits/audacity-AudioUnitEffect.o `test -f 'effects/audiounits/AudioUnitEffect.cpp' || echo '$(srcdir)/'`effects/audiounits/AudioUnitEffect.cpp

effects/audiounits/audacity-AudioUnitEffect.obj: effects/audiounits/AudioUnitEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/audiounits/audacity-AudioUnitEffect.obj -MD -MP -MF effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Tpo -c -o effects/audiounits/audacity-AudioUnitEffect.obj `if test -f 'effects/audiounits/AudioUnitEffect.cpp'; then $(CYGPATH_W) 'effects/audiounits/AudioUnitEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/audiounits/AudioUnitEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Tpo effects/audiounits/$(DEPDIR)/audacity-AudioUnitEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/audiounits/AudioUnitEffect.cpp' object='effects/audiounits/audacity-AudioUnitEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/audiounits/audacity-AudioUnitEffect.obj `if test -f 'effects/audiounits/AudioUnitEffect.cpp'; then $(CYGPATH_W) 'effects/audiounits/AudioUnitEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/audiounits/AudioUnitEffect.cpp'; fi`

export/audacity-ExportFFmpeg.o: export/ExportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFFmpeg.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportFFmpeg.Tpo -c -o export/audacity-ExportFFmpeg.o `test -f 'export/ExportFFmpeg.cpp' || echo '$(srcdir)/'`export/ExportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFFmpeg.Tpo export/$(DEPDIR)/audacity-ExportFFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFFmpeg.cpp' object='export/audacity-ExportFFmpeg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFFmpeg.o `test -f 'export/ExportFFmpeg.cpp' || echo '$(srcdir)/'`export/ExportFFmpeg.cpp

export/audacity-ExportFFmpeg.obj: export/ExportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFFmpeg.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportFFmpeg.Tpo -c -o export/audacity-ExportFFmpeg.obj `if test -f 'export/ExportFFmpeg.cpp'; then $(CYGPATH_W) 'export/ExportFFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFFmpeg.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFFmpeg.Tpo export/$(DEPDIR)/audacity-ExportFFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFFmpeg.cpp' object='export/audacity-ExportFFmpeg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFFmpeg.obj `if test -f 'export/ExportFFmpeg.cpp'; then $(CYGPATH_W) 'export/ExportFFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFFmpeg.cpp'; fi`

export/audacity-ExportFFmpegDialogs.o: export/ExportFFmpegDialogs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFFmpegDialogs.o -MD -MP -MF export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Tpo -c -o export/audacity-ExportFFmpegDialogs.o `test -f 'export/ExportFFmpegDialogs.cpp' || echo '$(srcdir)/'`export/ExportFFmpegDialogs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Tpo export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFFmpegDialogs.cpp' object='export/audacity-ExportFFmpegDialogs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFFmpegDialogs.o `test -f 'export/ExportFFmpegDialogs.cpp' || echo '$(srcdir)/'`export/ExportFFmpegDialogs.cpp

export/audacity-ExportFFmpegDialogs.obj: export/ExportFFmpegDialogs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT export/audacity-ExportFFmpegDialogs.obj -MD -MP -MF export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Tpo -c -o export/audacity-ExportFFmpegDialogs.obj `if test -f 'export/ExportFFmpegDialogs.cpp'; then $(CYGPATH_W) 'export/ExportFFmpegDialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFFmpegDialogs.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Tpo export/$(DEPDIR)/audacity-ExportFFmpegDialogs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='export/ExportFFmpegDialogs.cpp' object='export/audacity-ExportFFmpegDialogs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o export/audacity-ExportFFmpegDialogs.obj `if test -f 'export/ExportFFmpegDialogs.cpp'; then $(CYGPATH_W) 'export/ExportFFmpegDialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/export/ExportFFmpegDialogs.cpp'; fi`

import/audacity-ImportFFmpeg.o: import/ImportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportFFmpeg.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportFFmpeg.Tpo -c -o import/audacity-ImportFFmpeg.o `test -f 'import/ImportFFmpeg.cpp' || echo '$(srcdir)/'`import/ImportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportFFmpeg.Tpo import/$(DEPDIR)/audacity-ImportFFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportFFmpeg.cpp' object='import/audacity-ImportFFmpeg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportFFmpeg.o `test -f 'import/ImportFFmpeg.cpp' || echo '$(srcdir)/'`import/ImportFFmpeg.cpp

import/audacity-ImportFFmpeg.obj: import/ImportFFmpeg.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportFFmpeg.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportFFmpeg.Tpo -c -o import/audacity-ImportFFmpeg.obj `if test -f 'import/ImportFFmpeg.cpp'; then $(CYGPATH_W) 'import/ImportFFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportFFmpeg.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportFFmpeg.Tpo import/$(DEPDIR)/audacity-ImportFFmpeg.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportFFmpeg.cpp' object='import/audacity-ImportFFmpeg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportFFmpeg.obj `if test -f 'import/ImportFFmpeg.cpp'; then $(CYGPATH_W) 'import/ImportFFmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportFFmpeg.cpp'; fi`

import/audacity-ImportGStreamer.o: import/ImportGStreamer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportGStreamer.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportGStreamer.Tpo -c -o import/audacity-ImportGStreamer.o `test -f 'import/ImportGStreamer.cpp' || echo '$(srcdir)/'`import/ImportGStreamer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportGStreamer.Tpo import/$(DEPDIR)/audacity-ImportGStreamer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportGStreamer.cpp' object='import/audacity-ImportGStreamer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportGStreamer.o `test -f 'import/ImportGStreamer.cpp' || echo '$(srcdir)/'`import/ImportGStreamer.cpp

import/audacity-ImportGStreamer.obj: import/ImportGStreamer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportGStreamer.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportGStreamer.Tpo -c -o import/audacity-ImportGStreamer.obj `if test -f 'import/ImportGStreamer.cpp'; then $(CYGPATH_W) 'import/ImportGStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportGStreamer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportGStreamer.Tpo import/$(DEPDIR)/audacity-ImportGStreamer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportGStreamer.cpp' object='import/audacity-ImportGStreamer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportGStreamer.obj `if test -f 'import/ImportGStreamer.cpp'; then $(CYGPATH_W) 'import/ImportGStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportGStreamer.cpp'; fi`

effects/ladspa/audacity-LadspaEffect.o: effects/ladspa/LadspaEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/ladspa/audacity-LadspaEffect.o -MD -MP -MF effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Tpo -c -o effects/ladspa/audacity-LadspaEffect.o `test -f 'effects/ladspa/LadspaEffect.cpp' || echo '$(srcdir)/'`effects/ladspa/LadspaEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Tpo effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ladspa/LadspaEffect.cpp' object='effects/ladspa/audacity-LadspaEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/ladspa/audacity-LadspaEffect.o `test -f 'effects/ladspa/LadspaEffect.cpp' || echo '$(srcdir)/'`effects/ladspa/LadspaEffect.cpp

effects/ladspa/audacity-LadspaEffect.obj: effects/ladspa/LadspaEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/ladspa/audacity-LadspaEffect.obj -MD -MP -MF effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Tpo -c -o effects/ladspa/audacity-LadspaEffect.obj `if test -f 'effects/ladspa/LadspaEffect.cpp'; then $(CYGPATH_W) 'effects/ladspa/LadspaEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ladspa/LadspaEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Tpo effects/ladspa/$(DEPDIR)/audacity-LadspaEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/ladspa/LadspaEffect.cpp' object='effects/ladspa/audacity-LadspaEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/ladspa/audacity-LadspaEffect.obj `if test -f 'effects/ladspa/LadspaEffect.cpp'; then $(CYGPATH_W) 'effects/ladspa/LadspaEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/ladspa/LadspaEffect.cpp'; fi`

ondemand/audacity-ODDecodeFlacTask.o: ondemand/ODDecodeFlacTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeFlacTask.o -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Tpo -c -o ondemand/audacity-ODDecodeFlacTask.o `test -f 'ondemand/ODDecodeFlacTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeFlacTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeFlacTask.cpp' object='ondemand/audacity-ODDecodeFlacTask.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeFlacTask.o `test -f 'ondemand/ODDecodeFlacTask.cpp' || echo '$(srcdir)/'`ondemand/ODDecodeFlacTask.cpp

ondemand/audacity-ODDecodeFlacTask.obj: ondemand/ODDecodeFlacTask.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT ondemand/audacity-ODDecodeFlacTask.obj -MD -MP -MF ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Tpo -c -o ondemand/audacity-ODDecodeFlacTask.obj `if test -f 'ondemand/ODDecodeFlacTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeFlacTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeFlacTask.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Tpo ondemand/$(DEPDIR)/audacity-ODDecodeFlacTask.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ondemand/ODDecodeFlacTask.cpp' object='ondemand/audacity-ODDecodeFlacTask.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o ondemand/audacity-ODDecodeFlacTask.obj `if test -f 'ondemand/ODDecodeFlacTask.cpp'; then $(CYGPATH_W) 'ondemand/ODDecodeFlacTask.cpp'; else $(CYGPATH_W) '$(srcdir)/ondemand/ODDecodeFlacTask.cpp'; fi`

effects/nyquist/audacity-LoadNyquist.o: effects/nyquist/LoadNyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/nyquist/audacity-LoadNyquist.o -MD -MP -MF effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Tpo -c -o effects/nyquist/audacity-LoadNyquist.o `test -f 'effects/nyquist/LoadNyquist.cpp' || echo '$(srcdir)/'`effects/nyquist/LoadNyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Tpo effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/nyquist/LoadNyquist.cpp' object='effects/nyquist/audacity-LoadNyquist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/nyquist/audacity-LoadNyquist.o `test -f 'effects/nyquist/LoadNyquist.cpp' || echo '$(srcdir)/'`effects/nyquist/LoadNyquist.cpp

effects/nyquist/audacity-LoadNyquist.obj: effects/nyquist/LoadNyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/nyquist/audacity-LoadNyquist.obj -MD -MP -MF effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Tpo -c -o effects/nyquist/audacity-LoadNyquist.obj `if test -f 'effects/nyquist/LoadNyquist.cpp'; then $(CYGPATH_W) 'effects/nyquist/LoadNyquist.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/nyquist/LoadNyquist.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Tpo effects/nyquist/$(DEPDIR)/audacity-LoadNyquist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/nyquist/LoadNyquist.cpp' object='effects/nyquist/audacity-LoadNyquist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/nyquist/audacity-LoadNyquist.obj `if test -f 'effects/nyquist/LoadNyquist.cpp'; then $(CYGPATH_W) 'effects/nyquist/LoadNyquist.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/nyquist/LoadNyquist.cpp'; fi`

effects/nyquist/audacity-Nyquist.o: effects/nyquist/Nyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/nyquist/audacity-Nyquist.o -MD -MP -MF effects/nyquist/$(DEPDIR)/audacity-Nyquist.Tpo -c -o effects/nyquist/audacity-Nyquist.o `test -f 'effects/nyquist/Nyquist.cpp' || echo '$(srcdir)/'`effects/nyquist/Nyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/nyquist/$(DEPDIR)/audacity-Nyquist.Tpo effects/nyquist/$(DEPDIR)/audacity-Nyquist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/nyquist/Nyquist.cpp' object='effects/nyquist/audacity-Nyquist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/nyquist/audacity-Nyquist.o `test -f 'effects/nyquist/Nyquist.cpp' || echo '$(srcdir)/'`effects/nyquist/Nyquist.cpp

effects/nyquist/audacity-Nyquist.obj: effects/nyquist/Nyquist.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/nyquist/audacity-Nyquist.obj -MD -MP -MF effects/nyquist/$(DEPDIR)/audacity-Nyquist.Tpo -c -o effects/nyquist/audacity-Nyquist.obj `if test -f 'effects/nyquist/Nyquist.cpp'; then $(CYGPATH_W) 'effects/nyquist/Nyquist.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/nyquist/Nyquist.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/nyquist/$(DEPDIR)/audacity-Nyquist.Tpo effects/nyquist/$(DEPDIR)/audacity-Nyquist.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/nyquist/Nyquist.cpp' object='effects/nyquist/audacity-Nyquist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/nyquist/audacity-Nyquist.obj `if test -f 'effects/nyquist/Nyquist.cpp'; then $(CYGPATH_W) 'effects/nyquist/Nyquist.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/nyquist/Nyquist.cpp'; fi`

effects/lv2/audacity-LoadLV2.o: effects/lv2/LoadLV2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/lv2/audacity-LoadLV2.o -MD -MP -MF effects/lv2/$(DEPDIR)/audacity-LoadLV2.Tpo -c -o effects/lv2/audacity-LoadLV2.o `test -f 'effects/lv2/LoadLV2.cpp' || echo '$(srcdir)/'`effects/lv2/LoadLV2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/lv2/$(DEPDIR)/audacity-LoadLV2.Tpo effects/lv2/$(DEPDIR)/audacity-LoadLV2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/lv2/LoadLV2.cpp' object='effects/lv2/audacity-LoadLV2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/lv2/audacity-LoadLV2.o `test -f 'effects/lv2/LoadLV2.cpp' || echo '$(srcdir)/'`effects/lv2/LoadLV2.cpp

effects/lv2/audacity-LoadLV2.obj: effects/lv2/LoadLV2.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/lv2/audacity-LoadLV2.obj -MD -MP -MF effects/lv2/$(DEPDIR)/audacity-LoadLV2.Tpo -c -o effects/lv2/audacity-LoadLV2.obj `if test -f 'effects/lv2/LoadLV2.cpp'; then $(CYGPATH_W) 'effects/lv2/LoadLV2.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/lv2/LoadLV2.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/lv2/$(DEPDIR)/audacity-LoadLV2.Tpo effects/lv2/$(DEPDIR)/audacity-LoadLV2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/lv2/LoadLV2.cpp' object='effects/lv2/audacity-LoadLV2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/lv2/audacity-LoadLV2.obj `if test -f 'effects/lv2/LoadLV2.cpp'; then $(CYGPATH_W) 'effects/lv2/LoadLV2.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/lv2/LoadLV2.cpp'; fi`

effects/lv2/audacity-LV2Effect.o: effects/lv2/LV2Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/lv2/audacity-LV2Effect.o -MD -MP -MF effects/lv2/$(DEPDIR)/audacity-LV2Effect.Tpo -c -o effects/lv2/audacity-LV2Effect.o `test -f 'effects/lv2/LV2Effect.cpp' || echo '$(srcdir)/'`effects/lv2/LV2Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/lv2/$(DEPDIR)/audacity-LV2Effect.Tpo effects/lv2/$(DEPDIR)/audacity-LV2Effect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/lv2/LV2Effect.cpp' object='effects/lv2/audacity-LV2Effect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/lv2/audacity-LV2Effect.o `test -f 'effects/lv2/LV2Effect.cpp' || echo '$(srcdir)/'`effects/lv2/LV2Effect.cpp

effects/lv2/audacity-LV2Effect.obj: effects/lv2/LV2Effect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/lv2/audacity-LV2Effect.obj -MD -MP -MF effects/lv2/$(DEPDIR)/audacity-LV2Effect.Tpo -c -o effects/lv2/audacity-LV2Effect.obj `if test -f 'effects/lv2/LV2Effect.cpp'; then $(CYGPATH_W) 'effects/lv2/LV2Effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/lv2/LV2Effect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/lv2/$(DEPDIR)/audacity-LV2Effect.Tpo effects/lv2/$(DEPDIR)/audacity-LV2Effect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/lv2/LV2Effect.cpp' object='effects/lv2/audacity-LV2Effect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/lv2/audacity-LV2Effect.obj `if test -f 'effects/lv2/LV2Effect.cpp'; then $(CYGPATH_W) 'effects/lv2/LV2Effect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/lv2/LV2Effect.cpp'; fi`

audacity-NoteTrack.o: NoteTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-NoteTrack.o -MD -MP -MF $(DEPDIR)/audacity-NoteTrack.Tpo -c -o audacity-NoteTrack.o `test -f 'NoteTrack.cpp' || echo '$(srcdir)/'`NoteTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-NoteTrack.Tpo $(DEPDIR)/audacity-NoteTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteTrack.cpp' object='audacity-NoteTrack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-NoteTrack.o `test -f 'NoteTrack.cpp' || echo '$(srcdir)/'`NoteTrack.cpp

audacity-NoteTrack.obj: NoteTrack.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT audacity-NoteTrack.obj -MD -MP -MF $(DEPDIR)/audacity-NoteTrack.Tpo -c -o audacity-NoteTrack.obj `if test -f 'NoteTrack.cpp'; then $(CYGPATH_W) 'NoteTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteTrack.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/audacity-NoteTrack.Tpo $(DEPDIR)/audacity-NoteTrack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NoteTrack.cpp' object='audacity-NoteTrack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o audacity-NoteTrack.obj `if test -f 'NoteTrack.cpp'; then $(CYGPATH_W) 'NoteTrack.cpp'; else $(CYGPATH_W) '$(srcdir)/NoteTrack.cpp'; fi`

import/audacity-ImportMIDI.o: import/ImportMIDI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportMIDI.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportMIDI.Tpo -c -o import/audacity-ImportMIDI.o `test -f 'import/ImportMIDI.cpp' || echo '$(srcdir)/'`import/ImportMIDI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportMIDI.Tpo import/$(DEPDIR)/audacity-ImportMIDI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportMIDI.cpp' object='import/audacity-ImportMIDI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportMIDI.o `test -f 'import/ImportMIDI.cpp' || echo '$(srcdir)/'`import/ImportMIDI.cpp

import/audacity-ImportMIDI.obj: import/ImportMIDI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportMIDI.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportMIDI.Tpo -c -o import/audacity-ImportMIDI.obj `if test -f 'import/ImportMIDI.cpp'; then $(CYGPATH_W) 'import/ImportMIDI.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportMIDI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportMIDI.Tpo import/$(DEPDIR)/audacity-ImportMIDI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportMIDI.cpp' object='import/audacity-ImportMIDI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportMIDI.obj `if test -f 'import/ImportMIDI.cpp'; then $(CYGPATH_W) 'import/ImportMIDI.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportMIDI.cpp'; fi`

import/audacity-ImportQT.o: import/ImportQT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportQT.o -MD -MP -MF import/$(DEPDIR)/audacity-ImportQT.Tpo -c -o import/audacity-ImportQT.o `test -f 'import/ImportQT.cpp' || echo '$(srcdir)/'`import/ImportQT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportQT.Tpo import/$(DEPDIR)/audacity-ImportQT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportQT.cpp' object='import/audacity-ImportQT.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportQT.o `test -f 'import/ImportQT.cpp' || echo '$(srcdir)/'`import/ImportQT.cpp

import/audacity-ImportQT.obj: import/ImportQT.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT import/audacity-ImportQT.obj -MD -MP -MF import/$(DEPDIR)/audacity-ImportQT.Tpo -c -o import/audacity-ImportQT.obj `if test -f 'import/ImportQT.cpp'; then $(CYGPATH_W) 'import/ImportQT.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportQT.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) import/$(DEPDIR)/audacity-ImportQT.Tpo import/$(DEPDIR)/audacity-ImportQT.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='import/ImportQT.cpp' object='import/audacity-ImportQT.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o import/audacity-ImportQT.obj `if test -f 'import/ImportQT.cpp'; then $(CYGPATH_W) 'import/ImportQT.cpp'; else $(CYGPATH_W) '$(srcdir)/import/ImportQT.cpp'; fi`

effects/vamp/audacity-LoadVamp.o: effects/vamp/LoadVamp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/vamp/audacity-LoadVamp.o -MD -MP -MF effects/vamp/$(DEPDIR)/audacity-LoadVamp.Tpo -c -o effects/vamp/audacity-LoadVamp.o `test -f 'effects/vamp/LoadVamp.cpp' || echo '$(srcdir)/'`effects/vamp/LoadVamp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/vamp/$(DEPDIR)/audacity-LoadVamp.Tpo effects/vamp/$(DEPDIR)/audacity-LoadVamp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/vamp/LoadVamp.cpp' object='effects/vamp/audacity-LoadVamp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/vamp/audacity-LoadVamp.o `test -f 'effects/vamp/LoadVamp.cpp' || echo '$(srcdir)/'`effects/vamp/LoadVamp.cpp

effects/vamp/audacity-LoadVamp.obj: effects/vamp/LoadVamp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/vamp/audacity-LoadVamp.obj -MD -MP -MF effects/vamp/$(DEPDIR)/audacity-LoadVamp.Tpo -c -o effects/vamp/audacity-LoadVamp.obj `if test -f 'effects/vamp/LoadVamp.cpp'; then $(CYGPATH_W) 'effects/vamp/LoadVamp.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/vamp/LoadVamp.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/vamp/$(DEPDIR)/audacity-LoadVamp.Tpo effects/vamp/$(DEPDIR)/audacity-LoadVamp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/vamp/LoadVamp.cpp' object='effects/vamp/audacity-LoadVamp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/vamp/audacity-LoadVamp.obj `if test -f 'effects/vamp/LoadVamp.cpp'; then $(CYGPATH_W) 'effects/vamp/LoadVamp.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/vamp/LoadVamp.cpp'; fi`

effects/vamp/audacity-VampEffect.o: effects/vamp/VampEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/vamp/audacity-VampEffect.o -MD -MP -MF effects/vamp/$(DEPDIR)/audacity-VampEffect.Tpo -c -o effects/vamp/audacity-VampEffect.o `test -f 'effects/vamp/VampEffect.cpp' || echo '$(srcdir)/'`effects/vamp/VampEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/vamp/$(DEPDIR)/audacity-VampEffect.Tpo effects/vamp/$(DEPDIR)/audacity-VampEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/vamp/VampEffect.cpp' object='effects/vamp/audacity-VampEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/vamp/audacity-VampEffect.o `test -f 'effects/vamp/VampEffect.cpp' || echo '$(srcdir)/'`effects/vamp/VampEffect.cpp

effects/vamp/audacity-VampEffect.obj: effects/vamp/VampEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/vamp/audacity-VampEffect.obj -MD -MP -MF effects/vamp/$(DEPDIR)/audacity-VampEffect.Tpo -c -o effects/vamp/audacity-VampEffect.obj `if test -f 'effects/vamp/VampEffect.cpp'; then $(CYGPATH_W) 'effects/vamp/VampEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/vamp/VampEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/vamp/$(DEPDIR)/audacity-VampEffect.Tpo effects/vamp/$(DEPDIR)/audacity-VampEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/vamp/VampEffect.cpp' object='effects/vamp/audacity-VampEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/vamp/audacity-VampEffect.obj `if test -f 'effects/vamp/VampEffect.cpp'; then $(CYGPATH_W) 'effects/vamp/VampEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/vamp/VampEffect.cpp'; fi`

effects/VST/audacity-VSTEffect.o: effects/VST/VSTEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/VST/audacity-VSTEffect.o -MD -MP -MF effects/VST/$(DEPDIR)/audacity-VSTEffect.Tpo -c -o effects/VST/audacity-VSTEffect.o `test -f 'effects/VST/VSTEffect.cpp' || echo '$(srcdir)/'`effects/VST/VSTEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/VST/$(DEPDIR)/audacity-VSTEffect.Tpo effects/VST/$(DEPDIR)/audacity-VSTEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/VST/VSTEffect.cpp' object='effects/VST/audacity-VSTEffect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/VST/audacity-VSTEffect.o `test -f 'effects/VST/VSTEffect.cpp' || echo '$(srcdir)/'`effects/VST/VSTEffect.cpp

effects/VST/audacity-VSTEffect.obj: effects/VST/VSTEffect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -MT effects/VST/audacity-VSTEffect.obj -MD -MP -MF effects/VST/$(DEPDIR)/audacity-VSTEffect.Tpo -c -o effects/VST/audacity-VSTEffect.obj `if test -f 'effects/VST/VSTEffect.cpp'; then $(CYGPATH_W) 'effects/VST/VSTEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/VST/VSTEffect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) effects/VST/$(DEPDIR)/audacity-VSTEffect.Tpo effects/VST/$(DEPDIR)/audacity-VSTEffect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='effects/VST/VSTEffect.cpp' object='effects/VST/audacity-VSTEffect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(audacity_CPPFLAGS) $(CPPFLAGS) $(audacity_CXXFLAGS) $(CXXFLAGS) -c -o effects/VST/audacity-VSTEffect.obj `if test -f 'effects/VST/VSTEffect.cpp'; then $(CYGPATH_W) 'effects/VST/VSTEffect.cpp'; else $(CYGPATH_W) '$(srcdir)/effects/VST/VSTEffect.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf blockfile/.libs blockfile/_libs
	-rm -rf xml/.libs xml/_libs
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(desktopdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(desktopdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktopdir)" || exit $$?; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(desktopdir)'; $(am__uninstall_files_from_dir)
install-dist_mimeDATA: $(dist_mime_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_mime_DATA)'; test -n "$(mimedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(mimedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(mimedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(mimedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(mimedir)" || exit $$?; \
	done

uninstall-dist_mimeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_mime_DATA)'; test -n "$(mimedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(mimedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES)
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) configwin.h configunix.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(mimedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f blockfile/$(DEPDIR)/$(am__dirstamp)
	-rm -f blockfile/$(am__dirstamp)
	-rm -f commands/$(DEPDIR)/$(am__dirstamp)
	-rm -f commands/$(am__dirstamp)
	-rm -f effects/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/$(am__dirstamp)
	-rm -f effects/VST/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/VST/$(am__dirstamp)
	-rm -f effects/audiounits/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/audiounits/$(am__dirstamp)
	-rm -f effects/ladspa/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/ladspa/$(am__dirstamp)
	-rm -f effects/lv2/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/lv2/$(am__dirstamp)
	-rm -f effects/nyquist/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/nyquist/$(am__dirstamp)
	-rm -f effects/vamp/$(DEPDIR)/$(am__dirstamp)
	-rm -f effects/vamp/$(am__dirstamp)
	-rm -f export/$(DEPDIR)/$(am__dirstamp)
	-rm -f export/$(am__dirstamp)
	-rm -f import/$(DEPDIR)/$(am__dirstamp)
	-rm -f import/$(am__dirstamp)
	-rm -f ondemand/$(DEPDIR)/$(am__dirstamp)
	-rm -f ondemand/$(am__dirstamp)
	-rm -f prefs/$(DEPDIR)/$(am__dirstamp)
	-rm -f prefs/$(am__dirstamp)
	-rm -f toolbars/$(DEPDIR)/$(am__dirstamp)
	-rm -f toolbars/$(am__dirstamp)
	-rm -f widgets/$(DEPDIR)/$(am__dirstamp)
	-rm -f widgets/$(am__dirstamp)
	-rm -f xml/$(DEPDIR)/$(am__dirstamp)
	-rm -f xml/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkLTLIBRARIES clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) blockfile/$(DEPDIR) commands/$(DEPDIR) effects/$(DEPDIR) effects/VST/$(DEPDIR) effects/audiounits/$(DEPDIR) effects/ladspa/$(DEPDIR) effects/lv2/$(DEPDIR) effects/nyquist/$(DEPDIR) effects/vamp/$(DEPDIR) export/$(DEPDIR) import/$(DEPDIR) ondemand/$(DEPDIR) prefs/$(DEPDIR) toolbars/$(DEPDIR) widgets/$(DEPDIR) xml/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-desktopDATA install-dist_mimeDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) blockfile/$(DEPDIR) commands/$(DEPDIR) effects/$(DEPDIR) effects/VST/$(DEPDIR) effects/audiounits/$(DEPDIR) effects/ladspa/$(DEPDIR) effects/lv2/$(DEPDIR) effects/nyquist/$(DEPDIR) effects/vamp/$(DEPDIR) export/$(DEPDIR) import/$(DEPDIR) ondemand/$(DEPDIR) prefs/$(DEPDIR) toolbars/$(DEPDIR) widgets/$(DEPDIR) xml/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-desktopDATA \
	uninstall-dist_mimeDATA

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-checkLTLIBRARIES clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-desktopDATA \
	install-dist_mimeDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-desktopDATA uninstall-dist_mimeDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
